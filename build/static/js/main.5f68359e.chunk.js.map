{"version":3,"sources":["assets/svg/colapsibleIcon.svg","styles/global.ts","styles/themes/ligth.ts","components/Layout/styles.ts","components/Aside/MenuItem/styles.ts","components/Aside/MenuItem/index.tsx","components/Aside/styles.ts","assets/images/logo.png","components/Aside/index.tsx","components/Content/styles.ts","components/Content/index.tsx","components/MainHeader/styles.ts","components/Dropdown/styles.ts","components/Dropdown/index.tsx","assets/images/profile.jpg","components/MainHeader/index.tsx","components/Layout/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","components/EmptyList/styles.ts","components/EmptyList/index.tsx","components/FieldSet/styles.ts","components/FieldSet/index.tsx","components/UnformFields/Input/styles.ts","components/UnformFields/Input/index.tsx","components/UnformFields/InputMaskd/styles.ts","components/UnformFields/InputMaskd/index.tsx","components/UnformFields/Select/styles.ts","components/UnformFields/Select/index.tsx","components/UnformFields/DatePicker/styles.ts","components/UnformFields/DatePicker/index.tsx","components/UnformFields/AvatarInput/styles.ts","assets/images/imagePlaceholder.png","components/UnformFields/AvatarInput/index.tsx","utils/masks.ts","pages/Client/CreateClient/styles.ts","services/apiClient.ts","pages/Client/CreateClient/index.tsx","utils/dateUtils.ts","pages/Client/Home/styles.ts","pages/Client/Home/index.tsx","pages/Client/ClientHistory/AddSkills/styles.ts","pages/Client/ClientHistory/AddSkills/index.tsx","pages/Client/ClientHistory/styles.ts","pages/Client/ClientHistory/index.tsx","pages/Errors/PageNotFound/styles.ts","pages/Errors/PageNotFound/index.tsx","components/UnformFields/ButtonInput/styles.ts","components/UnformFields/ButtonInput/index.tsx","pages/Client/ClientHistory/ServiceDetails/styles.ts","pages/Client/ClientHistory/ServiceDetails/index.tsx","pages/Client/index.tsx","components/ContentHeader/styles.ts","components/ContentHeader/index.tsx","components/SelectInput/styles.ts","components/SelectInput/index.tsx","components/HistoryFinanceCard/styles.ts","components/HistoryFinanceCard/index.tsx","pages/List/styles.ts","pages/List/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/Providers/CreateProvider/styles.ts","pages/Providers/CreateProvider/index.tsx","pages/Providers/Home/styles.ts","pages/Providers/Home/index.tsx","pages/Providers/index.tsx","pages/Products/CreateProduct/styles.ts","pages/Products/CreateProduct/index.tsx","pages/Products/Home/styles.ts","pages/Products/Home/index.tsx","pages/Products/index.tsx","components/UnformFields/TextArea/styles.ts","components/UnformFields/TextArea/index.tsx","pages/Services/CreateService/styles.ts","pages/Services/CreateService/index.tsx","pages/Services/Home/styles.ts","pages/Services/Home/index.tsx","pages/Services/index.tsx","pages/Schedule/styles.ts","pages/Schedule/index.tsx","pages/Financial/Inputs/AddInputs/styles.ts","pages/Financial/Inputs/AddInputs/index.tsx","pages/Financial/Inputs/styles.ts","pages/Financial/Inputs/index.tsx","pages/Financial/Outputs/AddOutputs/styles.ts","pages/Financial/Outputs/AddOutputs/index.tsx","pages/Financial/Outputs/styles.ts","pages/Financial/Outputs/index.tsx","pages/Financial/CashRegister/styles.ts","pages/Financial/CashRegister/ViewComanda/styles.ts","pages/Financial/CashRegister/ViewComanda/index.tsx","pages/Financial/CashRegister/index.tsx","components/UnformFields/CheckBox/styles.ts","components/UnformFields/CheckBox/index.tsx","pages/Financial/Comandas/CreateComanda/styles.ts","pages/Financial/Comandas/CreateComanda/index.tsx","pages/Financial/Comandas/styles.ts","pages/Financial/Comandas/index.tsx","pages/Financial/Accounts Payable/AddOutputs/styles.ts","pages/Financial/Accounts Payable/AddOutputs/index.tsx","pages/Financial/Accounts Payable/PaymentDelete/styles.ts","pages/Financial/Accounts Payable/PaymentDelete/index.tsx","pages/Financial/Accounts Payable/EditOutputs/styles.ts","pages/Financial/Accounts Payable/EditOutputs/index.tsx","pages/Financial/Accounts Payable/styles.ts","pages/Financial/Accounts Payable/index.tsx","pages/Financial/Comissões/styles.ts","pages/Financial/Comissões/index.tsx","pages/Financial/index.tsx","pages/Stock/StockInput/styles.ts","pages/Stock/StockInput/index.tsx","pages/Stock/StockOutput/styles.ts","pages/Stock/StockOutput/index.tsx","pages/Stock/StockInput/StockEntryXML/styles.ts","pages/Stock/StockInput/StockEntryXML/index.tsx","components/UnformFields/NumericInput/styles.ts","components/UnformFields/NumericInput/index.tsx","pages/Stock/StockInput/StockEntryManual/styles.ts","pages/Stock/StockInput/StockEntryManual/index.tsx","pages/Stock/StockOutput/StockExit/styles.ts","pages/Stock/StockOutput/StockExit/index.tsx","pages/Stock/Promotions/styles.ts","pages/Stock/Promotions/index.tsx","pages/Stock/Purchases/styles.ts","pages/Stock/Purchases/index.tsx","pages/Stock/index.tsx","pages/Help/Questions/styles.ts","pages/Help/Questions/index.tsx","pages/Help/index.tsx","pages/Artist/Home/styles.ts","pages/Artist/Home/index.tsx","pages/Artist/CreateArtist/AddSkills/styles.ts","pages/Artist/CreateArtist/AddSkills/index.tsx","pages/Artist/CreateArtist/styles.ts","pages/Artist/CreateArtist/index.tsx","pages/Artist/index.tsx","pages/Establishment/CardOperator/styles.ts","pages/Establishment/CardOperator/index.tsx","pages/Establishment/PaymentOptions/styles.ts","pages/Establishment/PaymentOptions/index.tsx","pages/Establishment/Expenses/styles.ts","pages/Establishment/Expenses/index.tsx","components/UnformFields/VideoInput/styles.ts","components/UnformFields/VideoInput/index.tsx","pages/Establishment/Campaign/styles.ts","pages/Establishment/Campaign/index.tsx","pages/Establishment/styles.ts","pages/Establishment/index.tsx","routes/app.routes.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","darken","colapsibleCustomIcon","title","color","primary","secondary","tertiary","white","black","gray","success","info","warning","Container","styled","div","MenuItemLink","Link","props","theme","SubMenuItemLink","MenuItem","link","Icon","icon","subItens","grouppedItem","externalLink","to","pathname","className","target","length","map","subItem","Header","header","Footer","a","LogImg","img","MenuContainer","nav","Aside","useState","MenuItens","MdEventNote","MdDashboard","MdPerson","MdBorderColor","MdGroup","RiTruckFill","RiHandSanitizerFill","MdWork","MdAttachMoney","MdArrowUpward","MdArrowDownward","MdInsertDriveFile","FaCashRegister","FaMoneyCheckAlt","IoMdCalculator","AiOutlineCodeSandbox","RiInboxArchiveLine","RiInboxUnarchiveLine","IoMdPricetags","MdLocalGroceryStore","MdStore","MdLiveHelp","MdChat","BsQuestionCircle","FiYoutube","useEffect","menuItemList","Array","from","document","getElementsByClassName","subMenuItemList","sidenavEl","getElementById","forEach","item","addEventListener","el","getAttribute","classList","contains","remove","add","ele","panel","nextElementSibling","removeAttribute","setAttribute","id","size","src","Logo","alt","Content","children","Profile","h3","Dropdown","options","type","option","href","onClick","clickEvent","MainHeader","ProfilePhoto","Layout","menuIconEl","sidenavCloseEl","toggleClassName","PieChart","BarChart","ChartsContainer","CardsContainer","CardsContainer2","Card","lighten","Dashboard","data","labels","datasets","label","backgroundColor","scales","y","grid","borderColor","tickColor","ticks","callback","value","beginAtZero","x","responsive","height","width","plugins","legend","position","EmptyList","subtitle","FieldSet","textTransform","Input","name","LabelIcon","customMask","labelIcon","rest","inputRef","useRef","useField","fieldName","defaultValue","registerField","error","clearError","path","ref","current","style","htmlFor","marginBottom","marginRight","rotate","keyframes","attrs","disabled","loading","css","showLoadingIcon","onChangeCallback","setValue","getValue","clearValue","onChange","event","Select","placeholder","selectRef","isMulti","state","escapeClearsValue","classNamePrefix","registerLocale","pt","DatePicker","initialDate","datepickerRef","Date","replace","date","setDate","clear","selected","locale","dateFormat","ImageInput","imagePlaceholder","selectedFile","setSelectedFile","handlePreview","useCallback","e","file","files","URL","createObjectURL","accept","cpfMask","cnpjMask","SectionButton","button","horizontalLine","CreateClientForm","Form","CreateClientModal","Modal","api","axios","create","baseURL","config","API_SERVICE_HOST","API_SERVICE_PORT","headers","responseType","interceptors","response","use","Error","Promise","reject","CreateClient","saveClient","show","setShow","cepLoading","setCepLoading","setCnpjLoading","formRef","showPreferencesContainer","setShowPreferencesContainer","showAddressContainer","setShowAddressContainer","tipoPessoa","setTipoPessoa","uf","city","currentUfAndCity","setCurrentUfAndCity","handleClose","ufsList","brasilStatesAndCities","estados","sigla","nome","handleCreateClientSubmit","dataDeNascimento","format","setMilliseconds","setSeconds","setMinutes","setHours","console","log","setErrors","schema","Yup","shape","required","email","whatsapp","porcentagemDescontoServicos","test","valor","Number","parseInt","porcentagemDescontoProdutos","numeroCPFouCNPJ","cpf","isValid","cnpj","validate","abortEarly","validationErrors","inner","message","onHide","dialogClassName","backdrop","Title","Body","onSubmit","isSearchable","blurInputOnSelect","openMenuOnFocus","cnpjNumber","RegExp","apiClient","get","then","setFieldError","getFieldValue","cep","setData","razao_social","address","catch","errorMessage","status","finally","mask","AvatarInput","FaWhatsapp","FaInstagram","FaTwitter","IoLogoTiktok","FaFacebook","bairro","neighborhood","logradouro","street","estado","find","noOptionsMessage","elem","cidades","form","ClientHeaderContainer","Clients","sexo","RG","avatarImage","endereco","numero","complemento","cidade","instagram","twitter","facebook","indocadoPor","idArtista1","idArtista2","coloracaoCabelo","tipoDePele","tipoDeUnha","clientsList","setClientsList","clientData","Table","client","index","updatedClientList","filter","_","clientIndex","AddSkillModal","AddSkills","ClientHistoryContainer","PageTitle","ClientHistory","history","useHistory","push","PageNotFound","ServiceHistoryContainer","ServiceDetails","ButtonInput","Artist","useRouteMatch","exact","component","Home","TitleContainer","lineColor","Controllers","ContentHeader","SelectInput","li","Tag","HistoryFinanceCard","tagColor","amount","Filters","List","match","params","useMemo","text","SignIn","CreateProvider","setLoading","currentState","setCurrentState","states","cities","razaoSocial","clearField","isDisabled","ProviderHeaderContainer","contato","providersList","setProvidersList","provider","updatedProviderList","providerIndex","Providers","showConfigContainer","setShowConfigContainer","typeComissionOptions","marca","tipo","precoDeVenda","Products","WeekSchedule","showCommissionContainer","setShowCommissionContainer","showDiferentPriceContainer","setShowDiferentPriceContainer","groupOptions","TextArea","categoria","tempoDeExecucao","FilterContainer","EventContainer","ResourceHeader","Event","CalendarContainer","ButtonContainer","CreateEventForm","moment","localizer","momentLocalizer","Schedule","showEventModal","setShowEventModal","showAttendanceModal","resourceId","cellPhone","preference","servicos","start","end","eventData","setEventData","descricao","duracao","preco","events","handleCloseEventModal","handleShowEventModal","handleShowStopAttendanceModal","handleCreateEventSubmit","buttonRight","buttonLeft","onclick","scrollLeft","left","siblings","parentElement","c","display","zIndex","speakerEdit","Popover","speakerPlay","speakerStop","speakerConfirm","speakerCancel","speakerClientIsHere","Drawer","toolbar","components","resourceHeader","resource","duration","diff","total","Whisper","placement","trigger","speaker","overflow","service","hours","minutes","defaultView","onSelectSlot","selectData","selectable","popup","resources","allday","defaultDate","CreateInputForm","AddInputs","showClientInput","setShowClientInput","paymentOptions","expensesOptions","documentOptions","SearchContainer","Inputs","AddOutputs","fornecedorOptions","colaboradorOptions","Card2","Card3","Section1","Section2","p","discountType","TotalValue","PendingValue","PaymentContainer","CreateComandaModal","showPaymentContainer","setShowPaymentContainer","contentEditable","onInput","innerText","CashRegister","selecteDate","maintainAspectRatio","barThickness","ViewComanda","Checkbox","checked","setChecked","defaultChecked","CreateComandaForm","CustomInput","ConfigurePaymentForm","AddComandaMenu","professionalsList","types","discountTypes","servicesList","saveComanda","currentForm","setCurrentForm","setDiscountType","ComandaHeaderContainer","Comandas","comandasList","setComandasList","selectedDate","comanda","PaymentHeaderContainer","searchTypeOptions","startDate","setStartDate","endDate","setEndDate","paymentSearchTerm","setPaymentSearchTerm","searchType","setSearchType","credor","paymentsList","payment","Object","values","some","toLocaleUpperCase","startsWith","PaymentDelete","CommissionHeaderContainer","GroupSelectContainer","CheckBoxContainer","CommissionPaymentForm","CommissionPaymentContainer","RescissionPaymentForm","filterOptions","ComissionOptions","artistsGroup","Comissões","paymentDate","setPaymentDate","filterType","selectedArtists","setSelectedArtists","valorDisponivel","valorBloqueado","valorTotal","artistsList","artist","CheckBox","includes","updatedArtistList","artistIndex","compareAsc","Financial","Outputs","AcountsPayable","Commissions","UploadXML","StockHeaderContainer","Management","buttonRef","attributeNamePrefix","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","trimValues","cdataTagName","cdataPositionChar","parseTrueNumberOnly","arrayMode","stopNodes","fetch","str","parser","parse","handleUploadXMLSubmit","CreateNoteForm","StockEntryXML","location","useLocation","nfData","setNFData","dataEmissao","nfeProc","NFe","infNFe","ide","dhEmi","numeroNF","nNF","serie","chaveAcesso","Id","natureza","natOp","fornecedor","emit","xNome","cnpjFornecedor","CNPJ","destinatario","dest","cnpjOrCpfDestinario","CPF","entregador","transp","transporta","cnpjEntregador","modFrete","impostos","vTotTrib","ICMSTot","vTotNF","vNF","vProd","vFrete","vBC","vICMS","vBCST","vST","vSeg","vDesc","vOutro","vIPI","items","det","toLocaleDateString","NumericInput","onBlur","Total","PaymentConfig","unityOptions","finalizadoraOptions","openMenuOnFocuss","operationOptions","PromotionHeaderContainer","Promotions","selectedProducts","setSelectedProducts","qtd","precoCusto","valorVenda","sugestaoVenda","novoValor","productsList","product","updatedProductsList","productIndex","qtdIdeal","Stock","StockEntryManual","Output","StockExit","Purchases","QuestionsHeaderContainer","Questions","Accordion","defaultActiveKey","Item","eventKey","Help","ArtistHeaderContainer","PageFooter","WeekScheduleContainer","DayScheduleItem","CreateArtistForm","currentUf","setCurrentUf","showEndOfWorkDate","setShowEndOfWorkDate","currentCities","comissionTypeOptions","CreateArtist","CardOperator","currentPaymentForm","setCurrentPaymentForm","cardPaymentOptions","Expenses","FileInput","controls","CreateEstablismentForm","CustomFieldSet","Establishment","handleCreateEstablishmentSubmit","PaymentOptions","Campaign","columns","selector","sortable","right","ano","vencimento","pagination","Routes","Client","Services","App","ligth","ReactDOM","render"],"mappings":"25yFAAe,G,qBAAA,IAA0B,4C,+1KCO1BA,kCAAf,IA4E0BC,YAAO,IAAM,WA2BbA,YAAO,IAAM,WA8HRC,GC5OhB,GACXC,MAAO,QACPC,MAAO,CACHC,QAAS,UACTC,UAAW,OACXC,SAAU,UAEVC,MAAO,OACPC,MAAO,OACPC,KAAM,UAENC,QAAS,UACTC,KAAM,UACNC,QAAS,Y,2jDCXV,IAAMC,EAAYC,UAAOC,IAAV,K,uzECEf,IAAMF,EAAYC,UAAOC,IAAV,IAEMf,YAAO,IAAM,WA4CnBA,YAAO,IAAM,YAKtBgB,EAAeF,kBAAOG,IAAPH,CAAH,KACL,SAAAI,GAAK,OAAIA,EAAMC,MAAMhB,MAAMQ,OAanBX,YAAO,IAAM,YA2B5BoB,EAAkBN,kBAAOG,IAAPH,CAAH,KCnCbO,EA9C4B,SAAC,GAOrC,IANHC,EAME,EANFA,KACMC,EAKJ,EALFC,KACAtB,EAIE,EAJFA,MACAuB,EAGE,EAHFA,SACAC,EAEE,EAFFA,aACAC,EACE,EADFA,aAEA,OACI,eAAC,EAAD,WACI,eAACX,EAAD,CACIY,GAAID,EAAe,CAAEE,SAAUP,GAASA,GAAQ,GAChDQ,UAAU,OACVC,OAAQJ,EAAe,SAAW,GAHtC,UAKI,gCACI,cAACJ,EAAD,IACCrB,KAEJwB,GAAgB,cAAC,IAAD,OAErB,qBAAKI,UAAU,cAAf,SAC0B,KAAb,OAARL,QAAQ,IAARA,OAAA,EAAAA,EAAUO,QAAV,OACGP,QADH,IACGA,OADH,EACGA,EAAUQ,KAAI,SAAAC,GAAO,OACjB,eAACd,EAAD,CACIU,UAAU,UAEVF,GACIM,EAAQP,aACF,CAAEE,SAAUK,EAAQZ,MACpBY,EAAQZ,MAAQ,GAE1BS,OAAQG,EAAQP,aAAe,SAAW,GAR9C,UAUI,cAACO,EAAQV,KAAT,IACCU,EAAQhC,QATJgC,EAAQhC,UAarB,mC,ugFCnDb,IAAMW,EAAYC,UAAOC,IAAV,KAoBS,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAME,aAErB,SAAAa,GAAK,OAAIA,EAAMC,MAAMhB,MAAMM,QA0BnD0B,EAASrB,UAAOsB,OAAV,KAYNC,EAASvB,UAAOwB,EAAV,IAKDtC,YAAO,IAAM,WAaHA,YAAO,IAAM,YAK5BuC,EAASzB,UAAO0B,IAAV,KAKNC,EAAgB3B,UAAO4B,IAAV,IASE1C,YAAO,IAAM,YCpG1B,MAA0B,iCC6W1B2C,EAjUS,WAAO,IAAD,EACUC,mBAAS,IADnB,mBAGpBC,GAHoB,UAGR,CACd,CACI3C,MAAO,SACPsB,KAAMsB,IACNxB,KAAM,YACNG,SAAU,IAEd,CACIvB,MAAO,YACPsB,KAAMuB,IACNzB,KAAM,aACNG,SAAU,CACN,CAAEvB,MAAO,SAAUsB,KAAMwB,IAAU1B,KAAM,KACzC,CAAEpB,MAAO,eAAasB,KAAMwB,IAAU1B,KAAM,KAC5C,CAAEpB,MAAO,gBAAcsB,KAAMwB,IAAU1B,KAAM,KAC7C,CAAEpB,MAAO,WAAYsB,KAAMwB,IAAU1B,KAAM,KAC3C,CAAEpB,MAAO,QAASsB,KAAMwB,IAAU1B,KAAM,KACxC,CAAEpB,MAAO,eAAasB,KAAMwB,IAAU1B,KAAM,KAC5C,CAAEpB,MAAO,SAAUsB,KAAMwB,IAAU1B,KAAM,KACzC,CAAEpB,MAAO,QAASsB,KAAMwB,IAAU1B,KAAM,KACxC,CAAEpB,MAAO,aAAWsB,KAAMwB,IAAU1B,KAAM,KAC1C,CAAEpB,MAAO,UAAWsB,KAAMwB,IAAU1B,KAAM,KAC1C,CAAEpB,MAAO,OAAQsB,KAAMwB,IAAU1B,KAAM,KACvC,CAAEpB,MAAO,kBAAmBsB,KAAMwB,IAAU1B,KAAM,KAClD,CAAEpB,MAAO,kBAAmBsB,KAAMwB,IAAU1B,KAAM,KAClD,CAAEpB,MAAO,kBAAmBsB,KAAMwB,IAAU1B,KAAM,KAClD,CAAEpB,MAAO,qBAAmBsB,KAAMwB,IAAU1B,KAAM,OAG1D,CACIpB,MAAO,YACPsB,KAAMyB,IACN3B,KAAM,OACNG,SAAU,CACN,CAAEvB,MAAO,WAAYsB,KAAMwB,IAAU1B,KAAM,YAC3C,CACIpB,MAAO,WACPsB,KAAM0B,IACN5B,KAAM,WACNG,SAAU,CACN,CACIvB,MAAO,SACPsB,KAAMsB,IACNxB,KAAM,IACNG,SAAU,CACN,CACIvB,MAAO,QACPsB,KAAM2B,IACN7B,KAAM,OAIlB,CACIpB,MAAO,QACPsB,KAAMsB,IACNxB,KAAM,OAIlB,CACIpB,MAAO,eACPsB,KAAM2B,IACN7B,KAAM,cAEV,CACIpB,MAAO,WACPsB,KAAM4B,IACN9B,KAAM,aAEV,CAAEpB,MAAO,cAAYsB,KAAM6B,IAAQ/B,KAAM,eAGjD,CACIpB,MAAO,aACPsB,KAAM8B,IACNhC,KAAM,OACNG,SAAU,CACN,CACIvB,MAAO,oCACPsB,KAAM+B,IACNjC,KAAM,qBAEV,CACIpB,MAAO,+BACPsB,KAAMgC,IACNlC,KAAM,sBAEV,CACIpB,MAAO,WACPsB,KAAMiC,IACNnC,KAAM,uBAEV,CACIpB,MAAO,QACPsB,KAAMkC,IACNpC,KAAM,mBAEV,CACIpB,MAAO,iBACPsB,KAAMmC,IACNrC,KAAM,+BAEV,CACIpB,MAAO,eACPsB,KAAMoC,IACNtC,KAAM,4BAIlB,CACIpB,MAAO,UACPsB,KAAMqC,IACNvC,KAAM,OACNG,SAAU,CACN,CACIvB,MAAO,UACPsB,KAAMsC,IACNxC,KAAM,2BAEV,CACIpB,MAAO,WACPsB,KAAMuC,IACNzC,KAAM,4BAEV,CACIpB,MAAO,gCACPsB,KAAMwC,IACN1C,KAAM,qBAEV,CACIpB,MAAO,yBACPsB,KAAMyC,IACN3C,KAAM,sBAIlB,CACIpB,MAAO,kBACPsB,KAAM0C,IACN5C,KAAM,iBACNG,SAAU,IAEd,CACIvB,MAAO,QACPsB,KAAM2C,IACN7C,KAAM,SACNG,SAAU,CACN,CACIvB,MAAO,eACPsB,KAAM4C,IACN9C,KAAM,KAEV,CACIpB,MAAO,uBACPsB,KAAM6C,IACN/C,KAAM,mBAEV,CACIpB,MAAO,gBACPsB,KAAM8C,IACNhD,KACI,2DACJK,cAAc,OAkG9B,OA1EA4C,qBAAU,WACN,IAAMC,EAAeC,MAAMC,KACvBC,SAASC,uBACL,SAIFC,EAAkBJ,MAAMC,KAC1BC,SAASC,uBACL,YAIFE,EAAYH,SAASI,eAAe,YAE1CF,EAAgBG,SAAQ,SAAAC,GACpBA,EAAKC,iBAAiB,SAAS,WAC3B,IAAyBC,EAAarD,EAQJ,SAA9BmD,EAAKG,aAAa,UARgBtD,EASP,UATNqD,EASLL,GARTO,UAAUC,SAASxD,GACtBqD,EAAGE,UAAUE,OAAOzD,GAEpBqD,EAAGE,UAAUG,IAAI1D,UAUjC0C,EAAaQ,SAAQ,SAAAC,GACjBA,EAAKC,iBAAiB,SAAS,WAC3BV,EAAaQ,SAAQ,SAAAS,GACjB,IAAMC,EAAQD,EAAIE,mBAEdF,IAAQR,GAAQQ,EAAIJ,UAAUC,SAAS,YACvCI,EAAME,gBAAgB,SACtBH,EAAIJ,UAAUE,OAAO,UACrBE,EAAIJ,UAAUE,OAAO,iBACrBE,EAAIJ,UAAUG,IAAI,sBAI1B,IAeyBL,EAAarD,EAfhC4D,EAAQT,EAAKU,mBAEfV,EAAKI,UAAUC,SAAS,WACxBI,EAAME,gBAAgB,SACtBX,EAAKI,UAAUE,OAAO,UACtBN,EAAKI,UAAUE,OAAO,iBACtBN,EAAKI,UAAUG,IAAI,oBAEnBE,EAAMG,aAAa,QAAS,oBAC5BZ,EAAKI,UAAUG,IAAI,UACnBP,EAAKI,UAAUE,OAAO,kBACtBN,EAAKI,UAAUG,IAAI,kBAYW,SAA9BP,EAAKG,aAAa,UARgBtD,EASP,UATNqD,EASLL,GARTO,UAAUC,SAASxD,GACtBqD,EAAGE,UAAUE,OAAOzD,GAEpBqD,EAAGE,UAAUG,IAAI1D,YASlC,IAGC,eAAC,EAAD,CAAWgE,GAAG,WAAd,UACI,qBAAKA,GAAG,aAAR,SACI,cAAC,IAAD,CAASC,KAAM,OAEnB,gCACI,cAAC5D,EAAD,UACI,cAACI,EAAD,CAAQyD,IAAKC,EAAMC,IAAI,WAI3B,cAAC,IAAD,UAaI,cAACzD,EAAD,CAAeqD,GAAG,gBAAlB,SACKjD,EAAUZ,KAAI,SAAAgD,GAAI,OAUf,aATA,CASC,EAAD,CAEI/E,MAAO+E,EAAK/E,MACZsB,KAAMyD,EAAKzD,KACXF,KAAM2D,EAAK3D,KACXI,cAAY,EACZD,SAAUwD,EAAKxD,UALVwD,EAAK/E,iBAc9B,eAACmC,EAAD,WACI,cAAC,IAAD,IADJ,c,+aCnWL,IAAMxB,EAAYC,UAAOC,IAAV,KACS,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAMC,WAE7C,SAAAc,GAAK,OAAIA,EAAMC,MAAMhB,MAAMI,SAUZ,SAAAW,GAAK,OAAIA,EAAMC,MAAMhB,MAAME,aAK3B,SAAAa,GAAK,OAAIA,EAAMC,MAAMhB,MAAMG,YCbxC6F,EAJW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OAAO,cAAC,EAAD,UAAYA,K,mrCCFhB,IAAMvF,EAAYC,UAAOC,IAAV,KACS,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAME,aASpB,SAAAa,GAAK,OAAIA,EAAMC,MAAMhB,MAAMM,QAmBpD4F,GAAUvF,UAAOC,IAAV,KAaA,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAMI,SAGxBO,UAAOwF,GAAV,K,imCC7Cb,IAAMzF,GAAYC,UAAOC,IAAV,MC6CPwF,GA9B4B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAAStG,EAAY,EAAZA,MACnD,OACI,cAAC,GAAD,UACI,sBAAK4B,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAU2E,KAAK,SAAjC,UACKvG,EACD,cAAC,IAAD,CAAqB6F,KAAM,QAE/B,qBAAKjE,UAAU,mBAAf,SACK0E,EAAQvE,KAAI,SAAAyE,GAAM,OACfA,EAAO/E,aACH,mBAAsBgF,KAAMD,EAAOpF,KAAnC,SACKoF,EAAOxG,OADJwG,EAAOxG,OAIf,cAAC,IAAD,CAEI0B,GAAI8E,EAAOpF,KACXsF,QAASF,EAAOG,WAHpB,SAKKH,EAAOxG,OAJHwG,EAAOxG,kBCjC7B,OAA0B,oCCgD1B4G,GAxCc,WAmBzB,OACI,eAAC,EAAD,WAMI,wBACA,eAACT,GAAD,WAGI,cAAC,GAAD,CAAUnG,MAAM,mBAAmBsG,QA7B3B,CAChB,CACItG,MAAO,SACPoB,KAAM,GACNK,cAAc,GAElB,CACIzB,MAAO,SACPoB,KAAM,GACNK,cAAc,GAElB,CACIzB,MAAO,SACPoB,KAAM,GACNK,cAAc,MAgBV,qBAAKqE,IAAKe,GAAcb,IAAI,mBCO7Bc,GAtCU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SA0BxB,OAzBA7B,qBAAU,WACN,IAAM0C,EAAatC,SAASI,eAAe,aACrCD,EAAYH,SAASI,eAAe,YAEpCmC,EAAiBvC,SAASI,eAC5B,cAGJ,SAASoC,EAAgBhC,EAAarD,GAC9BqD,EAAGE,UAAUC,SAASxD,GACtBqD,EAAGE,UAAUE,OAAOzD,GAEpBqD,EAAGE,UAAUG,IAAI1D,GAIzBmF,EAAW/B,iBAAiB,SAAS,WACjCiC,EAAgBrC,EAAW,aAG/BoC,EAAehC,iBAAiB,SAAS,WACrCiC,EAAgBrC,EAAW,eAEhC,IAGC,eAACjE,EAAD,WACI,qBAAKiF,GAAG,YAAR,SACI,cAAC,IAAD,CAAQC,KAAM,OAElB,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAAUK,Q,8mHCtCf,IAAMvF,GAAYC,UAAOC,IAAV,MAqBTqG,GAAWtG,UAAOC,IAAV,MAmBRsG,GAAWvG,UAAOC,IAAV,MAkBRuG,GAAkBxG,UAAOC,IAAV,MAmBfwG,GAAiBzG,UAAOC,IAAV,MAgBdyG,GAAkB1G,UAAOC,IAAV,MAcf0G,GAAO3G,UAAOC,IAAV,KA4BW2G,YAAQ,IAAM,YCyE3BC,GApMa,WAyGxB,OACI,eAAC,GAAD,WACI,2CACA,2DACA,eAACJ,GAAD,WACI,eAACE,GAAD,WACI,2DACA,gCACI,2CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,gEACA,gCACI,0CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,4DACA,gCACI,0CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,qDACA,gCACI,0CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,8CACA,gCACI,2CACA,cAAC,IAAD,aAIZ,eAACH,GAAD,WACI,eAACD,GAAD,WACI,qBAAKvF,UAAU,SAAf,SACI,sBAAMA,UAAU,QAAhB,oDAIJ,cAAC,KAAD,CAAK2E,KAAK,GAAGmB,KA5Ib,CACZC,OAAQ,CACJ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OA0BJC,SAAU,CACN,CACIC,MAAO,UACPH,KAAM,CAAC,IAAK,KAAM,KAAM,MACxBI,gBAAiB,WAErB,CACID,MAAO,UACPH,KAAM,CAAC,IAAK,IAAK,IAAK,KACtBI,gBAAiB,aA4FexB,QAvFzB,CACfyB,OAAQ,CACJC,EAAG,CACCC,KAAM,CACFhI,MAAO,QACPiI,YAAa,QACbC,UAAW,SAEfC,MAAO,CACHC,SADG,SACMC,GACL,MAAM,MAAN,OAAaA,IAEjBC,aAAa,IAGrBC,EAAG,CACCP,KAAM,CACFhI,MAAO,QACPiI,YAAa,QACbC,UAAW,WAIvBM,YAAY,QAkEJ,eAACvB,GAAD,WACI,qBAAKtF,UAAU,SAAf,SACI,sBAAMA,UAAU,QAAhB,kCAEJ,cAAC,KAAD,CACI8G,OAAQ,IACRC,MAAO,IACPpC,KAAK,GACLmB,KAlKJ,CACZC,OAAQ,CAAC,iBAAkB,sBAC3BC,SAAU,CACN,CACIC,MAAO,aACPH,KAAM,CAAC,IAAK,MACZI,gBAAiB,CAAC,UAAW,WAC7BI,YAAa,CAAC,OAAQ,WA4Jd5B,QAxED,CACfmC,YAAY,EACZG,QAAS,CACLC,OAAQ,CACJC,SAAU,iBAuEV,eAACxB,GAAD,WACI,yDACA,eAACC,GAAD,WACI,qCACA,gCACI,0CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,uCACA,gCACI,2CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,uCACA,gCACI,2CACA,cAAC,IAAD,oB,4aCxMrB,IAAM5G,GAAYC,UAAOC,IAAV,MCkBPkI,GAV8B,SAAC,GAAyB,IAAvB/I,EAAsB,EAAtBA,MAAOgJ,EAAe,EAAfA,SACnD,OACI,eAAC,GAAD,WACI,cAAC,IAAD,IACA,iCAAShJ,IACT,+BAAOgJ,Q,upBCTZ,IAAMrI,GAAYC,UAAOC,IAAV,MAWF,SAAAG,GAAK,OAAIA,EAAMhB,SCJpBiJ,GAJmB,SAAC,GAAyB,IAAvB/C,EAAsB,EAAtBA,SAAUlG,EAAY,EAAZA,MAC3C,OAAO,cAAC,GAAD,CAAWA,MAAOA,EAAlB,SAA0BkG,K,sgDCJ9B,IAAMvF,GAAYC,UAAOC,IAAV,MA8CI,SAAAG,GAAK,OAAIA,EAAMkI,iBCwB1BC,GAzDqB,SAAC,GAO9B,IANHC,EAME,EANFA,KACAvB,EAKE,EALFA,MACAqB,EAIE,EAJFA,cAEWG,GAET,EAHFC,WAGE,EAFFC,WACGC,EACD,0EACIC,EAAWC,iBAAyB,MADxC,EAEwBhH,mBAAS,IAFjC,gCASEiH,aAASP,IALTQ,EAJF,EAIEA,UACAC,EALF,EAKEA,aACAC,EANF,EAMEA,cACAC,EAPF,EAOEA,MAPF,EAQEC,WASJ,OAPA3F,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNK,KAAM,QACNC,IAAKT,EAASU,YAEnB,CAACP,EAAWE,IAEX,eAAC,GAAD,CAAWZ,cAAeA,GAAiB,aAA3C,UACKrB,GACG,gCACI,uBACIuC,MAAO,CAAEnK,MAAO8J,EAAQ,UAAY,IACpCM,QAAST,EAFb,SAIK/B,IAEJwB,GAAa,cAACA,EAAD,OAGtB,oCACIzD,GAAIgE,EACJM,IAAKT,EAKLW,MAAO,CAAElC,YAAa6B,EAAQ,UAAY,IAC1CF,aAAcA,GACVL,IAEPO,GACG,uBAAMK,MAAO,CAAEnK,MAAO,UAAWqK,aAAc,OAA/C,UACI,cAAC,IAAD,CAAgBzE,KAAM,GAAIuE,MAAO,CAAEG,YAAa,SAC/CR,S,mmEC/DrB,IAAMS,GAASC,oBAAH,MAUC9J,GAAYC,UAAOC,IAAI6J,OAAmB,kBAAkB,CACrEC,SADmD,EAAGC,WAAjChK,CAAH,MA4CQ,SAAAI,GAAK,OAAIA,EAAMkI,iBAanC,SAAAlI,GAAK,OACHA,EAAM4J,SACNC,cADA,KAQqBL,OCMlBrB,GArEqB,SAAC,GAS9B,IARHC,EAQE,EARFA,KACAvB,EAOE,EAPFA,MACA+C,EAME,EANFA,QACA1B,EAKE,EALFA,cACA4B,EAIE,EAJFA,gBACWzB,EAGT,EAHFE,UACAwB,EAEE,EAFFA,iBACGvB,EACD,4GACIC,EAAWC,iBAAO,MADtB,EAEwDC,aAASP,GAA3DQ,EAFN,EAEMA,UAAWE,EAFjB,EAEiBA,cAAeD,EAFhC,EAEgCA,aAAcE,EAF9C,EAE8CA,MAF9C,EAGwBrH,mBAAiB,IAHzC,mBAGK4F,EAHL,KAGY0C,EAHZ,KAiBF,OAZA3G,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKT,EAASU,QACdc,SAHU,WAIN,OAAO3C,GAEX4C,WANU,WAONF,EAAS,SAGlB,CAACpB,EAAWE,EAAexB,IAE1B,eAAC,GAAD,CACIY,cAAeA,GAAiB,aAChC0B,QAASA,EAFb,UAIK/C,GACG,gCACI,uBACIwC,QAAST,EACTQ,MAAO,CAAEnK,MAAO8J,EAAQ,UAAY,IAFxC,SAIKlC,IAEJwB,GAAa,cAACA,EAAD,OAGtB,gCACI,cAAC,KAAD,cACIa,IAAKT,EACLI,aAAcA,EACdvB,MAAOA,EACP8B,MAAO,CAAElC,YAAa6B,EAAQ,UAAY,IAC1CY,SAAUC,EACVO,SAAU,SAAAC,GACFL,GACAA,EAAiBK,GAGrBJ,EAASI,EAAMvJ,OAAOyG,SAEtBkB,IAEPsB,GAAmBF,GAAW,cAAC,IAAD,CAAWhF,GAAG,mBAEhDmE,GACG,uBAAMK,MAAO,CAAEnK,MAAO,UAAWqK,aAAc,OAA/C,UACI,cAAC,IAAD,CAAgBzE,KAAM,GAAIuE,MAAO,CAAEG,YAAa,SAC/CR,S,obCjFd,IAAMpJ,GAAYC,UAAOC,IAAV,MCkFPwK,GAnEiB,SAAC,GAA2C,IAAzCjC,EAAwC,EAAxCA,KAAMvB,EAAkC,EAAlCA,MAAOyD,EAA2B,EAA3BA,YAAgB9B,EAAW,+CACjE+B,EAAY7B,iBAAO,MAD8C,EAEbC,aAASP,GAA3DQ,EAF+D,EAE/DA,UAAWC,EAFoD,EAEpDA,aAAcC,EAFsC,EAEtCA,cAAeC,EAFuB,EAEvBA,MAFuB,EAG7CrH,mBAASmH,GAHoC,mBAGhEvB,EAHgE,KAGzD0C,EAHyD,KAkCvE,OA7BA3G,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKqB,EAAUpB,QACfa,SAAU,SAACd,EAAK5B,GAER0C,EAAS1C,IAEjB4C,WAAY,SAAAhB,GAEJc,EAAS,KAEjBC,SAAU,SAAAf,GACN,OAAIV,EAAKgC,QACAtB,EAAIuB,MAAMnD,MAGR4B,EAAIuB,MAAMnD,MAAMvG,KACnB,SAACyE,GAAD,OAA4BA,EAAO8B,SAH5B,GAMV4B,EAAIuB,MAAMnD,MAGR4B,EAAIuB,MAAMnD,MAFN,QAKpB,CAACsB,EAAWE,EAAeN,EAAKgC,UAG/B,eAAC,GAAD,WACK3D,GACG,uBACIuC,MAAO,CAAEnK,MAAO8J,EAAQ,UAAY,IACpCM,QAAST,EAFb,SAIK/B,IAIT,cAAC,KAAD,cACI6D,mBAAiB,EACjB9F,GAAIgE,EACJhI,UAAWmI,EAAQ,uCAAyC,GAC5DK,MAAO,CAAElC,YAAa6B,EAAQ,UAAY,IAC1CzB,MAAOA,EACPgD,YAAaA,EACbpB,IAAKqB,EACLJ,SAAU,SAAA7C,GAAK,OAAI0C,EAAS1C,IAC5BqD,gBAAgB,gBACZnC,IAEPO,GACG,uBAAMK,MAAO,CAAEnK,MAAO,UAAWqK,aAAc,OAA/C,UACI,cAAC,IAAD,CAAgBzE,KAAM,GAAIuE,MAAO,CAAEG,YAAa,SAC/CR,S,2bC3Ed,IAAMpJ,GAAYC,UAAOC,IAAV,MCYtB+K,0BAAe,KAAMC,MAMrB,IAyCeC,GAzCqB,SAAC,GAA2C,IAAzC1C,EAAwC,EAAxCA,KAAMvB,EAAkC,EAAlCA,MAAOkE,EAA2B,EAA3BA,YAAgBvC,EAAW,+CACrEwC,EAAgBtC,iBAAO,MAD8C,EAWvEC,aAASP,GARTQ,EAHuE,EAGvEA,UACAE,EAJuE,EAIvEA,cAJuE,IAKvED,oBALuE,MAKxDkC,EACT,IAAIE,KACAF,EAAYG,QAAQ,4BAA6B,aAErD,GATiE,OAUvEnC,MAEoBrH,mBAASmH,IAZ0C,mBAYpEsC,EAZoE,KAY9DC,EAZ8D,KAyB3E,OAXA/H,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAK8B,EAAc7B,QACnBF,KAAM,iBACNiB,WAAY,SAAChB,GACTA,EAAImC,aAGb,CAACzC,EAAWE,IAGX,eAAC,GAAD,WACKjC,GAAS,uBAAOwC,QAAST,EAAhB,SAA4B/B,IACtC,cAAC,KAAD,cACIjC,GAAIgE,EACJM,IAAK8B,EACLM,SAAUH,EACVhB,SAAUiB,EACVG,OAAO,KACPC,WAAW,cAEPhD,Q,sxBCtDb,IAAM7I,GAAYC,UAAOC,IAAV,MCFP,OAA0B,6CCsE1B4L,GAhD0B,SAAC,GAA8B,IAA5BrD,EAA2B,EAA3BA,KAAMvB,EAAqB,EAArBA,MAAU2B,EAAW,iCAC7DC,EAAWC,iBAAyB,MADyB,EAEUC,aAASP,GAA9EQ,EAF2D,EAE3DA,UAAWE,EAFgD,EAEhDA,cAFgD,IAEjCD,oBAFiC,MAElB6C,GAFkB,OAEA3C,MAC3BrH,sBAH2B,mBAG5DiK,EAH4D,KAG9CC,EAH8C,KAK7DC,EAAgBC,uBAAY,SAACC,GAAsC,IAAD,EAC9DC,EAAI,UAAGD,EAAElL,OAAOoL,aAAZ,aAAG,EAAiB,GAG1BL,EADDI,GAGiB,QAErB,IAcH,OAZA3I,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKT,EAASU,QACdF,KAAM,WACNiB,WAJU,SAIChB,GACPA,EAAI5B,MAAQ,GACZsE,EAAgB,WAGzB,CAAChD,EAAWE,IAGX,cAAC,GAAD,UACI,wBAAOO,QAAST,EAAhB,UACI,qBACI9D,IAAK6G,EAAeO,IAAIC,gBAAgBR,GAAgB9C,EACxD7D,IAAI,YAER,oCACIO,KAAK,OACLX,GAAIgE,EACJM,IAAKT,EACL0B,SAAU0B,EACVO,OAAO,WACH5D,IAEP3B,GAAS,S,SChE1B,SAASwF,GAAQ/E,GACb,OAAOA,EACF4D,QAAQ,MAAO,IACfA,QAAQ,cAAe,SACvBA,QAAQ,cAAe,SACvBA,QAAQ,mBAAoB,SAC5BA,QAAQ,gBAAiB,MAGlC,SAASoB,GAAShF,GACd,OAAOA,EACF4D,QAAQ,MAAO,IACfA,QAAQ,cAAe,SACvBA,QAAQ,cAAe,SACvBA,QAAQ,cAAe,SACvBA,QAAQ,cAAe,SACvBA,QAAQ,gBAAiB,M,oyFCZ3B,IAAMvL,GAAYC,UAAOC,IAAV,MAeT0M,IAbW3M,UAAOC,IAAV,MAaQD,UAAO4M,OAAO9C,OACvC,kBAAyB,CACrB+C,eADJ,EAAGA,kBADsB7M,CAAH,OAwBb8M,GAAmB9M,kBAAO+M,KAAP/M,CAAH,MA0FhBgN,GAAoBhN,kBAAOiN,KAAPjN,CAAH,M,8CClIxBkN,GAAMC,KAAMC,OAAO,CACrBC,QAAQ,UAAD,OAAYC,GAAOC,iBAAnB,YAAuCD,GAAOE,kBACrDC,QAAS,CACL,eAAgB,oBAEpBC,aAAc,SAGlBR,GAAIS,aAAaC,SAASC,KACtB,SAAAD,GAII,OAAOA,KAEX,SAAAzE,GACI,IAAKA,EAAMyE,SACP,MAAM,IAAIE,MAAM,yCAGpB,OAAOC,QAAQC,OAAO7E,EAAMyE,aAIrBV,UCukBAe,GAtgBoC,SAAC,GAAoB,IAAD,EAAjBC,EAAiB,EAAjBA,WAAiB,EAC3CpM,oBAAS,GADkC,mBAC5DqM,EAD4D,KACtDC,EADsD,OAE/BtM,oBAAkB,GAFa,mBAE5DuM,EAF4D,KAEhDC,EAFgD,OAG7BxM,oBAAkB,GAHW,mBAG/CyM,GAH+C,WAI7DC,EAAU1F,iBAAoB,MAJ+B,EAKHhH,oBAC5D,GAN+D,mBAK5D2M,EAL4D,KAKlCC,EALkC,OAQX5M,oBAAS,GARE,mBAQ5D6M,EAR4D,KAQtCC,EARsC,OAS/B9M,mBAAS,IATsB,mBAS5D+M,EAT4D,KAShDC,EATgD,OAUnBhN,mBAAS,CACrDiN,GAAI,GACJC,KAAM,KAZyD,mBAU5DC,EAV4D,KAU1CC,EAV0C,OAc7BpN,qBAd6B,gCAe/BA,sBAf+B,6BAsBnE,SAASqN,IACLf,GAAQ,GACRQ,GAAwB,GACxBF,GAA4B,GAOhC,IAAMU,EAAUC,GAAsBC,QAAQnO,KAAI,SAAA4N,GAAE,MAAK,CACrDQ,MAAOR,EAAGQ,MACVtI,MAAM,GAAD,OAAK8H,EAAGQ,MAAR,cAAmBR,EAAGS,MAC3B9H,MAAOqH,EAAGS,SA6Ed,IAAMC,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,6DACvDsF,EAAK4I,kBCpMiCnE,EDqMlC,IAAIF,KAAKvE,EAAK4I,kBCpMAC,aAClBC,aAAgBC,aAAWC,aAAWC,aAASxE,EAAM,IAAK,IAAK,IAAK,GACpE,6BDqMAyE,QAAQC,IAAInJ,GAERgI,EAAc,IAPqC,SAWnD,UAAAN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9Bb,KAAMY,OAAaE,SAAS,+BAC5BC,MAAOH,OACFG,MAAM,mCACND,SAAS,gCACdE,SAAUJ,OAAaE,SACnB,+CAEJG,4BAA6BL,OAAaM,KACtC,QACA,2BACA,SAAAC,GAAK,OAAKA,GAASC,OAAOC,SAASF,EAAO,KAAO,OAErDG,4BAA6BV,OAAaM,KACtC,QACA,2BACA,SAAAC,GAAK,OAAKA,GAASC,OAAOC,SAASF,EAAO,KAAO,OAErDI,gBAAiBX,OACZM,KACG,QACA,wBACA,SAAAC,GAAK,OACDK,KAAIC,QAAQN,GAAS,KACrBO,KAAKD,QAAQN,GAAS,OAE7BL,SAAS,mCAtCiC,SA2C7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IA5CmC,OA+CnDlD,EAAWpH,GA/CwC,kDAiD7CuK,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAtDmB,kCCnMxD,IAAuC9F,IDmMiB,qBAAH,sDA2DxD,OACI,eAAC,GAAD,WACI,yBACIvK,UAAU,qCACV2E,KAAK,SACLG,QApJZ,WACIsI,GAAQ,IAgJJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAACpB,GAAD,CACImB,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACVyQ,gBAAgB,YAChBC,SAAS,SALb,UAOI,cAAC1E,GAAkB3L,OAAnB,UACI,cAAC2L,GAAkB2E,MAAnB,UACI,wDAGR,cAAC3E,GAAkB4E,KAAnB,UACI,eAAC9E,GAAD,CACI9H,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,cAAC,GAAD,CAAUpP,MAAM,+BAAhB,SACI,sBAAK4F,GAAG,SAAR,UACI,gCACI,cAAC,GAAD,CACIwD,KAAK,OACLvB,MAAM,mCAEV,gCACI,gCACI,cAAC,GAAD,CACIA,MAAM,qBACNuB,KAAK,qBAET,cAAC,GAAD,CACIvB,MAAM,OACNuB,KAAK,OACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QA3MjB,CACvB,CAAEgC,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,aA0MqB6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,gCACI,cAAC,GAAD,CACI1J,cAAc,YACdE,KAAK,QACLvB,MAAM,YAEV,cAAC,GAAD,CACIuB,KAAK,kBACLvB,MAAM,YACNS,MACImH,EAAW3N,OAAS,GACdwL,GAASmC,GACTpC,GAAQoC,GAElBtE,SAAU,SAAAC,GAnKtD,IAAqByH,EAoK2BnD,EACItE,EAAMvJ,OAAOyG,OAGbwK,OACI,sCACFxB,KACElG,EAAMvJ,OAAOyG,SAGjBsI,QAAQC,IAAI,UA9K3CgC,EAgLmCzH,EAAMvJ,OAAOyG,MAAM4D,QACf,IACA,IAjLxDiD,GAAe,GACf4D,GACKC,IADL,+CACwDH,IACnDI,MAAK,SAAAzE,GAAa,IAAD,MACd,UAAAY,EAAQjF,eAAR,SAAiB+I,cAAc,kBAAmB,IAClDtC,QAAQC,IAAR,UAAYzB,EAAQjF,eAApB,aAAY,EAAiBgJ,cAAc,gBAC3CvC,QAAQC,IAAIrC,EAAS9G,KAAK0L,KAC1B,UAAAhE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBjD,KAAM5B,EAAS9G,KAAK4L,aACpBC,QAAS,CACLH,IAAK,gBAIhBI,OAAM,SAAAzJ,GAAU,IAAD,IACR0J,EAAe,GAGfA,EADiB,MAAjB1J,EAAM2J,OACS,0BACS,MAAjB3J,EAAM2J,OACE,oBAEA,gDAGnB,UAAAtE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBjD,KAAM,KAGV,UAAAhB,EAAQjF,eAAR,SAAiB+I,cAAc,kBAAmBO,MAErDE,SAAQ,kBAAMxE,GAAe,UAwJE,cAAC,GAAD,CACIyE,KAAK,eACLxK,KAAK,KACLvB,MAAM,gBAKtB,8BACI,cAACgM,GAAD,CACIzK,KAAK,cACLvB,MAAM,2BAKtB,cAAC,GAAD,CAAU7H,MAAM,gBAAhB,SACI,sBAAK4F,GAAG,SAAR,UACI,cAAC,GAAD,CACIgO,KAAK,mBACLxK,KAAK,WACLvB,MAAM,YACN0B,UAAWuK,MAEf,cAAC,GAAD,CACI5K,cAAc,YACdE,KAAK,YACLG,UAAWwK,IACXlM,MAAM,cAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,UACLG,UAAWyK,IACXnM,MAAM,YAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,SACLG,UAAW0K,KACXpM,MAAM,WAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,WACLG,UAAW2K,IACXrM,MAAM,kBAIlB,eAAC0F,GAAD,CACIhH,KAAK,SACLG,QAAS,kBACL8I,GAAyBD,IAHjC,UAMKA,EACK,sBACA,sBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,cAAC,GAAD,CAAUvP,MAAM,cAAhB,SACI,eAAC,KAAD,CAAOiK,KAAK,UAAZ,UACI,sBAAKrE,GAAG,SAAR,UACI,cAAC,GAAD,CACIgO,KAAK,YACLxK,KAAK,MACL0B,iBAAe,EACfF,QAASqE,EACTpH,MAAM,MACN8C,SAAUsE,EACVlE,iBAAkB,SAAAK,GA3S1D,IAAwBgI,EA6SwBN,OACI,kBACFxB,KAAKlG,EAAMvJ,OAAOyG,SA/S5C8K,EAkT4BhI,EAAMvJ,OAAOyG,MAjT7D4G,GAAc,GACd6D,GACKC,IADL,8CAC6DI,IACxDH,MAAK,SAAAzE,GAAa,IAAD,IACdsB,EAAoB,CAChBH,GAAInB,EAAS9G,KAAK+D,MAClBmE,KAAMpB,EAAS9G,KAAKkI,OAExB,UAAAR,EAAQjF,eAAR,SAAiB+I,cAAc,cAAe,IAC9C,UAAA9D,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ3F,EAAS9G,KAAK0M,aACtBC,WAAY7F,EAAS9G,KAAK4M,OAC1BC,OAAQvE,EAAQwE,MACZ,SAAA7E,GAAE,OAAIA,EAAGQ,QAAU3B,EAAS9G,KAAK+D,eAKhD+H,OAAM,SAAAzJ,GAAU,IAAD,IACR0J,EAAe,gDAEE,MAAjB1J,EAAM2J,SACND,EAAe,0BAGnB,UAAArE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ,GACRE,WAAY,MAIpB,UAAAjF,EAAQjF,eAAR,SAAiB+I,cAAc,cAAeO,MAEjDE,SAAQ,kBAAMzE,GAAc,UAmRD,cAAC,GAAD,CACI9F,KAAK,aACLvB,MAAM,aACN8C,SAAUsE,IAEd,cAAC,GAAD,CAAO7F,KAAK,SAASvB,MAAM,cAC3B,cAAC,GAAD,CACIuB,KAAK,SACLvB,MAAM,SACN8C,SAAUsE,OAGlB,sBAAKrJ,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,cACLvB,MAAM,gBAEV,cAAC,GAAD,CACIA,MAAM,SACNuB,KAAK,SACLuC,gBAAgB,eAKhBR,SAAU,SAAA7C,GACNsI,QAAQC,IAAIvI,IAUhBhC,QAAS0J,EACT0C,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,SACLvB,MAAM,SACN6K,cAAY,EACZ7I,aAAc,CACVhC,MAAO,uBACPS,MAAO,GAGXmM,iBAAkB,iBACd,kBASJ9I,gBAAgB,eAChBrF,QAAO,UAAE2J,GAAsBC,QAC1BsE,MACG,SAAAE,GAAI,OACAA,EAAKvE,QACLN,EAAiBF,aAJtB,aAAE,EAMHgF,QAAQ5S,KAAI,SAAA2S,GAAI,MAAK,CACnBpM,MAAOoM,EACP7M,MAAO6M,MASf/B,mBAAiB,EACjBC,iBAAe,YAMnC,eAACrF,GAAD,CACIhH,KAAK,SACLG,QAAS,kBACL4I,GACKD,IAJb,UAQKA,EACK,0BACA,0BACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,eAAC,GAAD,CAAUrP,MAAM,kBAAhB,UACI,sBAAK4F,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,aACLvB,MAAM,gCAEV,cAAC,GAAD,CACI+L,KAAK,MACLxK,KAAK,8BACLvB,MAAM,qCAEV,cAAC,GAAD,CACIuB,KAAK,cACLvB,MAAM,iBAEV,cAAC,GAAD,CACIuB,KAAK,kBACLvB,MAAM,8BAId,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,aACLvB,MAAM,gCAEV,cAAC,GAAD,CACI+L,KAAK,MACLxK,KAAK,8BACLvB,MAAM,wCAGV,cAAC,GAAD,CACIuB,KAAK,aACLvB,MAAM,iBAEV,cAAC,GAAD,CACIuB,KAAK,aACLvB,MAAM,4BAO9B,eAAC+F,GAAkBzL,OAAnB,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,8B,wgFEnlBb,IAAMjU,GAAYC,UAAOC,IAAV,MA4BTgU,GAAwBjU,UAAOC,IAAV,MCyLnBiU,GA1MW,WACtB,IAD4B,EA4HQpS,mBAAS,IA5HjB,gCA6HUA,mBA5HlB,CAChB,CACI0N,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACN5D,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACN5D,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACN5D,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACN5D,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,OAxHQ,mBA6HrBC,EA7HqB,KA6HRC,EA7HQ,KAqI5B,OACI,eAAC,GAAD,WACI,eAACnB,GAAD,WACI,0CACA,gCACI,cAAC,GAAD,CACI/F,WAAY,SAAAmH,GACRD,EAAe,GAAD,oBAAKD,GAAL,CAAkBE,QAGxC,gCACI,cAAC,IAAD,IACA,uBAAO3K,YAAY,+BAI9ByK,EAAYjU,OAAS,EAClB,eAACoU,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,0CACA,sCACA,oDACA,kDAGR,gCACKsN,EAAYhU,KAAI,SAACoU,EAAQC,GAAT,OAMb,cALA,CAKA,gBACI,6BAAKD,EAAO/F,OACZ,6BAAK+F,EAAO/E,WACZ,6BAAK+E,EAAOpB,OACZ,8BFlKa5I,EEoKL,IAAIF,KAAKkK,EAAO7F,kBFnK9BC,aAAO,IAAItE,KAAKE,GAAO,iBEsKjB,6BACI,cAAC,IAAD,CACIzF,QAAS,WACL,IAAM2P,EAAoBN,EAAYO,QAClC,SAACC,EAAGC,GAAJ,OACIA,IAAgBJ,KAGxBJ,EAAeK,WF/KpD,IAAsClK,UEwL7B,cAAC,GAAD,CACInM,MAAM,gDACNgJ,SAAS,0D,mgBC7MtB,IAAMrI,GAAYC,UAAOC,IAAV,MAQT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MC0DX8V,GA/Da,WAAO,IAAD,EACNhU,oBAAS,GADH,mBACvBqM,EADuB,KACjBC,EADiB,KAS9B,SAASe,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QATZ,WACIsI,GAAQ,IAKJ,2CAOA,eAACyH,GAAD,CACI1H,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAACmE,GAAcxU,OAAf,UACI,cAACwU,GAAclE,MAAf,UACI,2EAGR,eAACkE,GAAcjE,KAAf,WACI,cAAC,GAAD,CAAY3K,MAAM,eAAeuB,KAAK,gBACtC,cAAC,GAAD,CAAYvB,MAAM,aAAauB,KAAK,iBAExC,eAACqN,GAActU,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,6B,szECpDb,IAAMjU,GAAYC,UAAOC,IAAV,MAET8V,GAAyB/V,kBAAO+M,KAAP/M,CAAH,MA8CtByG,GAAiBzG,UAAOC,IAAV,MAOd0G,GAAO3G,UAAOC,IAAV,KA0BW2G,YAAQ,IAAM,YAS7BoP,GAAYhW,UAAOC,IAAV,MC6BPgW,GA3GiB,WAC5B,IAAMzH,EAAU1F,iBAAoB,MAC9BoN,EAAUC,cAEhB,OACI,eAAC,GAAD,WACI,cAACH,GAAD,UACI,0DAEJ,eAACD,GAAD,CAAwBlE,SAAU,iBAAM,IAAI7M,GAAG,OAAOsE,IAAKkF,EAA3D,UACI,cAACyE,GAAD,CAAazK,KAAK,cAAcvB,MAAM,oBACtC,8BACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,sCACA,8CAEJ,eAAC,GAAD,WACI,gDACA,8CAEJ,eAAC,GAAD,WACI,uDACA,6CAEJ,eAAC,GAAD,WACI,qDACA,8CAEJ,eAAC,GAAD,WACI,wDACA,yDAIZ,cAAC,GAAD,IACA,cAAC,GAAD,CAAU7H,MAAM,oBAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,8CACA,+CACA,kDAGR,kCACI,+BACI,4CACA,0CACA,uCACA,6CAEJ,+BACI,4CACA,yCACA,uCACA,sDAKhB,cAAC,GAAD,CAAUzI,MAAM,0BAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,yCACA,8CACA,4CAGR,kCACI,qBACI/B,QAAS,kBAELoQ,EAAQE,KAAK,6BAHrB,UAKI,4CACA,wCACA,mCACA,0CACA,8CAEJ,+BACI,4CACA,wCACA,mCACA,0CACA,8CAEJ,+BACI,4CACA,wCACA,mCACA,0CACA,6D,uEC/GzB,IAAMrW,GAAYC,UAAOC,IAAV,MCMPoW,GAJgB,WAC3B,OAAO,cAAC,GAAD,yB,+vBCFJ,IAAMtW,GAAYC,UAAOC,IAAV,KAwBIf,YAAO,IAAM,YCyCxB2M,GA9C0B,SAAC,GAA8B,IAA5BrD,EAA2B,EAA3BA,KAAMvB,EAAqB,EAArBA,MAAU2B,EAAW,iCAC7DC,EAAWC,iBAAyB,MADyB,EAEUC,aAASP,GAA9EQ,EAF2D,EAE3DA,UAAWE,EAFgD,EAEhDA,cAFgD,KAEjCD,aAFiC,EAEAE,MAC3BrH,sBAH2B,mBAG9CkK,GAH8C,WAK7DC,EAAgBC,uBAAY,SAACC,GAAsC,IAAD,EAC9DC,EAAI,UAAGD,EAAElL,OAAOoL,aAAZ,aAAG,EAAiB,GAG1BL,EADDI,GAGiB,QAErB,IAaH,OAXA3I,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKT,EAASU,QACdF,KAAM,WACNiB,WAJU,WAKN0B,EAAgB,WAGzB,CAAChD,EAAWE,IAGX,cAAC,GAAD,UACI,wBACIO,QAAST,EACThI,UAAU,oCAFd,UAII,oCACI2E,KAAK,OACLX,GAAIgE,EACJM,IAAKT,EACL0B,SAAU0B,EACVO,OAAO,WACH5D,IAEP3B,Q,ulBC3DV,IAAMlH,GAAYC,UAAOC,IAAV,MAET+V,GAAYhW,UAAOC,IAAV,MAkBTqW,GAA0BtW,kBAAO+M,KAAP/M,CAAH,MCIrBuW,GApBkB,WAC7B,IAAM/H,EAAU1F,iBAAoB,MAEpC,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,wDAEJ,cAAC,GAAD,CAAU1J,MAAM,UAChB,cAACkX,GAAD,CAAyBhN,IAAKkF,EAASqD,SAAU,iBAAM,IAAvD,SACI,cAAC2E,GAAD,CAAahO,KAAK,IAAIvB,MAAM,uBAEhC,cAAC,GAAD,CAAU7H,MAAM,WAChB,cAACkX,GAAD,CAAyBhN,IAAKkF,EAASqD,SAAU,iBAAM,IAAvD,SACI,cAAC2E,GAAD,CAAahO,KAAK,IAAIvB,MAAM,2BCG7BwP,GAjBU,WACJC,cAATrN,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,WAAWsN,OAAK,EAACC,UAAWC,KACxC,cAAC,IAAD,CAAOxN,KAAK,mBAAmBsN,OAAK,EAACC,UAAWX,KAChD,cAAC,IAAD,CACI5M,KAAK,2BACLsN,OAAK,EACLC,UAAWL,KAEf,cAAC,IAAD,CAAOlN,KAAK,IAAIuN,UAAWP,S,sjBCbhC,IAAMtW,GAAYC,UAAOC,IAAV,MAOT6W,GAAiB9W,UAAOC,IAAV,MAEV,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAMI,SAMJ,SAAAW,GAAK,OAAIA,EAAM2W,aAI1CC,GAAchX,UAAOC,IAAV,MCATgX,GAfsC,SAAC,GAI/C,IAHH7X,EAGE,EAHFA,MACA2X,EAEE,EAFFA,UACAzR,EACE,EADFA,SAEA,OACI,eAAC,GAAD,WACI,cAACwR,GAAD,CAAgBC,UAAWA,EAA3B,SACI,6BAAK3X,MAET,cAAC4X,GAAD,UAAc1R,Q,oLClBnB,IAAMvF,GAAYC,UAAOC,IAAV,MCuBPiX,GAdkC,SAAC,GAAiB,IAAfxR,EAAc,EAAdA,QAChD,OACI,cAAC,GAAD,UACI,iCACKA,EAAQvE,KAAI,SAAAyE,GAAM,OACf,wBAA2B8B,MAAO9B,EAAO8B,MAAzC,SACK9B,EAAOqB,OADCrB,EAAO8B,e,4vBCVjC,IAAM3H,GAAYC,UAAOmX,GAAV,MACE,SAAA/W,GAAK,OAAIA,EAAMC,MAAMhB,MAAMG,YA2BtC4X,GAAMpX,UAAOC,IAAV,MAKQ,SAAAG,GAAK,OAAIA,EAAMf,SCVxBgY,GAlBgD,SAAC,GAKzD,IAJHC,EAIE,EAJFA,SACAlY,EAGE,EAHFA,MACAgJ,EAEE,EAFFA,SACAmP,EACE,EADFA,OAEA,OACI,eAAC,GAAD,WACI,cAACH,GAAD,CAAK/X,MAAOiY,IACZ,gCACI,+BAAOlY,IACP,gCAAQgJ,OAEZ,6BAAKmP,Q,k6BCtBV,IAAMxX,GAAYC,UAAOC,IAAV,MAEToF,GAAUrF,UAAOC,IAAV,MAEPuX,GAAUxX,UAAOC,IAAV,MAWH,SAAAG,GAAK,OAAIA,EAAMC,MAAMhB,MAAMI,SAcR,SAAAW,GAAK,OAAIA,EAAMC,MAAMhB,MAAMS,WAQ3B,SAAAM,GAAK,OAAIA,EAAMC,MAAMhB,MAAMO,WCqFhD6X,GA7GsB,SAAC,GAAe,IACzC9R,EADwC,EAAZ+R,MACbC,OAAfhS,KAEFvG,EAAQwY,mBAAQ,WAClB,MAAgB,kBAATjS,EACD,CAAEkS,KAAM,WAAYd,UAAW,WAC/B,CAAEc,KAAM,YAAUd,UAAW,aACpC,CAACpR,IAgCJ,OACI,eAAC,GAAD,WACI,eAAC,GAAD,CAAevG,MAAOA,EAAMyY,KAAMd,UAAW3X,EAAM2X,UAAnD,UACI,cAAC,GAAD,CAAarR,QAjCV,CACX,CACIgC,MAAO,EACPT,MAAO,SAEX,CACIS,MAAO,EACPT,MAAO,UAEX,CACIS,MAAO,EACPT,MAAO,eAuBH,cAAC,GAAD,CAAavB,QAnBX,CACV,CACIgC,MAAO,KACPT,MAAO,MAEX,CACIS,MAAO,KACPT,MAAO,MAEX,CACIS,MAAO,KACPT,MAAO,YAWP,eAACuQ,GAAD,WACI,wBAAQxW,UAAU,uBAAuB2E,KAAK,SAA9C,yBAGA,wBAAQ3E,UAAU,sBAAsB2E,KAAK,SAA7C,0BAKJ,eAAC,GAAD,WACI,cAAC,GAAD,CACI2R,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,cAEX,cAAC,GAAD,CACID,SAAS,UACTlY,MAAM,eACNgJ,SAAS,aACTmP,OAAO,qB,uECnHpB,IAAMxX,GAAYC,UAAOC,IAAV,MCMP6X,GAJU,WACrB,OAAO,cAAC,GAAD,sB,mlDCDJ,IAAM/X,GAAYC,UAAOC,IAAV,MAeT0M,IAbW3M,UAAOC,IAAV,MAaQD,UAAO4M,OAAO9C,OACvC,kBAAyB,CACrB+C,eADJ,EAAGA,kBADsB7M,CAAH,OAwBb8M,GAAmB9M,kBAAO+M,KAAP/M,CAAH,MAuChBgN,GAAoBhN,kBAAOiN,KAAPjN,CAAH,MC2Uf+X,GA7UkB,WAAO,IAAD,IACXjW,oBAAS,GADE,mBAC5BqM,EAD4B,KACtBC,EADsB,OAEGtM,qBAFH,gCAGLA,oBAAkB,IAHb,mBAG5BkI,EAH4B,KAGnBgO,EAHmB,KAI7BxJ,EAAU1F,iBAAoB,MAJD,EAK6BhH,oBAC5D,GAN+B,gCAQqBA,oBAAS,IAR9B,mBAQ5B6M,EAR4B,KAQNC,EARM,OASC9M,mBAAS,IATV,mBAS5B+M,EAT4B,KAShBC,EATgB,OAUGhN,mBAAS,IAVZ,gCAWDA,mBAAS,KAXR,gCAYHA,mBAAS,KAZN,gCAaTA,mBAAS,KAbA,gCAeKA,mBAAwB,OAf7B,mBAe5BmW,EAf4B,KAedC,EAfc,KAsB7BC,EAAS9I,GAAsBC,QAAQnO,KAAI,SAAA2S,GAAI,MAAK,CACtDpM,MAAOoM,EAAKtE,KACZvI,MAAO6M,EAAKtE,KACZD,MAAOuE,EAAKvE,UAGV6I,EAAM,UAAG/I,GAAsBC,QAChCsE,MAAK,SAAAE,GAAI,OAAIA,EAAKtE,OAASyI,YADpB,aAAG,EAETlE,QAAQ5S,KAAI,SAAA2S,GAAI,MAAK,CACnBpM,MAAOoM,EACP7M,MAAO6M,MAGf,SAAS3E,IACLf,GAAQ,GAOZtM,oBAAS,eA0DT,IAAM2N,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,6DAEnDsN,EAAc,IAFqC,SAMnD,UAAAN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BgI,YAAajI,OAAaE,SACtB,0CAEJC,MAAOH,OACFG,MAAM,mCACND,SAAS,gCACdE,SAAUJ,OAAaE,SACnB,+CAEJS,gBAAiBX,OACZM,KACG,QACA,wBACA,SAAAC,GAAK,OACDK,KAAIC,QAAQN,GAAS,KACrBO,KAAKD,QAAQN,GAAS,OAE7BL,SAAS,mCAzBiC,SA8B7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IA/BmC,uDAmC7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAxCmB,yDAAH,sDA6CxD,OACI,eAAC,GAAD,WACI,yBACIrQ,UAAU,qCACV2E,KAAK,SACLG,QAhHZ,WACIsI,GAAQ,IA4GJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACVyQ,gBAAgB,YAChBC,SAAS,SALb,UAOI,cAAC,GAAkBrQ,OAAnB,UACI,cAAC,GAAkBsQ,MAAnB,UACI,2DAGR,cAAC,GAAkBC,KAAnB,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,eAAC,GAAD,CAAUpP,MAAM,+BAAhB,UACI,cAAC,GAAD,CAAOoJ,KAAK,cAAcvB,MAAM,qBAChC,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,kBACLvB,MAAM,YACNS,MACImH,EAAW3N,OAAS,GACdwL,GAASmC,GACTpC,GAAQoC,GAElBtE,SAAU,SAAA4B,GAAC,OACP2C,EAAc3C,EAAElL,OAAOyG,UAG/B,cAAC,GAAD,CAAOc,KAAK,QAAQvB,MAAM,cAG9B,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CAAOwD,KAAK,UAAUvB,MAAM,YAC5B,cAAC,GAAD,CACI+L,KAAK,iBACLxK,KAAK,WACLvB,MAAM,aAEV,cAAC,GAAD,CACI+L,KAAK,mBACLxK,KAAK,UACLvB,MAAM,eAGd,cAAC,GAAD,CAAOuB,KAAK,cAAcvB,MAAM,yBAEpC,cAAC,GAAD,CAAU7H,MAAM,iCAAhB,SACI,sBAAK4F,GAAG,SAAR,UACI,cAAC,GAAD,CAAOwD,KAAK,MAAMvB,MAAM,cACxB,cAAC,GAAD,CAAOuB,KAAK,QAAQvB,MAAM,UAC1B,cAAC,GAAD,CAAOuB,KAAK,UAAUvB,MAAM,eAC5B,cAAC,GAAD,CACIuB,KAAK,gBACLvB,MAAM,wBAIlB,eAAC,GAAD,CACItB,KAAK,SACLG,QAAS,kBACL8I,GAAyBD,IAHjC,UAMKA,EACK,sBACA,sBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,cAAC,GAAD,CAAUvP,MAAM,cAAhB,SACI,eAAC,KAAD,CAAOiK,KAAK,UAAZ,UACI,sBAAKrE,GAAG,SAAR,UACI,cAAC,GAAD,CACIgO,KAAK,YACLxK,KAAK,MACL0B,iBAAe,EACfF,QAASA,EACT/C,MAAM,MACN8C,SAAUC,EACVG,iBAAkB,SAAAK,GA1L1D,IAAwBgI,EA4LwBN,OACI,kBACFxB,KAAKlG,EAAMvJ,OAAOyG,SA9L5C8K,EAiM4BhI,EAAMvJ,OAAOyG,MAhM7DsQ,GAAW,GACX7F,GACKC,IADL,8CAC6DI,IACxDH,MAAK,SAAAzE,GAAa,IAAD,MACd,UAAAY,EAAQjF,eAAR,SAAiB+I,cAAc,cAAe,IAC9C,UAAA9D,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ3F,EAAS9G,KAAK0M,aACtBC,WAAY7F,EAAS9G,KAAK4M,OAC1BC,OAAQwE,EAAOzC,QACX,SAAA/B,GAAM,OAAIA,EAAOpE,QAAU3B,EAAS9G,KAAK+D,SAE7C4J,OAAM,OAAE2D,QAAF,IAAEA,OAAF,EAAEA,EAAQ1C,QACZ,SAAAjB,GAAM,OAAIA,EAAOxN,QAAU2G,EAAS9G,KAAKkI,WAIrDkJ,EAAe,UACX1J,EAAQjF,eADG,aACX,EAAiBgJ,cAAc,kBAAkB,GAAGtL,UAG3D2L,OAAM,SAAAzJ,GAAU,IAAD,IACR0J,EAAe,GAGfA,EADiB,MAAjB1J,EAAM2J,OACS,yBAEA,gDAGnB,UAAAtE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ,GACRE,WAAY,MAIpB,UAAAjF,EAAQjF,eAAR,SAAiB+I,cAAc,cAAeO,MAEjDE,SAAQ,kBAAMiF,GAAW,UA8JE,cAAC,GAAD,CACIxP,KAAK,aACLvB,MAAM,aACN8C,SAAUC,IAEd,cAAC,GAAD,CAAOxB,KAAK,SAASvB,MAAM,cAC3B,cAAC,GAAD,CACIuB,KAAK,SACLvB,MAAM,SACN8C,SAAUC,OAGlB,sBAAKhF,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,cACLvB,MAAM,gBAEV,cAAC,GAAD,CACIA,MAAM,SACNuB,KAAK,SACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEX6C,SAAU,SAAA7C,GAAU,IAAD,EACfwQ,EAAe,OAACxQ,QAAD,IAACA,OAAD,EAACA,EAAOA,OACvB,UAAA8G,EAAQjF,eAAR,SAAiB+O,WACb,mBAGR5S,QAASyS,EACTrG,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,SACLvB,MAAM,SACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEX6Q,WAA6B,KAAjBN,EACZvS,QAAS0S,EACTtG,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,iBAQ3C,eAAC,GAAkBzQ,OAAnB,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,8B,wgFC9Yb,IAAMjU,GAAYC,UAAOC,IAAV,MA4BTuY,GAA0BxY,UAAOC,IAAV,MCuLrBiU,GAxMW,WACtB,IAD4B,EAgIQpS,mBAAS,IAhIjB,gCAiIcA,mBAhItB,CAChB,CACI0N,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACNsE,QAAS,SACTlI,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACNsE,QAAS,SACTlI,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACNsE,QAAS,SACTlI,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,IAEhB,CACI1F,KAAM,mBACNE,iBAAkB,aAClByE,KAAM,YACNsE,QAAS,SACTlI,MAAO,sBACPQ,gBAAiB,iBACjBqD,GAAI,YACJC,YAAa,GACbC,SAAU,CACN9B,IAAK,aACLiB,WAAY,aACZc,OAAQ,MACRhB,OAAQ,UACRiB,YAAa,oBACbC,OAAQ,aACRd,OAAQ,YAEZnD,SAAU,gBACVkE,UAAW,GACXC,QAAS,GACTC,SAAU,GACV9D,4BAA6B,GAC7BL,4BAA6B,GAC7BoE,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,gBAAiB,WACjBC,WAAY,SACZC,WAAY,OA5HQ,mBAiIrBwD,EAjIqB,KAiINC,EAjIM,KAyI5B,OACI,eAAC,GAAD,WACI,eAACH,GAAD,WACI,8CACA,gCACI,cAAC,GAAD,IACA,gCACI,cAAC,IAAD,IACA,uBAAO9N,YAAY,kCAI9BgO,EAAcxX,OAAS,EACpB,eAACoU,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,0CACA,yCACA,0CACA,kDAGR,gCACK6Q,EAAcvX,KAAI,SAACyX,EAAUpD,GAAX,OAMf,cALA,CAKA,gBACI,6BAAKoD,EAASpJ,OACd,6BAAKoJ,EAAS7H,kBACd,6BAAK6H,EAASH,UACd,6BAAKG,EAASpI,WACd,6BACI,cAAC,IAAD,CACI1K,QAAS,WACL,IAAM+S,EAAsBH,EAAchD,QACtC,SAACC,EAAGmD,GAAJ,OACIA,IAAkBtD,KAG1BmD,EACIE,mBAUhC,cAAC,GAAD,CACIzZ,MAAM,oDACNgJ,SAAS,6DC9Ld2Q,GAXa,WACPrC,cAATrN,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,aAAasN,OAAK,EAACC,UAAWC,KAC1C,cAAC,IAAD,CAAOxN,KAAK,IAAIuN,UAAWP,S,6lDCPhC,IAAMtW,GAAYC,UAAOC,IAAV,MAET6M,GAAmB9M,kBAAO+M,KAAP/M,CAAH,MAgDhB2M,GAAgB3M,UAAO4M,OAAV,MAoBbI,GAAoBhN,kBAAOiN,KAAPjN,CAAH,MC+QfiO,GAjUgB,WAAO,IAAD,EACTnM,oBAAS,GADA,mBAC1BqM,EAD0B,KACpBC,EADoB,KAE3BI,EAAU1F,iBAAoB,MAFH,EAGyBhH,oBAAS,GAHlC,gCAI6BA,oBAC1D,IAL6B,gCAOqBA,oBAAS,IAP9B,mBAO1BkX,EAP0B,KAOLC,EAPK,KAS3BC,EAAuB,CACzB,CACIjS,MAAO,aACPS,MAAO,cAEX,CACIT,MAAO,QACPS,MAAO,UAwEf,SAASyH,IACLf,GAAQ,GAWZ,OACI,eAAC,GAAD,WACI,yBACIpN,UAAU,qCACV2E,KAAK,SACLG,QAbZ,WACIsI,GAAQ,IASJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACV0Q,SAAS,SACTzM,KAAK,KALT,UAOI,cAAC,GAAkB5D,OAAnB,UACI,cAAC,GAAkBsQ,MAAnB,UAGI,wDAGR,cAAC,GAAkBC,KAAnB,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SA/BuC,SAAA/K,GACvDkJ,QAAQC,IAAInJ,IA+BIwC,IAAKkF,EAHT,UAKI,gCACI,gCACI,eAAC,GAAD,CAAUpP,MAAM,mBAAhB,UACI,cAAC,GAAD,CAAOoJ,KAAK,YAAYvB,MAAM,oBAC9B,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CAAQwD,KAAK,QAAQvB,MAAM,UAC3B,cAAC,GAAD,CAAOuB,KAAK,QAAQvB,MAAM,aAE9B,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,QACLvB,MAAM,QACNvB,QArHnB,CACjB,CAAEgC,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,uBACnB,CAAES,MAAO,EAAGT,MAAO,oCACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,mBAgHa,cAAC,GAAD,CAAQuB,KAAK,OAAOvB,MAAM,eAIlC,eAAC,GAAD,CAAU7H,MAAM,aAAhB,UACI,cAAC,GAAD,CACIoJ,KAAK,iBACLvB,MAAM,SAEV,cAAC,GAAD,CACIuB,KAAK,iBACLvB,MAAM,qCAEV,cAAC,GAAD,CACIuB,KAAK,qBACLvB,MAAM,kCAIlB,gCACI,eAAC,GAAD,CAAU7H,MAAM,eAAhB,UACI,cAAC,GAAD,CACIoJ,KAAK,kBACLvB,MAAM,yBAEV,uDACA,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,mBACLvB,MAAM,OACNgC,aACIiQ,EAAqB,GAEzBxT,QAASwT,IAEb,cAAC,GAAD,CACI1Q,KAAK,WACLvB,MAAM,mBAGd,oDACA,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,gBACLvB,MAAM,OACNgC,aACIiQ,EAAqB,GAEzBxT,QAASwT,IAEb,cAAC,GAAD,CACI1Q,KAAK,WACLvB,MAAM,sBAIlB,eAAC,GAAD,CAAU7H,MAAM,YAAhB,UACI,qBAAK4F,GAAG,WAYR,sBAAKA,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,aACLvB,MAAM,gBAEV,cAAC,GAAD,CACIuB,KAAK,aACLvB,MAAM,+BAM1B,eAAC,GAAD,CACItB,KAAK,SACLG,QAAS,kBACLmT,GAAwBD,IAHhC,UAMKA,EACK,yCACA,yCACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGR,8BACKA,GACG,qCACI,gCACI,eAAC,GAAD,CAAU5Z,MAAM,aAAhB,UACI,qBAAK4F,GAAG,WAcR,sBAAKA,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,eACLvB,MAAM,mBAEV,cAAC,GAAD,CACIuB,KAAK,6BACLvB,MAAM,uCAKlB,eAAC,GAAD,CAAU7H,MAAM,oBAAhB,UACI,cAAC,GAAD,CACIoJ,KAAK,gBACLvB,MAAM,iCAEV,cAAC,GAAD,CACIuB,KAAK,kBACLvB,MAAM,2BAIlB,eAAC,GAAD,CAAU7H,MAAM,uBAAhB,UACI,cAAC,GAAD,CACIoJ,KAAK,oBACLvB,MAAM,2BAEV,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,YACLvB,MAAM,2BAEV,cAAC,GAAD,CACIuB,KAAK,SACLvB,MAAM,gCAStC,eAAC,GAAkB1F,OAAnB,WACI,wBACIP,UAAU,eACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBAAQnO,UAAU,eAAe2E,KAAK,SAASqO,KAAK,OAApD,8B,wgFC9Ub,IAAMjU,GAAYC,UAAOC,IAAV,MA4BTuY,GAA0BxY,UAAOC,IAAV,MCsErBiU,GAlFW,WACtB,IAD4B,EAUQpS,mBAAS,IAVjB,gCAWcA,mBAVtB,CAChB,CACI0N,KAAM,YACN2J,MAAO,SACPC,KAAM,SACNC,aAAc,YANM,mBAWrBX,EAXqB,KAWNC,EAXM,KAmB5B,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,0CACA,gCACI,cAAC,GAAD,IACA,gCACI,cAAC,IAAD,IACA,uBAAOjO,YAAY,+BAI9BgO,EAAcxX,OAAS,EACpB,eAACoU,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,uCACA,iDACA,mDACA,kDAGR,gCACK6Q,EAAcvX,KAAI,SAACyX,EAAUpD,GAAX,OAMf,cALA,CAKA,gBACI,6BAAKoD,EAASpJ,OACd,6BAAKoJ,EAASO,QACd,6BAAKP,EAASQ,OACd,6BAAKR,EAASS,eACd,6BACI,cAAC,IAAD,CACIvT,QAAS,WACL,IAAM+S,EAAsBH,EAAchD,QACtC,SAACC,EAAGmD,GAAJ,OACIA,IAAkBtD,KAG1BmD,EACIE,mBAUhC,cAAC,GAAD,CACIzZ,MAAM,gDACNgJ,SAAS,0DC7EdkR,GAXY,WACN5C,cAATrN,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,YAAYsN,OAAK,EAACC,UAAWC,KACzC,cAAC,IAAD,CAAOxN,KAAK,IAAIuN,UAAWP,S,mhDCLhC,IAAMtW,GAAYC,UAAOC,IAAV,MA+CI,SAAAG,GAAK,OAAIA,EAAMkI,iBCe1BC,GAnDqB,SAAC,GAM9B,IALHC,EAKE,EALFA,KACAvB,EAIE,EAJFA,MACAqB,EAGE,EAHFA,cACWG,EAET,EAFFE,UACGC,EACD,6DACIC,EAAWC,iBAA4B,MAD3C,EAQEC,aAASP,GALTQ,EAHF,EAGEA,UACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,cACAC,EANF,EAMEA,MANF,EAOEC,WASJ,OAPA3F,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNK,KAAM,QACNC,IAAKT,EAASU,YAEnB,CAACP,EAAWE,IAEX,eAAC,GAAD,CAAWZ,cAAeA,GAAiB,aAA3C,UACKrB,GACG,gCACI,uBACIuC,MAAO,CAAEnK,MAAO8J,EAAQ,UAAY,IACpCM,QAAST,EAFb,SAIK/B,IAEJwB,GAAa,cAACA,EAAD,OAGtB,uCACIzD,GAAIgE,EACJM,IAAKT,EACLW,MAAO,CAAElC,YAAa6B,EAAQ,UAAY,IAC1CF,aAAcA,GACVL,IAEPO,GACG,uBAAMK,MAAO,CAAEnK,MAAO,UAAWqK,aAAc,OAA/C,UACI,cAAC,IAAD,CAAgBzE,KAAM,GAAIuE,MAAO,CAAEG,YAAa,SAC/CR,S,qmDC1Dd,IAAMpJ,GAAYC,UAAOC,IAAV,MAET6M,GAAmB9M,kBAAO+M,KAAP/M,CAAH,MAuBhB2M,GAAgB3M,UAAO4M,OAAV,MAqBbI,GAAoBhN,kBAAOiN,KAAPjN,CAAH,MAOjBuZ,GAAevZ,UAAOC,IAAV,MC0WVgO,GApWgB,WAAO,IAAD,EACTnM,oBAAS,GADA,mBAC1BqM,EAD0B,KACpBC,EADoB,KAE3BI,EAAU1F,iBAAoB,MAFH,EAG6BhH,oBAC1D,GAJ6B,mBAG1B0X,EAH0B,KAGDC,EAHC,OAS7B3X,oBAAS,GAToB,mBAO7B4X,EAP6B,KAQ7BC,EAR6B,KAgB3BC,EAAe,CACjB,CAAElS,MAAO,EAAGT,MAAO,wBACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,mBACnB,CAAES,MAAO,EAAGT,MAAO,wBACnB,CAAES,MAAO,EAAGT,MAAO,sBACnB,CAAES,MAAO,EAAGT,MAAO,6BACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,eACnB,CAAES,MAAO,EAAGT,MAAO,aAuBvB,SAASkI,IACLwK,GAA8B,GAC9BvL,GAAQ,GAWZ,OACI,eAAC,GAAD,WACI,yBAAQzI,KAAK,SAASG,QAV9B,WACIsI,GAAQ,IASJ,UACI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACV0Q,SAAS,SACTzM,KAAK,KALT,UAOI,cAAC,GAAkB5D,OAAnB,UACI,cAAC,GAAkBsQ,MAAnB,UAGI,4DAGR,cAAC,GAAkBC,KAAnB,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SA3BuC,SAAA/K,GACvDkJ,QAAQC,IAAInJ,IA2BIwC,IAAKkF,EAHT,UAKI,8BACI,eAAC,GAAD,CAAUpP,MAAM,sBAAhB,UACI,sBAAK4F,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,eACLvB,MAAM,sBACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASkU,EACT9H,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CAAOxJ,KAAK,UAAUvB,MAAM,kBAEhC,cAAC,GAAD,CACIuB,KAAK,uBACLvB,MAAM,sCACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASkU,EACT9H,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC6H,GAAD,CACIrR,KAAK,mBACLvB,MAAM,kCAEV,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CACIwD,KAAK,UACLvB,MAAM,wBAEV,cAAC,GAAD,CACIuB,KAAK,UACLvB,MAAM,qBAEV,cAAC,GAAD,CAAOuB,KAAK,UAAUvB,MAAM,qBAmB/ByS,GACG,mCACI,eAACH,GAAD,WACI,gCACI,kDACA,wBAAQ5T,KAAK,SAAb,qBAGA,wBAAQA,KAAK,SAAb,qBAGA,wBAAQA,KAAK,SAAb,sBAGA,wBAAQA,KAAK,SAAb,oBAGA,wBAAQA,KAAK,SAAb,oBAGA,wBAAQA,KAAK,SAAb,mBAGA,wBAAQA,KAAK,SAAb,0BAIJ,gCACI,uDAGA,cAAC,GAAD,CACIqN,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,UAET,cAAC,GAAD,CACIwK,KAAK,WACLxK,KAAK,aAGb,gCACI,uDACA,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,aAGb,gCACI,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,UAET,wCACA,cAAC,GAAD,CACIwK,KAAK,QACLxK,KAAK,0BASrC,eAAC,GAAD,CACI7C,KAAK,SACLG,QAAS,kBACL2T,GACKD,IAJb,UAQKA,EACK,uBACA,uBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,eAAC,GAAD,CAAUpa,MAAM,eAAhB,UACI,cAAC,GAAD,CACIoJ,KAAK,kBACLvB,MAAM,yBAEV,uDACA,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CAAOwD,KAAK,OAAOvB,MAAM,SACzB,cAAC,GAAD,CAAOuB,KAAK,WAAWvB,MAAM,mBAEjC,oDACA,sBAAKjC,GAAG,SAAR,UACI,cAAC,GAAD,CAAOwD,KAAK,OAAOvB,MAAM,SACzB,cAAC,GAAD,CAAOuB,KAAK,WAAWvB,MAAM,2BAMjD,eAAC,GAAkB1F,OAAnB,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,8B,wgFCpZb,IAAMjU,GAAYC,UAAOC,IAAV,MA4BTuY,GAA0BxY,UAAOC,IAAV,MCsErBiU,GAlFW,WACtB,IAD4B,EAUQpS,mBAAS,IAVjB,gCAWcA,mBAVtB,CAChB,CACI0N,KAAM,gBACNmB,MAAO,YACPmJ,UAAW,SACXC,gBAAiB,eANG,mBAWrBrB,EAXqB,KAWNC,EAXM,KAmB5B,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,6CACA,gCACI,cAAC,GAAD,IACA,gCACI,cAAC,IAAD,IACA,uBAAOjO,YAAY,kCAI9BgO,EAAcxX,OAAS,EACpB,eAACoU,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,uCACA,uCACA,2CACA,kDAGR,gCACK6Q,EAAcvX,KAAI,SAACyX,EAAUpD,GAAX,OAMf,cALA,CAKA,gBACI,6BAAKoD,EAASpJ,OACd,6BAAKoJ,EAASjI,QACd,6BAAKiI,EAASmB,kBACd,6BAAKnB,EAASkB,YACd,6BACI,cAAC,IAAD,CACIhU,QAAS,WACL,IAAM+S,EAAsBH,EAAchD,QACtC,SAACC,EAAGmD,GAAJ,OACIA,IAAkBtD,KAG1BmD,EACIE,mBAUhC,cAAC,GAAD,CACIzZ,MAAM,mDACNgJ,SAAS,6DC7Ed2Q,GAXa,WACPrC,cAATrN,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,YAAYsN,OAAK,EAACC,UAAWC,KACzC,cAAC,IAAD,CAAOxN,KAAK,IAAIuN,UAAWP,S,o1PCPhC,IAAM2D,GAAkBha,UAAOC,IAAV,MAkBfga,GAAiBja,UAAOC,IAAV,MAEdF,GAAYC,UAAOC,IAAV,KA2DA2G,YAAQ,GAAK,QAKDA,YAAQ,IAAM,QAQfA,YAAQ,IAAM,SA6ElCsT,GAAiBla,UAAOC,IAAV,MA6Bdka,GAAQna,UAAOC,IAAV,MAqBA,SAAAG,GACV,OAAQA,EAAM0S,QACV,IAAK,WACD,MAAO,UAEX,IAAK,WACD,MAAO,UAEX,IAAK,aACD,MAAO,UAEX,IAAK,iBACD,MAAO,UAEX,IAAK,aACD,MAAO,UAEX,QACI,MAAO,OAYD,SAAA1S,GACd,OAAQA,EAAM0S,QACV,IAAK,WACD,MAAO,UAEX,IAAK,WACD,MAAO,UAEX,IAAK,aACD,MAAO,UAEX,IAAK,iBACD,MAAO,UAEX,IAAK,aACD,MAAO,UAEX,QACI,MAAO,OAyDVsH,GAAoBpa,UAAOC,IAAV,MA8BjB0B,GAAgB3B,UAAOC,IAAV,MAiCboa,IAbqBra,UAAO4M,OAAV,MAaA5M,UAAOC,IAAV,OAWfqa,GAAkBta,kBAAO+M,KAAP/M,CAAH,MC7R5Bua,KAAO5O,OAAO,SACd,IAAM6O,GAAYC,aAAgBF,MAu1BnBG,GAr1BY,WAAO,IAAD,EACL5Y,oBAAS,GADJ,mBACtBqM,EADsB,KAChBC,EADgB,OAEetM,oBAAS,GAFxB,mBAEtB6Y,EAFsB,KAENC,EAFM,OAG8B9Y,oBAAS,GAHvC,mBAGtB+Y,EAHsB,aAIW/Y,mBAAS,KAJpB,gCAMKA,mBAAiB,CAC/CkD,GAAI,EACJ5F,MAAO,GACP0T,OAAQ,GACRgI,WAAY,GACZvF,OAAQ,GACRwF,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,MAAO,IAAI7P,KACX8P,IAAK,IAAI9P,KACT3J,IAAK,MAjBoB,mBAMtB0Z,EANsB,KAMXC,EANW,OAoBDvZ,mBAAS,CACjC,CACI1C,MAAO,eAEP0b,WAAY,UACZvF,OAAQ,UACRzC,OAAQ,WACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,QACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GACvC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,IAEzC,CACIjM,MAAO,QACP0b,WAAY,UACZvF,OAAQ,UACRzC,OAAQ,WACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GACvC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,IAEzC,CACIjM,MAAO,QACP0b,WAAY,SACZhI,OAAQ,aACRpR,IAAK,4BACL6T,OAAQ,UACR0F,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GACvC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,IAEzC,CACIjM,MAAO,eACP0b,WAAY,OACZvF,OAAQ,UACRzC,OAAQ,iBACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GACvC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,EAAG,IAE1C,CACIjM,MAAO,eACP0b,WAAY,OACZvF,OAAQ,UACRzC,OAAQ,iBACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,GACtC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,IAExC,CACIjM,MAAO,eACP0b,WAAY,OACZvF,OAAQ,UACRzC,OAAQ,iBACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GACvC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,IAExC,CACIjM,MAAO,eACP0b,WAAY,SACZvF,OAAQ,UACRzC,OAAQ,aACRpR,IAAK,4BACLuZ,SAAU,CACN,CACIK,UAAW,QACXC,QAAS,QACTC,MAAO,MAEX,CACIF,UAAW,SACXC,QAAS,QACTC,MAAO,OAGfN,MAAO,IAAI7P,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,EAAG,GACxC8P,IAAK,IAAI9P,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,EAAG,MA5KjB,mBAoBtBoQ,EApBsB,UAgL7B,SAAStM,IACLf,GAAQ,GAOZ,SAASsN,IACLd,GAAkB,GAGtB,SAASe,IACLf,GAAkB,GAOtB,SAASgB,IACLhB,GAAkB,GAGtB,IAoDMpM,EAAU1F,iBAAoB,MAE9B+S,EAAsD,yCAAG,WAAM/U,GAAN,UAAAtF,EAAA,0FAAH,sDA9P/B,EAmWeM,mBAAS,GAnWxB,6BAqW7B2B,qBAAU,WACN,IAAMqY,EAAcjY,SAASI,eACzB,cAEE8X,EAAalY,SAASI,eACxB,aAGJ6X,EAAYE,QAAU,WAClBnY,SAASC,uBACL,oBACF,GAAGmY,YAAc,KAEvBF,EAAWC,QAAU,WACjBnY,SAASC,uBACL,oBACF,GAAGmY,YAAc,KAGLtY,MAAMC,KACpBC,SAASC,uBACL,cAIEI,SAAQ,SAAAC,GAAS,IAAD,EACUA,EAAKqF,MAA7B0S,EADc,EACdA,KAAMnU,EADQ,EACRA,MAAOD,EADC,EACDA,OACfqU,EACFhY,EAAKiY,eACLzY,MAAMC,KAAKO,EAAKiY,cAAc9W,UACzBoQ,QAAO,SAAA2G,GAAC,OAAIA,IAAMlY,KAClBhD,KAAI,SAAAgD,GAAI,OAAIA,KAErBA,EAAKC,iBAAiB,aAAa,WACvB,OAAR+X,QAAQ,IAARA,KAAUjY,SAAQ,SAAAC,GACdA,EAAKqF,MAAM8S,QAAU,UAEzBnY,EAAKqF,MAAM1B,OAAS,OACpB3D,EAAKqF,MAAMzB,MAAQ,OACnB5D,EAAKqF,MAAM0S,KAAO,IAClB/X,EAAKqF,MAAM+S,OAAS,SAGxBpY,EAAKC,iBAAiB,YAAY,WACtB,OAAR+X,QAAQ,IAARA,KAAUjY,SAAQ,SAAAC,GACdA,EAAKqF,MAAM8S,QAAU,WAEzBnY,EAAKqF,MAAM1B,OAASA,EACpB3D,EAAKqF,MAAMzB,MAAQA,EACnB5D,EAAKqF,MAAM0S,KAAOA,EAClB/X,EAAKqF,MAAM+S,OAAS,YAvZH,MAgcLza,mBAAS,IAAIuJ,MAhcR,mBAgctBE,EAhcsB,KAgchBC,EAhcgB,OAicD1J,oBAAS,GAjcR,mBAmcvB0a,GAncuB,UAmcT,cAACC,GAAA,EAAD,CAASrd,MAAM,YAC7Bsd,EAAc,cAACD,GAAA,EAAD,CAASrd,MAAM,wBAC7Bud,EAAc,cAACF,GAAA,EAAD,CAASrd,MAAM,0BAC7Bwd,EAAiB,cAACH,GAAA,EAAD,CAASrd,MAAM,0BAChCyd,EAAgB,cAACJ,GAAA,EAAD,CAASrd,MAAM,uCAC/B0d,EAAsB,cAACL,GAAA,EAAD,CAASrd,MAAM,mBAE3C,OACI,eAAC,GAAD,WACI,wCACA,eAAC4a,GAAD,WACI,cAAC,KAAD,CACItO,SAAUH,EACVhB,SAAU,SAACgB,GAAD,OAAgBA,GAAQC,EAAQD,MAG9C,cAAC,KAAD,CACIR,gBAAgB,eAChBrF,QArOA,CACZ,CAAEgC,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,UAmOP6K,cAAY,EACZ7I,aAAc,CACVhC,MAAO,qBACPS,MAAO,GAEXqK,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,KAAD,CACIjH,gBAAgB,eAChBrF,QAlRE,CACd,CAAEgC,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,gBACnB,CAAES,MAAO,EAAGT,MAAO,gBAgRPgC,aAAc,CACVhC,MAAO,0BACPS,MAAO,GAEXoK,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,KAAD,CACIjH,gBAAgB,eAChBrF,QArPI,CAChB,CAAEgC,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,UAmPP6K,cAAY,EACZ7I,aAAc,CACVhC,MAAO,qBACPS,MAAO,GAEXqK,mBAAiB,EACjBC,iBAAe,OAIvB,eAAC+K,GAAA,EAAD,CAAQ5O,KAAMA,EAAMqD,OAAQrC,EAA5B,UACI,cAAC4N,GAAA,EAAO1b,OAAR,UACI,cAAC0b,GAAA,EAAOpL,MAAR,iCAEJ,cAACoL,GAAA,EAAOnL,KAAR,UACI,eAAC0I,GAAD,CACItV,GAAG,OACH6M,SAAUgK,EACVvS,IAAKkF,EAHT,UAKI,eAAC,GAAD,CAAUpP,MAAM,UAAhB,UACI,cAAC,GAAD,CACI6H,MAAM,UACNuB,KAAK,SACLuC,gBAAgB,eAChBrF,QA7TZ,CACZ,CAAEgC,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,UA2TK6K,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,iBACNuB,KAAK,aACLuC,gBAAgB,eAChBrF,QA1TR,CAChB,CAAEgC,MAAO,EAAGT,MAAO,kBACnB,CAAES,MAAO,EAAGT,MAAO,mBACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,gBACnB,CAAES,MAAO,EAAGT,MAAO,iBAqTK6K,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,aACNuB,KAAK,OACLuC,gBAAgB,eAChBrF,QA1Td,CACV,CAAEgC,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,GAAIT,MAAO,UAiTI6K,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIgB,KAAK,mBACLxK,KAAK,YACLvB,MAAM,eAGd,eAAC,GAAD,CAAU7H,MAAM,gBAAhB,UACI,cAAC,GAAD,CACI6H,MAAM,kBACNuB,KAAK,UACLuC,gBAAgB,eAChBrF,QA7TX,CACb,CAAEgC,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,UA2TK6K,cAAY,EACZC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIgB,KAAK,QACLxK,KAAK,OACLvB,MAAM,kBAEV,cAAC,GAAD,CACI+L,KAAK,YACLxK,KAAK,QACLvB,MAAM,UAEV,8BACI,wEAKhB,cAAC8V,GAAA,EAAOxb,OAAR,UACI,eAAC8Y,GAAD,WACI,wBACIrZ,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,4BA2BZ,eAACoG,GAAD,WACI,gCACI,wBAAQpV,GAAG,YAAYW,KAAK,SAA5B,SACI,cAAC,IAAD,MAEJ,wBAAQX,GAAG,aAAaW,KAAK,SAA7B,SACI,cAAC,IAAD,SAGR,cAAC,KAAD,CACIqX,SAAS,EACTC,WAAY,CACRC,eAAgB,YAA0B,IAAvBC,EAAsB,EAAtBA,SAAU3H,EAAY,EAAZA,MAAY,EAKjC2H,EAHA/d,EAFiC,EAEjCA,MACA8I,EAHiC,EAGjCA,SACAxG,EAJiC,EAIjCA,IAGJ,OACI,eAACwY,GAAD,WACI,qBAAKhV,IAAKxD,EAAK0D,IAAI,WACnB,iCAAShG,IACT,4BAAI8I,MAHasN,IAO7BhL,MAAO,YAAgB,IAAD,IAAZA,MAGFsI,GAHc,EAEd1T,MAFc,EAGd0T,QAEAyC,GALc,EAIduF,WAJc,EAKdvF,QACA0F,EANc,EAMdA,SACAC,EAPc,EAOdA,MACAC,EARc,EAQdA,IACAzZ,EATc,EASdA,IAGE0b,EAAW7C,KAAO6C,SACpB7C,KAAOY,GAAKkC,KAAK9C,KAAOW,KAGxBoC,EAAQ,EAEZ,OACI,eAACrD,GAAD,WACI,eAACE,GAAD,CACIrH,OAAQA,EACRhN,QAAS6V,EAFb,UAII,4BAAIpG,IAJR,UAKQgF,KAAOW,EAAO,UAAUvL,OACxB,SANR,cAOW4K,KAAOY,EAAK,UAAUxL,OACzB,SARR,QAUKmD,EAMD,eAAC,GAAD,WACI,cAACyK,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASb,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACU,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASZ,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACS,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASlB,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACe,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASd,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACW,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAAShB,EAHb,SAKI,cAAC,IAAD,YAIZ,eAAC,KAAD,CACIvO,KAAMwM,EACNnJ,OAAQkK,EACRiC,UAAQ,EAHZ,UAKI,cAAC,KAAMtc,OAAP,UACI,eAAC,KAAMsQ,MAAP,qBACQ4I,KACAW,EACA,UACFvL,OAAO,SAJb,cAI2B4K,KACnBY,EACA,UACFxL,OAAO,SAPb,QAQKmD,OAGT,eAAC,KAAMlB,KAAP,WACI,qBAAK1M,IAAKxD,EAAK0D,IAAI,WACnB,gCACI,4BAAImQ,IACJ,6BACK0F,EAAS9Z,KAAI,SAAAyc,GAAO,OACjB,6BACKA,EAAQtC,iBAIrB,gCACI,gCACI,cAAC,IAAD,IACA,yCACQ8B,EAASS,QADjB,aAC6BT,EAASU,UADtC,YAIJ,gCACI,cAAC,IAAD,IACA,iCACK7C,EAAS/W,SACN,SAAA0Z,GACIN,GAASzM,SACL+M,EAAQpC,UAInB8B,iBAMrB,cAAC,KAAM/b,OAAP,UACI,eAAC,GAAD,WACI,cAACgc,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASb,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACU,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QACIZ,EAJR,SAOI,cAAC,KAAD,MAEJ,cAACS,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASlB,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACe,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASd,EAHb,SAKI,cAAC,KAAD,MAEJ,cAACW,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAAShB,EAHb,SAKI,cAAC,IAAD,MAEJ,cAACa,GAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAASf,EACT7W,QACI8V,EALR,SAQI,cAAC,KAAD,mBAShCpB,UAAWA,GACXiB,OAAQA,EACRsC,YAAY,MACZC,aAAc,SAAAC,GA9nB1B7P,GAAQ,GAgoBQiN,EAAa,6BACND,GADK,IAERD,IAAK,IAAI9P,KAAK4S,EAAW/C,OACzBA,MAAO,IAAI7P,KAAK4S,EAAW/C,WAGnCgD,YAAU,EACVC,OAAK,EACLC,UAphBE,CACd,CACIpZ,GAAI,UACJ5F,MAAO,UACP8I,SAAU,eACVxG,IAAK,6BAET,CACIsD,GAAI,UACJ5F,MAAO,UACP8I,SAAU,aACVxG,IAAK,6BAET,CACIsD,GAAI,SACJ5F,MAAO,SACP8I,SAAU,cACVxG,IAAK,6BAET,CACIsD,GAAI,OACJ5F,MAAO,OACP8I,SAAU,cACVxG,IAAK,6BAET,CACIsD,GAAI,SACJ5F,MAAO,SACP8I,SAAU,WACVxG,IAAK,6BAET,CACIsD,GAAI,WACJ5F,MAAO,WACP8I,SAAU,eACVxG,IAAK,6BAET,CACIsD,GAAI,UACJ5F,MAAO,UACP8I,SAAU,eACVmW,OAAQ,MACR3c,IAAK,6BAET,CACIsD,GAAI,YACJ5F,MAAO,YACP8I,SAAU,eACVxG,IAAK,6BAET,CACIsD,GAAI,cACJ5F,MAAO,cACP8I,SAAU,eACVxG,IAAK,8BA+dG6J,KAAMA,EACN+S,YAAa,IAAIjT,KAAK,KAAM,EAAG,SAGvC,eAAC,KAAD,CACI8C,KAAM0M,EACNrJ,OApoBZ,WACIoJ,GAAkB,IAooBV+C,UAAQ,EAHZ,UAKI,cAAC,KAAMtc,OAAP,UACI,cAAC,KAAMsQ,MAAP,MAEJ,cAAC,KAAMC,KAAP,UACI,uCAEJ,cAAC,KAAMrQ,OAAP,OAGHyO,QAAQC,IAAI4K,O,syBCp8BlB,IAAM9a,GAAYC,UAAOC,IAAV,MAET4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MA8Bbue,GAAkBve,kBAAO+M,KAAP/M,CAAH,MCuKbwe,GArLa,WACxB,IAAMhQ,EAAU1F,iBAAoB,MADN,EAENhH,oBAAS,GAFH,mBAEvBqM,EAFuB,KAEjBC,EAFiB,OAGgBtM,oBAAS,GAHzB,mBAGvB2c,EAHuB,KAGNC,EAHM,KAK9B,SAASvP,IACLf,GAAQ,GAGZ,IAAMuQ,EAAiB,CACnB,CAAEjX,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,YAGjB2X,EAAkB,CACpB,CAAElX,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,6BACnB,CAAES,MAAO,EAAGT,MAAO,+BACnB,CAAES,MAAO,EAAGT,MAAO,YAGjB4X,EAAkB,CACpB,CAAEnX,MAAO,EAAGT,MAAO,eACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,WAOvB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,yBACIrQ,UAAU,qCACV2E,KAAK,SACLG,QAhCZ,WACIsI,GAAQ,IA4BJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,iDAGR,cAAC,GAAcC,KAAf,UACI,eAAC2M,GAAD,CACIvZ,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,kBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,WACLxK,KAAK,QACLvB,MAAM,WAEV,cAAC,GAAD,CACIA,MAAM,sBACNuB,KAAK,gBACLuC,gBAAgB,eAChB9B,aAAc0V,EAAe,GAC7BjZ,QAASiZ,EACT7M,cAAc,EACdvH,SAAU,SAAC3E,GACLA,GAA2B,YAAjBA,EAAOqB,MAChByX,GAAmB,GAEnBA,GAAmB,IAE1B3M,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,mBACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAc2V,EAAgB,GAC9BlZ,QAASkZ,EACT9M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,mCACKyM,GACD,cAAC,GAAD,CACIxX,MAAM,kBACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAc2V,EAAgB,GAC9BlZ,QAASkZ,EACT9M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,MAIvB,sBAAKhR,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,iBACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAc4V,EAAgB,GAC9BnZ,QAASmZ,EACT/M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,kBACLvB,MAAM,2BAEV,cAAC,GAAD,CACIuB,KAAK,cACLvB,MAAM,cACN8D,gBAAgB,eAChB9B,aAAc4V,EAAgB,GAC9BnZ,QAASmZ,EACT/M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,cAAC6H,GAAD,CAAUrR,KAAK,YAAYvB,MAAM,0BAGzC,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,omHC5Lb,IAAMjU,GAAYC,UAAOC,IAAV,MA6CT6e,IAjBa9e,UAAOC,IAAV,MAESD,UAAOmX,GAAV,MAeEnX,UAAOC,IAAV,OCuBb8e,GA9DU,WACL5I,cAEhB,OACI,eAAC,GAAD,WACI,eAAC2I,GAAD,WACI,mEACA,gCACI,cAAC,GAAD,IACA,gCACI,uBAAOpU,YAAY,mCACnB,yBAAQ1J,UAAU,gBAAgB2E,KAAK,SAAvC,UACI,6CACA,cAAC,IAAD,gBAKhB,eAAC2P,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,oDACA,iDACA,kDAGR,kCACI,+BACI,4CACA,wCACA,2CACA,+CACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,4CACA,uCACA,0CACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,4CACA,uCACA,2CACA,oDACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,qB,oyBCzD9C,IAAM/F,GAAYC,UAAOC,IAAV,MAET4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MA8Bbue,GAAkBve,kBAAO+M,KAAP/M,CAAH,MC2Jbgf,GA1Kc,WACzB,IAAMxQ,EAAU1F,iBAAoB,MADL,EAEPhH,oBAAS,GAFF,mBAExBqM,EAFwB,KAElBC,EAFkB,KAI/B,SAASe,IACLf,GAAQ,GAGZ,IAAMuQ,EAAiB,CACnB,CAAEjX,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,YAGjB2X,EAAkB,CACpB,CAAElX,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,6BACnB,CAAES,MAAO,EAAGT,MAAO,+BACnB,CAAES,MAAO,EAAGT,MAAO,YAGjBgY,EAAoB,CACtB,CAAEvX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBiY,EAAqB,CACvB,CAAExX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAavB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,yBACIrQ,UAAU,qCACV2E,KAAK,SACLG,QAhCZ,WACIsI,GAAQ,IA4BJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,yDAGR,cAAC,GAAcC,KAAf,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,kBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,WACLxK,KAAK,QACLvB,MAAM,WAEV,cAAC,GAAD,CACIA,MAAM,sBACNuB,KAAK,gBACLuC,gBAAgB,eAChB9B,aAAc0V,EAAe,GAC7BjZ,QAASiZ,EACT7M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,oBACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAc2V,EAAgB,GAC9BlZ,QAASkZ,EACT9M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,aACNuB,KAAK,aACLuC,gBAAgB,eAChB9B,aAAcgW,EAAkB,GAChCvZ,QAASuZ,EACTnN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,cACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAciW,EAAmB,GACjCxZ,QAASwZ,EACTpN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,cAAC6H,GAAD,CAAUrR,KAAK,YAAYvB,MAAM,0BAGzC,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,omHChLb,IAAMjU,GAAYC,UAAOC,IAAV,MA6CT6e,IAjBa9e,UAAOC,IAAV,MAESD,UAAOmX,GAAV,MAeEnX,UAAOC,IAAV,OCuBb8e,GA9DU,WACL5I,cAEhB,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,8DACA,gCACI,cAAC,GAAD,IACA,gCACI,uBAAOzL,YAAY,mCACnB,yBAAQ1J,UAAU,gBAAgB2E,KAAK,SAAvC,UACI,6CACA,cAAC,IAAD,gBAKhB,eAAC2P,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,oDACA,iDACA,kDAGR,kCACI,+BACI,4CACA,wCACA,0CACA,yCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,4CACA,0CACA,0CACA,yCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,4CACA,wCACA,0CACA,0CACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,qB,inOC1D9C,IAAM/F,GAAYC,UAAOC,IAAV,MAgHTqG,GAAWtG,UAAOC,IAAV,MAuGR0G,IAjFW3G,UAAOC,IAAV,MAqBUD,UAAOC,IAAV,MAkBED,UAAOC,IAAV,MA4BID,UAAOC,IAAV,MAcRD,UAAOC,IAAV,KA6BW2G,YAAQ,IAAM,aAwB7BuY,GAAQnf,kBAAO2G,GAAP3G,CAAH,MAQLof,GAAQpf,kBAAO2G,GAAP3G,CAAH,MAiBLqf,GAAWrf,UAAOC,IAAV,MAcRqf,GAAWtf,UAAOC,IAAV,MAiBR0R,GAAQ3R,UAAOuf,EAAV,M,ynFCnUX,ICgDKC,MDhDCzf,GAAYC,UAAOC,IAAV,MAQTwf,IAJuBzf,UAAOC,IAAV,MAEGD,UAAOC,IAAV,MAEPD,UAAOC,IAAV,OAWVyf,GAAe1f,UAAOC,IAAV,MAWZ0f,GAAmB3f,UAAOC,IAAV,MA4DhB0M,IA1DoB3M,kBAAO+M,KAAP/M,CAAH,MAcMA,kBAAO+M,KAAP/M,CAAH,MAyBTA,UAAOC,IAAV,MAaSD,UAAOC,IAAV,MAMED,UAAO4M,OAAO9C,OACvC,kBAAyB,CACrB+C,eADJ,EAAGA,kBADsB7M,CAAH,OAkHb4f,GAAqB5f,kBAAOiN,KAAPjN,CAAH,OC5JnBwf,W,KAAAA,G,iBAAAA,M,2BAgBZ,IA8JevR,GAvIgB,WAAO,IAAD,EACTnM,oBAAS,GADA,mBAC1BqM,EAD0B,KACpBC,EADoB,OAEKtM,mBAAyB,CAC3D4F,MAAO,EACPT,MAAO,eAJsB,gCAMuBnF,oBAAS,IANhC,mBAM1B+d,EAN0B,KAMJC,EANI,KAOjBhX,iBAAoB,MAOpC,SAASqG,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAgBtI,QANxB,WACIsI,GAAQ,MAMJ,eAACwR,GAAD,CACIzR,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAACkO,GAAmBve,OAApB,UACI,cAACue,GAAmBjO,MAApB,UACI,2EAGR,eAACiO,GAAmBhO,KAApB,WACI,eAAC8N,GAAD,WACI,yDACA,8CAEJ,gCACI,eAACpK,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,oDACA,8CACA,gDACA,sCACA,0CACA,qDAGR,gCACI,+BACI,mCACA,kDACA,yCACA,0CACA,oBACIkY,gBAAgB,OAChBC,QAAS,SAACxV,GAAD,OACLwF,QAAQC,IAAIzF,EAAMvJ,OAAOgf,cAGjC,oBAAIF,gBAAgB,OAApB,sBACA,kDAIZ,eAAC,GAAD,CACIpa,KAAK,SACLG,QAAS,kBACLga,GAAyBD,IAHjC,UAMKA,EACK,oBACA,oBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,cAACF,GAAD,UACI,eAACrK,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,qDACA,kDAGR,kCACI,+BACI,0CACA,6CAEJ,+BACI,yCACA,wDAOxB,eAAC4X,GAAD,WACI,oDACA,2CACA,oCACA,4CACA,2CACA,oCACA,iDACA,iDAGR,cAACG,GAAmBre,OAApB,UACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,6BC6NL+Q,GAtZgB,WAAO,IAAD,EACTpe,mBAAS,IAAIuJ,MADJ,mBAC1BE,EAD0B,KACpBC,EADoB,KAoHjC,OACI,eAAC,GAAD,WACI,uDACA,gCACI,cAACmG,GAAD,4BAGA,cAAC,KAAD,CACIjG,SAAUH,EACVhB,SAAU,SAAC4V,GAAD,OACVA,GAAe3U,EAAQ2U,SAG/B,gCACI,eAACd,GAAD,WACI,cAAC1N,GAAD,4CACA,gCACI,eAACwN,GAAD,WACI,yCACA,gCACI,0CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,2CACA,gCACI,2CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,0CACA,gCACI,2CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,oCACA,gCACI,2CACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,wCACA,gCACI,2CACA,cAAC,IAAD,aAIZ,cAACxN,GAAD,oDAGA,cAAC,KAAD,CAAKhM,KAAK,GAAGmB,KA7Jb,CACZC,OAAQ,CACJ,QA0BJC,SAAU,CACN,CACIC,MAAO,WACPH,KAAM,CAAC,MACPI,gBAAiB,WAErB,CACID,MAAO,aACPH,KAAM,CAAC,KACPI,gBAAiB,WAErB,CACID,MAAO,YACPH,KAAM,CAAC,KACPI,gBAAiB,WAErB,CACID,MAAO,MACPH,KAAM,CAAC,KACPI,gBAAiB,WAErB,CACID,MAAO,UACPH,KAAM,CAAC,KACPI,gBAAiB,aAyGea,MAAO,IAAKD,OAAQ,GAAIpC,QAnGjD,CACf0a,qBAAqB,EACrBvY,YAAY,EAETwY,aAAc,GACjBlZ,OAAQ,CACJC,EAAG,CACCC,KAAM,CACFhI,MAAO,QACPiI,YAAa,QACbC,UAAW,SAEfC,MAAO,CACHC,SADG,SACMC,GACL,MAAM,MAAN,OAAaA,IAEjBC,aAAa,IAGrBC,EAAG,CACCP,KAAM,CACFhI,MAAO,QACPiI,YAAa,QACbC,UAAW,cA6EX,cAACoK,GAAD,8BAGA,eAAC2D,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sDACA,yCACA,wCACA,4CACA,iDAGR,kCACI,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACyY,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,YAIZ,+BACI,sCACA,wCACA,wCACA,0CACA,6BACI,gCACI,cAAC,KAAD,IACA,cAACA,GAAD,kBAMpB,cAAC3O,GAAD,mCAGA,eAAC2D,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,oDACA,iDACA,2CAGR,kCACI,+BACI,4CACA,wCACA,2CACA,+CACA,4CAEJ,+BACI,4CACA,uCACA,0CACA,oDACA,6CAEJ,+BACI,4CACA,uCACA,2CACA,oDACA,qDAKhB,eAACyX,GAAD,WACI,cAAC3N,GAAD,wDACA,cAAC,GAAD,UACI,cAAC,KAAD,CACI7J,OAAQ,IACRC,MAAO,IACPpC,KAAK,GACLmB,KA/VR,CACZC,OAAQ,CAAC,6BAA2B,2BACpCC,SAAU,CACN,CACIC,MAAO,aACPH,KAAM,CAAC,IAAK,IACZI,gBAAiB,CAAC,UAAW,WAC7BI,YAAa,CAAC,OAAQ,WAyVV5B,QA7PL,CACf0a,qBAAqB,EACrBvY,YAAY,EACZG,QAAS,CACLC,OAAQ,CACJC,SAAU,gBA2PN,gCACI,cAACyJ,GAAD,wCACA,eAACyN,GAAD,WACI,sDACA,gCACI,mCACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,2DACA,gCACI,mCACA,cAAC,IAAD,UAGR,eAACA,GAAD,WACI,wDACA,gCACI,kCACA,cAAC,IAAD,mBAMpB,gCACI,wBACIpe,UAAU,oCACV2E,KAAK,SACLG,QAAS,iBAAK,IAHlB,uCAQA,wBACI9E,UAAU,oCACV2E,KAAK,SACLG,QAAS,iBAAK,IAHlB,iC,+7BCnaT,IAAM/F,GAAYC,UAAOC,IAAV,MCyEPsgB,GAzDwB,SAAC,GAMjC,IALH/X,EAKE,EALFA,KACAd,EAIE,EAJFA,MACAT,EAGE,EAHFA,MACAkD,EAEE,EAFFA,iBACGvB,EACD,4DACIC,EAAWC,iBAAyB,MADxC,EAE4BhH,oBAAS,GAFrC,mBAEK0e,EAFL,KAEcC,EAFd,OAGwD1X,aAASP,GAA3DQ,EAHN,EAGMA,UAAWC,EAHjB,EAGiBA,aAAcC,EAH/B,EAG+BA,cAAeC,EAH9C,EAG8CA,MAE1CuX,EAAiBzX,IAAiBvB,EAkBxC,OAhBAjE,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKT,EACLwB,SAAU,SAAAf,GACN,OAAOA,EAAIC,QAAQiX,SAEvBlW,WAAY,SAAAhB,GACRA,EAAIC,QAAQiX,QAAUE,GAE1BtW,SAAU,SAACd,EAAK5B,GACZ4B,EAAIC,QAAQiX,QAAU9Y,OAG/B,CAACuB,EAAcD,EAAWE,EAAewX,IAGxC,eAAC,GAAD,WACI,oCACIA,eAAgBA,EAChBpX,IAAKT,EACLnB,MAAOA,EACP/B,KAAK,WACL6a,QAASA,EACTjW,SAAU,WACFJ,GACAA,IAGJsW,GAAYD,IAEhBxb,GAAIgE,GACAJ,IAGR,uBAAOa,QAAST,EAAhB,SACK/B,GAD2B+B,GAI/BG,GAAS,+BAAOA,Q,8sHClEtB,ICmDKqW,GDnDCzf,GAAYC,UAAOC,IAAV,MAmBTyf,IAfuB1f,UAAOC,IAAV,MAEGD,UAAOC,IAAV,MAEPD,UAAOC,IAAV,MAWKD,UAAOC,IAAV,OAWZ0f,GAAmB3f,UAAOC,IAAV,MAEhB0gB,GAAoB3gB,kBAAO+M,KAAP/M,CAAH,MAsBjB4gB,GAAc5gB,UAAOC,IAAV,MAMX4gB,GAAuB7gB,kBAAO+M,KAAP/M,CAAH,MA0EpB8gB,IAbW9gB,UAAOC,IAAV,MAaSD,UAAOC,IAAV,OAMd0M,GAAgB3M,UAAO4M,OAAO9C,OACvC,kBAAyB,CACrB+C,eADJ,EAAGA,kBADsB7M,CAAH,MAkHb4f,GAAqB5f,kBAAOiN,KAAPjN,CAAH,O,SC3MnBwf,O,iBAAAA,I,4BAAAA,Q,KAmBZ,IAAMuB,GAAoB,CACtB,CAAErZ,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,WAGjB+Z,GAAQ,CACV,CAAEtZ,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBga,GAAgB,CAClB,CAAEvZ,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MAGjB0X,GAAiB,CACnB,CAAEjX,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,YAGjBia,GAAe,CACjB,CAAExZ,MAAO,EAAGT,MAAO,oBACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,8BAgYRgH,GA7XqC,SAAC,GAAoB,EAAlBkT,YAAmB,IAAD,EAC7Crf,oBAAS,GADoC,mBAC9DqM,EAD8D,KACxDC,EADwD,OAE/BtM,mBAAyB,CAC3D4F,MAAO,EACPT,MAAO,eAJ0D,mBAE9Dma,EAF8D,KAEjDC,EAFiD,OAMbvf,oBAAS,GANI,mBAM9D+d,EAN8D,KAMxCC,EANwC,QAOrDhX,iBAAoB,MACIhH,mBACpCmf,GAAc,KATmD,mBAQ9DzB,EAR8D,KAQhD8B,EARgD,KAgBrE,SAASnS,IACLf,GAAQ,GAuDZ,OACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAgBtI,QAtDxB,WACIsI,GAAQ,MAsDJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAAC,GAAmBrQ,OAApB,UACI,cAAC,GAAmBsQ,MAApB,UACI,2EAGR,eAAC,GAAmBC,KAApB,WACI,eAAC,GAAD,WACI,yDACA,8CAEJ,gCACK,IACD,cAAC,GAAD,UACI,eAAC,GAAD,CAAmBC,SAAU,iBAAM,IAAI7M,GAAG,OAA1C,UACI,cAAC,GAAD,CACIiC,MAAM,OACNuB,KAAK,OACLuC,gBAAgB,eAChB9B,aAAc+X,GAAM,GACpBtb,QAASsb,GACTzW,SAAU,SAAA7C,GAAK,OACXA,GAAS2Z,EAAe3Z,IAE5BqK,mBAAiB,EACjBC,iBAAe,IAEI,IAAtBoP,EAAY1Z,MACT,qCACI,cAAC,GAAD,CACIT,MAAM,UACNuB,KAAK,UACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASwb,GACTnP,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,eACNuB,KAAK,eACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASqb,GACThP,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI1J,cAAc,YACdE,KAAK,MACLvB,MAAM,eAEV,cAAC,GAAD,CACIA,MAAM,yBACN+L,KAAK,YACLxK,KAAK,UAET,cAAC,GAAD,CACIvB,MAAM,gBACN+L,KAAK,YACLxK,KAAK,aAIb,qCACI,cAAC,GAAD,CACIvB,MAAM,aACNuB,KAAK,UACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASwb,GACTnP,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,eACNuB,KAAK,eACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASqb,GACThP,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,yBACN+L,KAAK,YACLxK,KAAK,aAIjB,wBACIxH,UAAU,oCACV2E,KAAK,SAFT,+BAQR,eAAC2P,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,oDACA,8CACA,gDACA,sCACA,0CACA,qDAGR,gCACI,+BACI,mCACA,kDACA,yCACA,0CACA,oBACIkY,gBAAgB,OAChBC,QAAS,SAACxV,GAAD,OACLwF,QAAQC,IAAIzF,EAAMvJ,OAAOgf,cAGjC,oBAAIF,gBAAgB,OAApB,sBACA,kDAIZ,eAAC,GAAD,CACIpa,KAAK,SACLG,QAAS,kBACLga,GAAyBD,IAHjC,UAMKA,EACK,oBACA,oBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,cAAC,GAAD,UACI,eAAC,GAAD,CACIhO,SAAU,iBAAM,IAChB7M,GAAG,QAFP,UAII,gCACI,cAAC,GAAD,CACIiC,MAAM,qBACNuB,KAAK,OACLuC,gBAAgB,eAChB9B,aAAc0V,GAAe,GAC7BjZ,QAASiZ,GACT5M,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,aACN+L,KAAK,YACLxK,KAAK,UAET,wBAAQ7C,KAAK,SAAb,SACI,cAAC,IAAD,SAGR,eAAC2P,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,qDACA,kDAGR,kCACI,+BACI,0CACA,6CAEJ,+BACI,yCACA,mDAIZ,gCACI,gCACI,cAAC,GAAD,CACIW,KAAK,qBACLvB,MAAM,sBAEV,cAAC,GAAD,CACIuB,KAAK,qBACLvB,MAAM,qCAGd,gCACI,eAAC2Z,GAAD,WACI,qDACA,cAAC,GAAD,CACItY,cAAc,YACdE,KAAK,MACLd,MAAM,QACNqC,UAAQ,OAGhB,eAAC6W,GAAD,WACI,kDACA,gCACI,cAAC,GAAD,CACIpY,KAAK,eACLuC,gBAAgB,eAChB9B,aACIgY,GAAc,GAElBvb,QAASub,GACTlP,mBAAiB,EACjBC,iBAAe,EACfzH,SAAU,SAAA3E,GACNA,GACI0b,EACI1b,MAIhB,cAAC,GAAD,CACIoN,KAEI,IADAwM,EAAa9X,MAEP,UACA,MAEVc,KAAK,gBAIjB,sDACA,cAAC,GAAD,CACIF,cAAc,YACdE,KAAK,MACLd,MAAM,QACNqC,UAAQ,IAEZ,0CACA,cAAC,GAAD,CACIzB,cAAc,YACdE,KAAK,MACLd,MAAM,QACNqC,UAAQ,qBAmBxC,eAAC,GAAmBxI,OAApB,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,oBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,sC,izECndb,IAAMjU,GAAYC,UAAOC,IAAV,MAiCTshB,GAAyBvhB,UAAOC,IAAV,MCiKpBuhB,ID1GkBxhB,kBAAO+M,KAAP/M,CAAH,MAMAA,UAAOC,IAAV,MClEA,WACP6I,iBAAoB,MAApC,IAD6B,EAELhH,mBAAS,IAAIuJ,MAFR,mBAEtBE,EAFsB,KAEhBC,EAFgB,OAKW1J,mBACpC,MANyB,mBAKtB2f,EALsB,KAKRC,EALQ,KAS7B,OACI,eAAC,GAAD,WACI,eAACH,GAAD,WACI,iDACA,gCACI,cAAC,KAAD,CACI7V,SAAUH,EACVhB,SAAU,SAACoX,GAAD,OACNA,GAAgBnW,EAAQmW,MAEhC,gCACI,cAAC,IAAD,IACA,uBAAOjX,YAAY,+BAI/B,eAAC4K,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sDACA,yCACA,8CACA,4CACA,iDAGR,kCACI,+BACI,sCACA,wCACA,yCACA,0CACA,6BACI,gCACI,cAAC,GAAD,CACIsZ,YAAa,SAAAS,GAETF,EADAD,EACgB,GAAD,oBAAKA,GAAL,CAAmBG,IAElB,CAACA,OAIzB,cAAC,IAAD,YAIZ,+BACI,sCACA,wCACA,yCACA,0CACA,6BACI,gCACI,cAAC,GAAD,CACIT,YAAa,SAAAS,GAETF,EADAD,EACgB,GAAD,oBAAKA,GAAL,CAAmBG,IAElB,CAACA,OAIzB,cAAC,IAAD,YAIZ,+BACI,sCACA,wCACA,yCACA,0CACA,6BACI,gCACI,cAAC,GAAD,CACIT,YAAa,SAAAS,GAETF,EADAD,EACgB,GAAD,oBAAKA,GAAL,CAAmBG,IAElB,CAACA,OAIzB,cAAC,IAAD,uB,oyBCvHzB,IAAM7hB,GAAYC,UAAOC,IAAV,MAET4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MA8Bbue,GAAkBve,kBAAO+M,KAAP/M,CAAH,MCuJbgf,GApKc,WACzB,IAAMxQ,EAAU1F,iBAAoB,MADL,EAEPhH,oBAAS,GAFF,mBAExBqM,EAFwB,KAElBC,EAFkB,KAI/B,SAASe,IACLf,GAAQ,GAGZ,IAAMuQ,EAAiB,CACnB,CAAEjX,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,YAUjBgY,EAAoB,CACtB,CAAEvX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBiY,EAAqB,CACvB,CAAExX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAavB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,yBACIrQ,UAAU,qCACV2E,KAAK,SACLG,QAhCZ,WACIsI,GAAQ,IA4BJ,UAKI,6CACA,cAAC,IAAD,OAEJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,mDAGR,cAAC,GAAcC,KAAf,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,iBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,WACLxK,KAAK,QACLvB,MAAM,WAEV,cAAC,GAAD,CACIA,MAAM,qBACNuB,KAAK,qBAET,cAAC,GAAD,CACIvB,MAAM,qBACNuB,KAAK,gBACLuC,gBAAgB,eAChB9B,aAAc0V,EAAe,GAC7BjZ,QAASiZ,EACT7M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,aACNuB,KAAK,aACLuC,gBAAgB,eAChB9B,aAAcgW,EAAkB,GAChCvZ,QAASuZ,EACTnN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,cACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAciW,EAAmB,GACjCxZ,QAASwZ,EACTpN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,cAAC6H,GAAD,CAAUrR,KAAK,YAAYvB,MAAM,0BAGzC,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,4RC1Kb,IAAMjU,GAAYC,UAAOC,IAAV,MAIT2f,GAAqB5f,kBAAOiN,KAAPjN,CAAH,MCkDhBiO,GApDgB,WAAO,IAAD,EACTnM,oBAAS,GADA,mBAC1BqM,EAD0B,KACpBC,EADoB,KAGjC,SAASe,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAUtI,QANlB,WACIsI,GAAQ,MAMJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACVyQ,gBAAgB,YAChBxM,KAAK,KACLyM,SAAS,SANb,UAQI,cAAC,GAAmBrQ,OAApB,UACI,cAAC,GAAmBsQ,MAApB,UACI,qEAGR,eAAC,GAAmBC,KAApB,WACI,kDACA,8EAEJ,eAAC,GAAmBrQ,OAApB,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,oBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,8zDCzCb,IAAMjU,GAAYC,UAAOC,IAAV,MAET4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MA8Bbue,GAAkBve,kBAAO+M,KAAP/M,CAAH,MAKf2M,GAAgB3M,UAAO4M,OAAV,MAoBb+S,GAAmB3f,UAAOC,IAAV,MAQhB4gB,GAAuB7gB,kBAAO+M,KAAP/M,CAAH,MC4NlBgf,GA7Pc,WACzB,IAAMxQ,EAAU1F,iBAAoB,MADL,EAEPhH,oBAAS,GAFF,mBAExBqM,EAFwB,KAElBC,EAFkB,OAGyBtM,oBAAS,GAHlC,mBAGxB+d,EAHwB,KAGFC,EAHE,KAK/B,SAAS3Q,IACLf,GAAQ,GAGZ,IAAMuQ,EAAiB,CACnB,CAAEjX,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,YAUjBgY,EAAoB,CACtB,CAAEvX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBiY,EAAqB,CACvB,CAAExX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAavB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAQvL,QA7BhB,WACIsI,GAAQ,MA6BJ,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRnO,UAAU,iBACViE,KAAK,KACLyM,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,qDAGR,cAAC,GAAcC,KAAf,UACI,eAAC,GAAD,CACI5M,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,iBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,WACLxK,KAAK,QACLvB,MAAM,WAEV,cAAC,GAAD,CACIA,MAAM,qBACNuB,KAAK,qBAET,cAAC,GAAD,CACIvB,MAAM,qBACNuB,KAAK,gBACLuC,gBAAgB,eAChB9B,aAAc0V,EAAe,GAC7BjZ,QAASiZ,EACT7M,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,aACNuB,KAAK,aACLuC,gBAAgB,eAChB9B,aAAcgW,EAAkB,GAChCvZ,QAASuZ,EACTnN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,cACNuB,KAAK,cACLuC,gBAAgB,eAChB9B,aAAciW,EAAmB,GACjCxZ,QAASwZ,EACTpN,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,cAAC6H,GAAD,CAAUrR,KAAK,YAAYvB,MAAM,qBACjC,eAAC,GAAD,CACItB,KAAK,SACLG,QAAS,kBACLga,GAAyBD,IAHjC,UAMKA,EACK,yBACA,yBACLA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,OAGPA,GACG,eAAC,GAAD,WACI,sBAAK7e,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,aACNqB,cAAc,YACdE,KAAK,MACLd,MAAM,UAEV,cAAC,GAAD,CACIT,MAAM,iBACNqB,cAAc,YACdE,KAAK,MACLd,MAAM,UAEV,cAAC,GAAD,CACIT,MAAM,QACNqB,cAAc,YACdE,KAAK,MACLd,MAAM,aAGd,sBAAK1G,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,WACNqB,cAAc,YACdE,KAAK,MACLd,MAAM,UAEV,cAAC,GAAD,CACIT,MAAM,yBACNuB,KAAK,mBACLd,MAAM,kBAGd,oDACA,eAAC,GAAD,CACImK,SAAU,iBAAM,IAChB7M,GAAG,QAFP,UAII,gCACI,cAAC,GAAD,CACIiC,MAAM,qBACNuB,KAAK,OACLuC,gBAAgB,eAChB9B,aAAc0V,EAAe,GAC7BjZ,QAASiZ,EACT5M,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,aACN+L,KAAK,YACLxK,KAAK,UAET,wBAAQ7C,KAAK,SAAb,SACI,cAAC,IAAD,SAGR,eAAC2P,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,qDACA,kDAGR,kCACI,+BACI,0CACA,6CAEJ,+BACI,yCACA,8DAShC,eAAC,GAActG,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,48GCjRb,IAAMjU,GAAYC,UAAOC,IAAV,MAgET4hB,IAZgB7hB,UAAOC,IAAV,MAOAD,UAAOC,IAAV,MAKeD,UAAOC,IAAV,OCrC7B6hB,GAAoB,CACtB,CAAEpa,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,eAgMR8X,GA7LU,WAAO,IAAD,EACOjd,mBAAS,IAAIuJ,MADpB,mBACpB0W,EADoB,KACTC,EADS,OAEGlgB,mBAAS,IAAIuJ,MAFhB,mBAEpB4W,EAFoB,KAEXC,EAFW,OAGuBpgB,mBAC9C,MAJuB,mBAGpBqgB,EAHoB,KAGDC,EAHC,OAMStgB,mBAASggB,GAAkB,IANpC,mBAMpBO,EANoB,KAMRC,EANQ,OAOaxgB,mBAA0B,CAC9D,CACIyJ,KAAM,aACNgX,OAAQ,OACR5R,MAAO,SACP2K,UAAW,UACXxI,OAAQ,QAEZ,CACIvH,KAAM,aACNgX,OAAQ,UACR5R,MAAO,SACP2K,UAAW,UACXxI,OAAQ,YAEZ,CACIvH,KAAM,aACNgX,OAAQ,OACR5R,MAAO,SACP2K,UAAW,UACXxI,OAAQ,aAEZ,CACIvH,KAAM,aACNgX,OAAQ,OACR5R,MAAO,SACP2K,UAAW,UACXxI,OAAQ,WAEZ,CACIvH,KAAM,aACNgX,OAAQ,OACR5R,MAAO,SACP2K,UAAW,UACXxI,OAAQ,aAzCW,mBAOpB0P,EAPoB,UA6C3B,OACI,eAAC,GAAD,WACI,eAACX,GAAD,WACI,gDACA,gCACI,cAAC,GAAD,IACA,gCACI,gCACI,oDACA,cAAC,KAAD,CACI5a,MAAM,OACN8D,gBAAgB,eAChB9B,aAAc6Y,GAAkB,GAChCpc,QAASoc,GACTvX,SAAU,SAAA7C,GAAK,OACXA,GAAS4a,EAAc5a,IAE3BqK,mBAAiB,EACjBC,iBAAe,OAGD,IAArBqQ,EAAW3a,MACR,gCACI,cAAC,IAAD,IACA,uBACIgD,YAAY,kCACZH,SAAU,SAAAC,GAAK,OACX4X,EAAqB5X,EAAMvJ,OAAOyG,aAK9C,gCACI,6CACA,cAAC,KAAD,CACIgE,SAAUqW,EACVxX,SAAU,SAACoX,GAAD,OACNA,GACAK,EAAaL,MAGrB,0CACA,cAAC,KAAD,CACIjW,SAAUuW,EACV1X,SAAU,SAACoX,GAAD,OACNA,GAAgBO,EAAWP,kBAQvD,eAACrM,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,oDACA,wCACA,4CACA,iDACA,wCACA,kDAGR,gCAC2B,OAAtBsa,GAAoD,KAAtBA,EACzBK,EACK9M,QAAO,SAAA+M,GACJ,OAAOC,OAAOC,OAAOF,GAASG,MAAK,SAAAlb,GAAK,OACpCA,EACKmb,oBACAC,WACGX,EAAkBU,2BAIjC1hB,KAAI,SAACshB,EAASjN,GAAV,OACD,+BACI,6BAAKiN,EAAQlX,OACb,6BAAKkX,EAAQF,SACb,6BAAKE,EAAQ9R,QACb,6BAAK8R,EAAQnH,YACb,6BAAKmH,EAAQ3P,SACb,6BAkBZ0P,EAAarhB,KAAI,SAACshB,EAASjN,GAAV,OACb,+BACI,6BAAKiN,EAAQlX,OACb,6BAAKkX,EAAQF,SACb,6BAAKE,EAAQ9R,QACb,6BAAK8R,EAAQnH,YACb,6BAAKmH,EAAQ3P,SACb,6BACI,gCACK,IAYD,cAACiQ,GAAD,IACA,cAAC,GAAD,wB,yvGCxMnC,IAAMhjB,GAAYC,UAAOC,IAAV,MAoBT+iB,GAA4BhjB,UAAOC,IAAV,MA0EzBgjB,GAAuBjjB,UAAOC,IAAV,MAKpBijB,GAAoBljB,kBAAO+M,KAAP/M,CAAH,MAEjBmjB,GAAwBnjB,kBAAO+M,KAAP/M,CAAH,MAcrBojB,GAA6BpjB,UAAOC,IAAV,MAU1BojB,GAAwBrjB,kBAAO+M,KAAP/M,CAAH,MC7G5BsjB,GAAgB,CAClB,CAAE5b,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,UAGjBsc,GAAmB,CACrB,CAAE7b,MAAO,EAAGT,MAAO,yBACnB,CAAES,MAAO,EAAGT,MAAO,0BAUjBuc,GAAe,CACjB,CAAE9b,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,WA0NRwc,GAvNa,WAAO,IAAD,EACA3hB,mBAAS,IAAIuJ,MADb,mBACvB4W,EADuB,KACdC,EADc,OAEQpgB,mBAAS,IAAIuJ,MAFrB,mBAEvBqY,EAFuB,KAEVC,EAFU,OAGoB7hB,oBAAS,GAH7B,gCAIMA,mBAASwhB,GAAc,KAJ7B,mBAIvBM,EAJuB,aAKgB9hB,mBAE5C,KAP4B,mBAKvB+hB,EALuB,KAKNC,EALM,OAQQhiB,mBAClCyhB,GAAiB,IATS,mBAQvBnC,EARuB,KAQVC,EARU,OAWQvf,mBAAkC,CACpE,CACI0N,KAAM,UACNuU,gBAAiB,MACjBC,eAAgB,MAChBC,WAAY,OAEhB,CACIzU,KAAM,UACNuU,gBAAiB,MACjBC,eAAgB,MAChBC,WAAY,OAEhB,CACIzU,KAAM,UACNuU,gBAAiB,MACjBC,eAAgB,MAChBC,WAAY,OAEhB,CACIzU,KAAM,UACNuU,gBAAiB,MACjBC,eAAgB,MAChBC,WAAY,OAEhB,CACIzU,KAAM,UACNuU,gBAAiB,MACjBC,eAAgB,MAChBC,WAAY,SAxCU,mBAWvBC,EAXuB,UA4C9B,OACI,eAAC,GAAD,WACI,eAAClB,GAAD,WACI,8CACA,gCACI,gCACI,kDACA,cAAC,KAAD,CACItX,SAAUuW,EACV1X,SAAU,SAACoX,GAAD,OAENA,GAAgBO,EAAWP,SAGvC,gCACI,gCACI,2DACA,cAAC,KAAD,CACI1a,MAAM,OACN8D,gBAAgB,eAChB9B,aAAcqa,GAAc,GAC5B5d,QAAS4d,GACT/Y,SAAU,SAAA7C,GAAK,OACXA,GAAS2Z,EAAe3Z,IAE5BqK,mBAAiB,EACjBC,iBAAe,OAGD,IAArB4R,EAAWlc,MACR,gCACI,cAAC,IAAD,IACA,uBAAOgD,YAAY,eAGvB,cAACuY,GAAD,UACI,cAAC,KAAD,CACIhc,MAAM,OACN8D,gBAAgB,eAChB9B,aAAcua,GAAa,GAC3B9d,QAAS8d,GAITzR,mBAAiB,EACjBC,iBAAe,eAOvC,eAACsD,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,6BACI,0BAEJ,yCACA,0DACA,sDACA,uDAGR,gCACKqc,EAAY/iB,KAAI,SAACgjB,EAAQ3O,GAAT,OACb,+BACI,6BACI,cAAC0N,GAAD,CAAmBrR,SAAU,iBAAM,IAAnC,SACI,cAACuS,GAAD,CACI5b,KAAK,KACL2B,iBAAkB,WACd,GACI0Z,EAAgBQ,SAASF,GAC3B,CACE,IAAMG,EAAoBT,EAAgBnO,QACtC,SAACC,EAAG4O,GAAJ,OACIA,IAAgB/O,KAGxBsO,EACIQ,QAGJR,EAAmB,GAAD,oBACXD,GADW,CAEdM,YAOxB,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAQ3U,OACb,oCAAK2U,QAAL,IAAKA,OAAL,EAAKA,EAAQJ,kBACb,oCAAKI,QAAL,IAAKA,OAAL,EAAKA,EAAQH,iBACb,oCAAKG,QAAL,IAAKA,OAAL,EAAKA,EAAQF,wBAK7B,eAACb,GAAD,WACKS,EAAgB3iB,OAAS,GACtB,qCACI,cAAC,KAAD,CACI+F,MAAM,OACN8D,gBAAgB,eAChB9B,aAAcsa,GAAiB,GAC/B7d,QAAS6d,GACThZ,SAAU,SAAA7C,GAAK,OAAIA,GAAS2Z,EAAe3Z,IAC3CqK,mBAAiB,EACjBC,iBAAe,IAEI,IAAtBoP,EAAY1Z,MACT,eAACyb,GAAD,CAAuBtR,SAAU,iBAAM,IAAvC,UACI,gCACI,wDACA,cAAC,KAAD,CACInG,SAAUgY,EACVnZ,SAAU,SAACoX,GAAD,OACNA,GACAgC,EAAehC,SAOrB,IAHL6C,MACG,IAAInZ,MAAO0E,SAAS,EAAG,EAAG,EAAG,GAC7B2T,EAAY3T,SAAS,EAAG,EAAG,EAAG,KAE9B,cAACqU,GAAD,CACI5b,KAAK,KACLvB,MAAM,8BAGd,wBACIjG,UAAU,eACV2E,KAAK,SACLqO,KAAK,OAHT,oCASJ,eAACqP,GAAD,CAAuBxR,SAAU,iBAAM,IAAvC,UACI,gCACI,8DACA,cAAC,KAAD,CACInG,SAAUgY,EACVnZ,SAAU,SAACoX,GAAD,OACNA,GACAgC,EAAehC,SAI3B,wBACI3gB,UAAU,eACV2E,KAAK,SACLqO,KAAK,OAHT,yCAWfhE,QAAQC,IAAI4T,UC5NdY,GAtBa,WACxB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOpb,KAAK,oBAAoBsN,OAAK,EAACC,UAAWmI,KACjD,cAAC,IAAD,CAAO1V,KAAK,qBAAqBsN,OAAK,EAACC,UAAW8N,KAClD,cAAC,IAAD,CAAOrb,KAAK,sBAAsBsN,OAAK,EAACC,UAAW4K,KACnD,cAAC,IAAD,CAAOnY,KAAK,kBAAkBsN,OAAK,EAACC,UAAWsJ,KAC/C,cAAC,IAAD,CACI7W,KAAK,8BACLsN,OAAK,EACLC,UAAW+N,KAEf,cAAC,IAAD,CACItb,KAAK,yBACLsN,OAAK,EACLC,UAAWgO,KAEf,cAAC,IAAD,CAAOvb,KAAK,IAAIuN,UAAWP,S,k9ECzBhC,IAAMtW,GAAYC,UAAOC,IAAV,MAgBhB2J,GAASC,oBAAH,MAUCgb,GAAY7kB,UAAO4M,OAAO9C,OAAoB,SAAA1J,GAAK,MAAK,CACjE2J,SAAU3J,EAAM4J,WADKhK,CAAH,MAoBhB,SAAAI,GAAK,OACHA,EAAM4J,SACNC,cADA,KAIqBL,OAShBkb,GAAuB9kB,UAAOC,IAAV,MC4GlB8kB,GA/Jc,WACzB,IAAM7O,EAAUC,cADe,EAEDrU,oBAAS,GAFR,mBAExBkI,EAFwB,KAEfgO,EAFe,KAGzBgN,EAAYlc,iBAAO,MAEnBpD,EAAU,CACZuf,oBAAqB,GACrBC,kBAAkB,EAClBC,iBAAiB,EACjBC,wBAAwB,EACxBC,gBAAgB,EAChBC,qBAAqB,EACrBC,YAAY,EACZC,aAAc,UACdC,kBAAmB,MACnBC,qBAAqB,EACrBC,WAAW,EACXC,UAAW,CAAC,uBAmDhB,OACI,eAAC,GAAD,WACI,eAACd,GAAD,WACI,yCACA,gCACI,gCACI,cAACD,GAAD,CAAW7a,QAASA,EAApB,SACI,wBAAOP,QAAQ,kBAAkBH,IAAK0b,EAAtC,UACKhb,EACG,cAAC,IAAD,CAAW3K,MAAM,OAAO4F,KAAM,KAE9B,cAAC,IAAD,CAAkBA,KAAM,KAE5B,6CACA,uBACID,GAAG,kBACHW,KAAK,OACLoE,SAAUC,EACVwC,OAAO,WACPjC,SAAU,SAAAC,GAAK,OAnE/C,SAA+BA,GAG3B,GAFAwN,GAAW,GAEPxN,EAAMvJ,OAAOoL,MAAO,CACpB,IAAMD,EAAO5B,EAAMvJ,OAAOoL,MAAM,GAEhCwZ,MAAMvZ,IAAIC,gBAAgBH,IACrBiG,MAAK,SAAAzE,GAAQ,OAAIA,EAASiK,UAC1BxF,MAAK,SAAAyT,GACF9N,GAAW,GACX9B,EAAQE,KAAK,CACTrV,SAAU,wBACV8J,MAAOkb,KAAOC,MAAMF,EAAKpgB,QAGhCkN,OAAM,SAAAzJ,GAAK,OAAI6G,QAAQC,IAAI,aAqDJgW,CAAsBzb,WAKtC,wBACI7E,KAAK,SACLG,QAAS,kBACLoQ,EAAQE,KAAK,4BAHrB,+BASJ,gCACI,cAAC,IAAD,IACA,uBAAO1L,YAAY,wCAI/B,eAAC4K,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,kCACI,+BACI,iDACA,4CACA,qCACA,qCACA,sDAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,6CAGR,iC,67EClKT,IAAM9H,GAAYC,UAAOC,IAAV,MAgBhB2J,GAASC,oBAAH,MA4CCib,IAlCY9kB,UAAO4M,OAAO9C,OAAoB,SAAA1J,GAAK,MAAK,CACjE2J,SAAU3J,EAAM4J,WADKhK,CAAH,MAoBhB,SAAAI,GAAK,OACHA,EAAM4J,SACNC,cADA,KAIqBL,OASO5J,UAAOC,IAAV,OCuFlB8kB,GA1Ic,WACzB,IAAM7O,EAAUC,cADe,EAEDrU,oBAAS,GAFR,6BAGbgH,iBAAO,MAiEzB,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,yCACA,gCACI,8BACI,wBACInD,KAAK,SACLG,QAAS,kBAAMoQ,EAAQE,KAAK,gBAFhC,mCAOJ,gCACI,cAAC,IAAD,IACA,uBAAO1L,YAAY,wCAI/B,eAAC4K,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,kCACI,+BACI,iDACA,4CACA,qCACA,qCACA,sDAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,0CAEJ,+BACI,uCACA,wCACA,oCACA,mCACA,6CAGR,iC,w6EC5IT,IAAM9H,GAAYC,UAAOC,IAAV,MAaTimB,GAAiBlmB,kBAAO+M,KAAP/M,CAAH,MAgBd8kB,GAAuB9kB,UAAOC,IAAV,MCialBkmB,IArXC9W,GAAsBC,QAAQnO,KAAI,SAAA4N,GAAE,MAAK,CACrDQ,MAAOR,EAAGQ,MACVtI,MAAM,GAAD,OAAK8H,EAAGQ,MAAR,cAAmBR,EAAGS,MAC3B9H,MAAOqH,EAAGS,SAGkB,WAAO,IAAD,EAC5BhB,EAAU1F,iBAAoB,MAC9Bsd,EAAWC,cAFiB,EAGEvkB,mBAAS,IAHX,gCAIMA,mBAAwB,OAJ9B,mBAI3BmW,EAJ2B,aAKNnW,sBALM,mBAK3BwkB,EAL2B,KAKnBC,EALmB,KAOlC9iB,qBAAU,WACN,IAAMqD,EAAOsf,EAASvb,MACtBmF,QAAQC,IAAInJ,GACZyf,EAAU,CACNC,YAAa1f,EAAK2f,QAAQC,IAAIC,OAAOC,IAAIC,MACzCC,SAAUhgB,EAAK2f,QAAQC,IAAIC,OAAOC,IAAIG,IACtCC,MAAOlgB,EAAK2f,QAAQC,IAAIC,OAAOC,IAAII,MACnCC,YAAangB,EAAK2f,QAAQC,IAAIC,OAAOO,GACrCC,SAAUrgB,EAAK2f,QAAQC,IAAIC,OAAOC,IAAIQ,MACtCC,WAAYvgB,EAAK2f,QAAQC,IAAIC,OAAOW,KAAKC,MACzCC,eAAgB1gB,EAAK2f,QAAQC,IAAIC,OAAOW,KAAKG,KAC7CC,aAAc5gB,EAAK2f,QAAQC,IAAIC,OAAOgB,KAAKJ,OAAS,GACpDK,oBACI9gB,EAAK2f,QAAQC,IAAIC,OAAOgB,KAAKF,MAC7B3gB,EAAK2f,QAAQC,IAAIC,OAAOgB,KAAKE,IACjCC,WACKhhB,EAAK2f,QAAQC,IAAIC,OAAOoB,OAAOC,YAC5BlhB,EAAK2f,QAAQC,IAAIC,OAAOoB,OAAOC,WAAWT,OAC9C,GACJU,eACKnhB,EAAK2f,QAAQC,IAAIC,OAAOoB,OAAOC,YAC5BlhB,EAAK2f,QAAQC,IAAIC,OAAOoB,OAAOC,WAAWP,MAC9C,GACJS,SAAUphB,EAAK2f,QAAQC,IAAIC,OAAOoB,OAAOG,SACzCC,SAAU,CACNC,SAAUthB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQD,SAChDE,OAAQxhB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQE,IAC9CC,MAAO1hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQG,MAC7CC,OAAQ3hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQI,OAC9CC,IAAK5hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQK,IAC3CC,MAAO7hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQM,MAC7CC,MAAO9hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQO,MAC7CC,IAAK/hB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQQ,IAC3CC,KAAMhiB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQS,KAC5CC,MAAOjiB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQU,MAC7CC,OAAQliB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQW,OAC9CC,KAAMniB,EAAK2f,QAAQC,IAAIC,OAAOrJ,MAAM+K,QAAQY,MAEhDC,MAAOpiB,EAAK2f,QAAQC,IAAIC,OAAOwC,QAEpC,CAAC/C,IAMY,UAAG/W,GAAsBC,QACpCsE,MAAK,SAAAE,GAAI,OAAIA,EAAKvE,QAAU0I,YADjB,OAAG,EAEblE,QAAQ5S,KAAI,SAAA2S,GAAI,MAAK,CACnBpM,MAAOoM,EACP7M,MAAO6M,MAGf,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,mDAEHwS,GACG,eAACJ,GAAD,CACIlhB,GAAG,OACH6M,SAnBe,WAC3B,MAAO,IAmBKvI,IAAKkF,EAHT,UAKI,eAAC,GAAD,CAAUpP,MAAM,qCAAhB,UACI,sBAAK4B,UAAU,kBAAf,UAMI,cAAC,GAAD,CACIwH,KAAK,OACLvB,MAAM,qBACNS,MAAO,IAAI2D,KACPib,EAAOE,aACT4C,mBAAmB,SACrBrf,UAAQ,IAEZ,cAAC,GAAD,CACIvB,KAAK,SACLvB,MAAM,YACNS,MAAO4e,EAAOQ,SACd/c,UAAQ,IAEZ,cAAC,GAAD,CACIvB,KAAK,QACLvB,MAAM,WACNS,MAAO4e,EAAOU,MACdjd,UAAQ,OAGhB,sBAAK/I,UAAU,iBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,gBACLvB,MAAM,kBACNS,MAAO4e,EAAOW,YACdld,UAAQ,IAEZ,cAAC,GAAD,CACIvB,KAAK,WACLvB,MAAM,6BACNS,MAAO4e,EAAOa,SACdpd,UAAQ,UAIpB,gCACI,cAAC,GAAD,CAAU3K,MAAM,WAAhB,SACI,sBAAK4B,UAAU,iBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,QACLvB,MAAM,kBACNS,MAAO4e,EAAOe,WACdtd,UAAQ,IAEZ,cAAC,GAAD,CACIvB,KAAK,OACLvB,MAAM,OACNS,MAAO4e,EAAOkB,eACdzd,UAAQ,SAIpB,cAAC,GAAD,CAAU3K,MAAM,kBAAhB,SACI,sBAAK4B,UAAU,iBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,QACLvB,MAAM,kBACNS,MAAO4e,EAAOoB,aACd3d,UAAQ,IAEZ,cAAC,GAAD,CACIvB,KAAK,OACLvB,MAAM,WACNS,MAAO4e,EAAOsB,oBACd7d,UAAQ,YAKxB,eAAC,GAAD,CAAU3K,MAAM,gBAAhB,UACI,sBAAK4B,UAAU,kBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,QACLvB,MAAM,kBACNS,MAAO4e,EAAOwB,WACd/d,UAAQ,IAEZ,cAAC,GAAD,CAAOvB,KAAK,WAAWvB,MAAM,cAAW8C,UAAQ,IAChD,cAAC,GAAD,CACIvB,KAAK,OACLvB,MAAM,WACNS,MAAO4e,EAAO2B,eACdle,UAAQ,OAGhB,sBAAK/I,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,SACNuB,KAAK,SACLd,MAAO4e,EAAO2B,eACdle,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,SACNuB,KAAK,SACLd,MAAO4e,EAAO2B,eACdle,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,kBACNuB,KAAK,QACLd,MAAQ,WACJ,OAAQ4e,EAAO4B,UACX,KAAK,EACD,MAAO,WAEX,KAAK,EACD,MAAO,kBAEX,KAAK,EACD,MAAO,YAEX,KAAK,EACD,MAAO,+BAEX,KAAK,EACD,MAAO,qCAEX,KAAK,EACD,MAAO,2BAEX,QACI,MAAO,IArBX,GAwBRne,UAAQ,UAIpB,eAAC,GAAD,CAAU3K,MAAM,wBAAhB,UACI,sBAAK4B,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,6BACNuB,KAAK,WACLd,MAAO4e,EAAO6B,SAASO,MAE3B,cAAC,GAAD,CACIzhB,MAAM,gBACNuB,KAAK,YACLd,MAAO4e,EAAO6B,SAASQ,MACvB5e,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,oCACNuB,KAAK,kBACLd,MAAO4e,EAAO6B,SAASS,MACvB7e,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,uBACNuB,KAAK,eACLd,MAAO4e,EAAO6B,SAASU,SAG/B,sBAAK7nB,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,wBACNuB,KAAK,oBACLd,MAAO4e,EAAO6B,SAASC,SACvBre,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,2BACNuB,KAAK,aACLd,MAAO4e,EAAO6B,SAASK,MACvBze,UAAQ,IAGZ,cAAC,GAAD,CACI9C,MAAM,iBACNuB,KAAK,aACLd,MAAO4e,EAAO6B,SAASM,OACvB1e,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,kBACNuB,KAAK,iBACLd,MAAO4e,EAAO6B,SAASW,KACvB/e,UAAQ,OAGhB,sBAAK/I,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,WACNuB,KAAK,WACLd,MAAO4e,EAAO6B,SAASY,MACvBhf,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,gCACNuB,KAAK,gBACLd,MAAO4e,EAAO6B,SAASa,OACvBjf,UAAQ,IAEZ,cAAC,GAAD,CACI9C,MAAM,eACNuB,KAAK,WACLd,MAAO4e,EAAO6B,SAASc,OAE3B,cAAC,GAAD,CACIhiB,MAAM,sBACNuB,KAAK,iBACLd,MAAO4e,EAAO6B,SAASG,OACvBve,UAAQ,UAIpB,cAAC,GAAD,CAAU3K,MAAM,oBAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,mDACA,4DACA,wCACA,uCACA,sCACA,sCACA,sCACA,mDACA,gDACA,kDACA,uDACA,4CACA,2CACA,4CACA,gDACA,oDAGR,gCACKye,EAAO4C,MAAM/nB,KAAI,SAAAgD,GAAI,OAClB,+BACI,sCACA,sHAKA,0CACA,sCACA,sCACA,oCACA,mCACA,0CACA,sCACA,0CACA,sCACA,sCACA,sCACA,sCACA,sCACA,mDA4BpB,8BACI,wBAAQwB,KAAK,SAAb,yC,0zCCvbjB,IAAM5F,GAAYC,UAAOC,IAAV,MA6BToa,GAAkBra,UAAOC,IAAV,MCwDbopB,GAtE4B,SAAC,GAA8B,IAA5B7gB,EAA2B,EAA3BA,KAAMvB,EAAqB,EAArBA,MAAU2B,EAAW,iCAC/DC,EAAWC,iBAAyB,MAD2B,EAE3ChH,mBAAS,GAFkC,mBAE9D4F,EAF8D,KAEvD0C,EAFuD,OASjErB,aAASP,GALTQ,EAJiE,EAIjEA,UACAC,EALiE,EAKjEA,aACAC,EANiE,EAMjEA,cACAC,EAPiE,EAOjEA,MAPiE,EAQjEC,WAEJ3F,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNK,KAAM,QACNC,IAAKT,EAASU,YAEnB,CAACP,EAAWE,IAUf,OACI,eAAC,GAAD,WACKjC,GACG,8BACI,uBACIuC,MAAO,CAAEnK,MAAO8J,EAAQ,UAAY,IACpCM,QAAST,EAFb,SAIK/B,MAIb,eAAC,GAAD,WACI,wBAAQtB,KAAK,SAASG,QAjBV,WACpB4B,EAAQ,GAAK0C,EAAS1C,EAAQ,IAgBtB,eAGA,oCACI1C,GAAIgE,EACJM,IAAKT,EACLnB,MAAOA,GAAS,GAChB4hB,OAAQ,SAAA9e,GACmB,KAAvBA,EAAMvJ,OAAOyG,OAAgB0C,EAAS,IAE1CG,SAAU,SAAAC,GAAK,OACX,IAAI0H,OAAO,YAAYxB,KAAKlG,EAAMvJ,OAAOyG,QACzC0C,EAASwG,OAAOpG,EAAMvJ,OAAOyG,SAEjC8B,MAAO,CAAElC,YAAa6B,EAAQ,UAAY,IAC1CF,aAAcA,GACVL,IAER,wBAAQjD,KAAK,SAASG,QAvCV,WACpBsE,EAAS1C,EAAQ,IAsCT,sB,k+FCtET,IAAM3H,GAAYC,UAAOC,IAAV,MAgCTse,IA9BgBve,kBAAOiN,KAAPjN,CAAH,MA8BKA,kBAAO+M,KAAP/M,CAAH,OAKf6gB,GAAuB7gB,kBAAO+M,KAAP/M,CAAH,MAoEpBupB,GAAQvpB,UAAOC,IAAV,MASLupB,IAFQxpB,UAAOC,IAAV,MAEWD,UAAOC,IAAV,OAgBb6kB,GAAuB9kB,UAAOC,IAAV,MCuIlB+e,GAxOc,WACzB,IAAMxQ,EAAU1F,iBAAoB,MADL,EAEPhH,oBAAS,GAFF,6BAQ/B,IAcMmd,EAAoB,CACtB,CAAEvX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBwiB,EAAe,CACjB,CAAE/hB,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,OAgBjByiB,EAAsB,CACxB,CAAEhiB,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,oBACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,YAOvB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,mDAEJ,eAAC,GAAD,CACIrM,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,aACNuB,KAAK,aACLuC,gBAAgB,eAChB9B,aAAcgW,EAAkB,GAChCvZ,QAASuZ,EACTlN,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CAAY/K,MAAM,eAAeuB,KAAK,YAE1C,eAAC,GAAD,CAAsBqJ,SAAU,iBAAM,IAAI7M,GAAG,QAA7C,UACI,cAAC,GAAD,CACIsD,cAAc,YACdE,KAAK,YACLvB,MAAM,kBACN8D,gBAAgB,eAChB9B,aAAcwgB,EAAa,GAC3B/jB,QAAS+jB,EACT1X,mBAAiB,EACjBC,iBAAe,IAEnB,sBAAKhR,UAAU,mBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,UACNuB,KAAK,UACLuC,gBAAgB,eAChB9B,aAAcwgB,EAAa,GAC3B/jB,QAAS+jB,EACT1X,mBAAiB,EACjBC,iBAAe,IAQnB,cAAC,GAAD,CAAcxJ,KAAK,MAAMvB,MAAM,QAC/B,cAAC,GAAD,CACIA,MAAM,QACN+L,KAAK,YACLxK,KAAK,UAET,wBAAQ7C,KAAK,SAAb,SACI,cAAC,IAAD,SAGR,cAAC,GAAD,CAAUvG,MAAM,iBAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,qCACA,qCACA,mDACA,wCAGR,kCACI,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,sBAOjD,eAACyjB,GAAD,WACI,iDACA,gDAEJ,eAACC,GAAD,WACI,cAACpF,GAAD,CACI5b,KAAK,gBACLvB,MAAM,4BAEV,iDACA,cAAC,GAAD,CACIjC,GAAG,eACHwD,KAAK,eACLuC,gBAAgB,eAChB9B,aAAcygB,EAAoB,GAClChkB,QAASgkB,EACT5X,cAAc,EACdC,mBAAiB,EACjB4X,kBAAgB,c,iuGCjQjC,IAAM5pB,GAAYC,UAAOC,IAAV,MAyCTse,IA9BgBve,kBAAOiN,KAAPjN,CAAH,MA8BKA,kBAAO+M,KAAP/M,CAAH,OAKf6gB,GAAuB7gB,kBAAO+M,KAAP/M,CAAH,MAwEpBupB,GAAQvpB,UAAOC,IAAV,MASLupB,IAFQxpB,UAAOC,IAAV,MAEWD,UAAOC,IAAV,OAgBb6kB,GAAuB9kB,UAAOC,IAAV,MCqHlB+e,GAnOc,WACzB,IAAMxQ,EAAU1F,iBAAoB,MADL,EAEPhH,oBAAS,GAFF,6BAQ/B,IAAM8nB,EAAmB,CACrB,CAAEliB,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,sBACnB,CAAES,MAAO,EAAGT,MAAO,oBACnB,CAAES,MAAO,EAAGT,MAAO,sBAGjBgY,EAAoB,CACtB,CAAEvX,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,eAGjBwiB,EAAe,CACjB,CAAE/hB,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,OAGjByiB,EAAsB,CACxB,CAAEhiB,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,oBACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,YAOvB,IAAMwI,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,sEAGnD,UAAAgN,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BM,MAAOP,OAAaE,SAAS,gCAC7BgL,UAAWlL,OAAaE,SAAS,4CANc,SAQ7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IATmC,uDAa7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IAlBmB,yDAAH,sDAuBxD,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,oDAEJ,eAAC,GAAD,CACIrM,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,sBAAKxN,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,UACNuB,KAAK,UACLuC,gBAAgB,eAChB9B,aAAcgW,EAAkB,GAChCvZ,QAASuZ,EACTlN,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CAAY/K,MAAM,eAAeuB,KAAK,YAE1C,eAAC,GAAD,CAAsBqJ,SAAU,iBAAM,IAAI7M,GAAG,QAA7C,UACI,sBAAKhE,UAAU,kBAAf,UACI,cAAC,GAAD,CACIsH,cAAc,YACdE,KAAK,YACLvB,MAAM,kBACN8D,gBAAgB,eAChB9B,aAAcwgB,EAAa,GAC3B/jB,QAAS+jB,EACT1X,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,iBACNuB,KAAK,WACLuC,gBAAgB,eAChB9B,aAAc2gB,EAAiB,GAC/BlkB,QAASkkB,EACT7X,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,UACNuB,KAAK,UACLuC,gBAAgB,eAChB9B,aAAcwgB,EAAa,GAC3B/jB,QAAS+jB,EACT1X,mBAAiB,EACjBC,iBAAe,IAQnB,cAAC,GAAD,CAAcxJ,KAAK,MAAMvB,MAAM,QAC/B,cAAC,GAAD,CACIA,MAAM,QACN+L,KAAK,YACLxK,KAAK,UAET,wBAAQ7C,KAAK,SAAb,SACI,cAAC,IAAD,SAGR,cAAC,GAAD,CAAUvG,MAAM,iBAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,qCACA,qCACA,mDACA,wCAGR,kCACI,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,oCACA,mCACA,uCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,sBAOjD,eAAC,GAAD,WACI,iDACA,gDAEJ,eAAC,GAAD,WACI,cAACse,GAAD,CACI5b,KAAK,gBACLvB,MAAM,4BAEV,iDACA,cAAC,GAAD,CACIjC,GAAG,eACHwD,KAAK,eACLuC,gBAAgB,eAChB9B,aAAcygB,EAAoB,GAClChkB,QAASgkB,EACT5X,cAAc,EACdC,mBAAiB,EACjB4X,kBAAgB,UAI5B,gCACI,wBAAQhkB,KAAK,SAAb,sBACA,wBAAQA,KAAK,SAAb,uC,8sEC/PT,IAAM5F,GAAYC,UAAOC,IAAV,MAgCToa,GAAkBra,UAAOC,IAAV,MAKfijB,GAAoBljB,kBAAO+M,KAAP/M,CAAH,MAEjB6pB,GAA2B7pB,UAAOC,IAAV,MCoLtB6pB,GA1Lc,WAAO,IAAD,EACPhoB,mBAAS,IAAIuJ,MADN,gCAEiBvJ,mBAE9C,KAJ6B,mBAExBioB,EAFwB,KAENC,EAFM,OAKSloB,mBAAmC,CACvE,CACIwZ,UAAW,WACX2O,IAAK,KACLC,WAAY,MACZC,WAAY,MACZC,cAAe,MACfC,UAAW,QAEf,CACI/O,UAAW,WACX2O,IAAK,KACLC,WAAY,MACZC,WAAY,MACZC,cAAe,MACfC,UAAW,QAEf,CACI/O,UAAW,WACX2O,IAAK,KACLC,WAAY,MACZC,WAAY,MACZC,cAAe,MACfC,UAAW,UA5BY,mBAKxBC,EALwB,UAgC/B,OACI,eAAC,GAAD,WACI,eAACT,GAAD,WACI,+DACA,8BACI,gCACI,cAAC,IAAD,IACA,uBAAOnf,YAAY,8BAI/B,cAAC,GAAD,CAAUtL,MAAM,8BAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,6BACI,0BAEJ,iDACA,qCACA,wDACA,qDACA,0DACA,0DACA,6BACI,+BAIZ,gCACKyiB,EAAanpB,KAAI,SAACopB,EAAS/U,GAAV,OACd,+BACI,6BACI,cAAC,GAAD,CAAmB3D,SAAU,iBAAM,IAAnC,SACI,cAACuS,GAAD,CACI5b,KAAK,KACL2B,iBAAkB,WACd,GACI4f,EAAiB1F,SACbkG,GAEN,CACE,IAAMC,EAAsBT,EAAiBrU,QACzC,SAACC,EAAG8U,GAAJ,OACIA,IACAjV,KAGRwU,EACIQ,QAGJR,EAAoB,GAAD,oBACZD,GADY,CAEfQ,YAOxB,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAASjP,YACd,oCAAKiP,QAAL,IAAKA,OAAL,EAAKA,EAASN,MACd,oCAAKM,QAAL,IAAKA,OAAL,EAAKA,EAASL,aACd,oCAAKK,QAAL,IAAKA,OAAL,EAAKA,EAASJ,aACd,oCAAKI,QAAL,IAAKA,OAAL,EAAKA,EAASH,gBACd,oCAAKG,QAAL,IAAKA,OAAL,EAAKA,EAASF,YACd,6BACI,cAAC,IAAD,CAAUvkB,QAAS,iBAAM,qBAOjD,cAAC,GAAD,CAAU1G,MAAM,mCAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,6BACI,0BAEJ,iDACA,qCACA,wDACA,qDACA,0DACA,0DACA,6BACI,+BAIZ,gCACKyiB,EAAanpB,KAAI,SAACopB,EAAS/U,GAAV,OACd,+BACI,6BACI,cAAC,GAAD,CAAmB3D,SAAU,iBAAM,IAAnC,SACI,cAACuS,GAAD,CACI5b,KAAK,KACL2B,iBAAkB,WACd,GACI4f,EAAiB1F,SACbkG,GAEN,CACE,IAAMC,EAAsBT,EAAiBrU,QACzC,SAACC,EAAG8U,GAAJ,OACIA,IACAjV,KAGRwU,EACIQ,QAGJR,EAAoB,GAAD,oBACZD,GADY,CAEfQ,YAOxB,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAASjP,YACd,oCAAKiP,QAAL,IAAKA,OAAL,EAAKA,EAASN,MACd,oCAAKM,QAAL,IAAKA,OAAL,EAAKA,EAASL,aACd,oCAAKK,QAAL,IAAKA,OAAL,EAAKA,EAASJ,aACd,oBAAIpK,iBAAe,EAAnB,gBACKwK,QADL,IACKA,OADL,EACKA,EAASH,gBAEd,oCAAKG,QAAL,IAAKA,OAAL,EAAKA,EAASF,YACd,6BACI,cAAC,IAAD,CAAUvkB,QAAS,iBAAM,qBAOhDikB,EAAiB7oB,OAAS,EACvB,cAAC,GAAD,UACI,wBAAQF,UAAU,eAAe2E,KAAK,SAASqO,KAAK,OAApD,gCAKJ,4B,ixECrNT,IAAMjU,GAAYC,UAAOC,IAAV,MAoCToa,GAAkBra,UAAOC,IAAV,MAOf4pB,IAFoB7pB,kBAAO+M,KAAP/M,CAAH,MAEUA,UAAOC,IAAV,OC4EtB6pB,GAnGc,WAAO,IAAD,EACPhoB,mBAAS,IAAIuJ,MADN,gCAEiBvJ,mBAE9C,KAJ6B,mBAExBioB,EAFwB,aAKSjoB,mBAAmC,CACvE,CACIwZ,UAAW,WACX2O,IAAK,KACLS,SAAU,OAEd,CACIpP,UAAW,WACX2O,IAAK,KACLS,SAAU,OAEd,CACIpP,UAAW,WACX2O,IAAK,KACLS,SAAU,UAnBa,mBAKxBJ,EALwB,UAuB/B,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,wDACA,8BACI,gCACI,cAAC,IAAD,IACA,uBAAO5f,YAAY,8BAI/B,cAAC,GAAD,CAAUtL,MAAM,gCAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,qCACA,2CACA,6BACI,+BAIZ,gCACKyiB,EAAanpB,KAAI,SAACopB,EAAS/U,GAAV,OACd,+BACI,oCAAK+U,QAAL,IAAKA,OAAL,EAAKA,EAASjP,YACd,oCAAKiP,QAAL,IAAKA,OAAL,EAAKA,EAASN,MACd,oCAAKM,QAAL,IAAKA,OAAL,EAAKA,EAASG,WACd,6BACI,cAAC,IAAD,CAAU5kB,QAAS,iBAAM,qBAOjD,cAAC,GAAD,CAAU1G,MAAM,uDAAhB,SACI,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,iDACA,qCACA,2CACA,6BACI,+BAIZ,gCACKyiB,EAAanpB,KAAI,SAACopB,EAAS/U,GAAV,OACd,+BACI,oCAAK+U,QAAL,IAAKA,OAAL,EAAKA,EAASjP,YACd,oCAAKiP,QAAL,IAAKA,OAAL,EAAKA,EAASN,MACd,oCAAKM,QAAL,IAAKA,OAAL,EAAKA,EAASG,WACd,6BACI,cAAC,IAAD,CAAU5kB,QAAS,iBAAM,qBAOhDikB,EAAiB7oB,OAAS,EACvB,cAAC,GAAD,UACI,wBAAQF,UAAU,eAAe2E,KAAK,SAASqO,KAAK,OAApD,gCAKJ,4BChFD2W,GAvBS,WACpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIthB,KAAK,wBACLsN,OAAK,EACLC,UAAWuP,KAEf,cAAC,IAAD,CACI9c,KAAK,0BACLsN,OAAK,EACLC,UAAWgU,KAEf,cAAC,IAAD,CAAOvhB,KAAK,0BAA0BsN,OAAK,EAACC,UAAWrO,KACvD,cAAC,IAAD,CAAOc,KAAK,2BAA2BsN,OAAK,EAACC,UAAWiU,KACxD,cAAC,IAAD,CAAOxhB,KAAK,cAAcsN,OAAK,EAACC,UAAWkU,KAC3C,cAAC,IAAD,CAAOzhB,KAAK,oBAAoBsN,OAAK,EAACC,UAAWkT,KACjD,cAAC,IAAD,CAAOzgB,KAAK,mBAAmBsN,OAAK,EAACC,UAAWmU,KAChD,cAAC,IAAD,CAAO1hB,KAAK,IAAIuN,UAAWP,S,6cC7BhC,IAAMtW,GAAYC,UAAOC,IAAV,MAET+qB,GAA2BhrB,UAAOC,IAAV,MC6HtBgrB,GA5Ha,WACxB,OACI,eAAC,GAAD,WACI,cAACD,GAAD,UACI,yDAEJ,eAACE,GAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACI,eAACD,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,+cAYJ,eAACsZ,GAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACI,cAACH,GAAA,EAAU7pB,OAAX,yBACA,cAAC6pB,GAAA,EAAUtZ,KAAX,sdClGL0Z,GATQ,WACnB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOjiB,KAAK,kBAAkBuN,UAAWqU,KACzC,cAAC,IAAD,CAAO5hB,KAAK,IAAIuN,UAAWP,S,04ECPhC,IAAMtW,GAAYC,UAAOC,IAAV,MA4BTsrB,GAAwBvrB,UAAOC,IAAV,MC2CnB8Y,GA7Da,WACxB,IAAM7C,EAAUC,cAEhB,OACI,eAAC,GAAD,WACI,eAACoV,GAAD,WACI,0CACA,gCACI,yBACI5lB,KAAK,SACLG,QAAS,kBAAMoQ,EAAQE,KAAK,oBAFhC,UAII,6CACA,cAAC,IAAD,OAEJ,gCACI,cAAC,IAAD,IACA,uBAAO1L,YAAY,+BAI/B,eAAC4K,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,uCACA,yCACA,kDAGR,kCACI,+BACI,qCACA,oDACA,iDACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,uCACA,sDACA,iDACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,wCACA,qDACA,iDACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,qB,mgBC7D9C,IAAM/F,GAAYC,UAAOC,IAAV,MAQT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MCwDX8V,GA9Da,WAAO,IAAD,EACNhU,oBAAS,GADH,mBACvBqM,EADuB,KACjBC,EADiB,KAS9B,SAASe,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QATZ,WACIsI,GAAQ,IAKJ,uDAOA,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,kDAGR,cAAC,GAAcC,KAAf,UACI,cAAC,GAAD,CAAOpJ,KAAK,sBAAsBvB,MAAM,gBAE5C,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,8B,o4JCnDb,IAAMjU,GAAYC,UAAOC,IAAV,MAgBTurB,GAAaxrB,UAAOC,IAAV,MAyBV+V,GAAYhW,UAAOC,IAAV,MAqCTwrB,IAnBgBzrB,UAAO4M,OAAV,MAmBW5M,UAAOC,IAAV,OAQrByrB,GAAkB1rB,UAAOC,IAAV,MA6Bf0rB,GAAmB3rB,kBAAO+M,KAAP/M,CAAH,MCzEvBwjB,GAAe,CACjB,CAAE9b,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,WA8oBR8Q,GAhmBkB,WAAO,IAAD,EACXjW,oBAAS,GADE,mBACtBsM,GADsB,aAEGtM,qBAFH,mBAG7B0M,GAH6B,UAGnB1F,iBAAoB,OAHD,EAI6BhH,oBAC5D,GAL+B,gCAODA,sBAPC,mBAO5B8pB,EAP4B,KAOjBC,EAPiB,OAQqB/pB,oBAAS,GAR9B,gCASCA,mBAAS,KATV,mBAS5B+M,EAT4B,KAShBC,EATgB,OAUGhN,mBAAS,IAVZ,gCAWDA,mBAAS,KAXR,gCAYTA,mBAAS,KAZA,gCAaCA,oBAAkB,IAbnB,mBAa5BuM,EAb4B,KAahBC,EAbgB,OAcexM,oBAAS,GAdxB,mBAc5BgqB,EAd4B,KAcTC,EAdS,OAeOjqB,mBAA+B,IAftC,mBAe5BkqB,EAf4B,aAgBKlqB,mBAAwB,OAhB7B,mBAoC7BmqB,GApC6B,UAoCN,CACzB,CAACvkB,MAAO,EAAGT,MAAO,kBAClB,CAACS,MAAO,EAAGT,MAAO,gBA2BtBxD,qBAAU,WACNuM,QAAQC,IAAI2b,KAKb,CAACA,IAEJ,IAAMzT,EAAS9I,GAAsBC,QAAQnO,KAAI,SAAA2S,GAAI,MAAK,CACtDpM,MAAOoM,EAAKtE,KACZvI,MAAO6M,EAAKtE,KACZD,MAAOuE,EAAKvE,UA6ChB,IAAME,EAAkD,yCAAG,WAAM3I,GAAN,sBAAAtF,EAAA,6DAEnDsN,EAAc,IAElBkB,QAAQC,IAAInJ,GAJ2C,SAQnD,UAAA0H,EAAQjF,eAAR,SAAiB2G,UAAU,IACrBC,EAASC,OAAaC,MAAM,CAC9BgI,YAAajI,OAAaE,SACtB,0CAEJC,MAAOH,OACFG,MAAM,mCACND,SAAS,gCACdE,SAAUJ,OAAaE,SACnB,+CAEJS,gBAAiBX,OACZM,KACG,QACA,wBACA,SAAAC,GAAK,OACDK,KAAIC,QAAQN,GAAS,KACrBO,KAAKD,QAAQN,GAAS,OAE7BL,SAAS,8BA3BiC,SAgC7CH,EAAOgB,SAASrK,EAAM,CACxBsK,YAAY,IAjCmC,uDAqC7CC,EAA2C,GAC7C,gBAAejB,OACf,KAAIkB,MAAMpN,SAAQ,SAAAiF,GACdkI,EAAiBlI,EAAME,MAAQ,IAAMF,EAAMoI,WAExC,OAAP/C,QAAO,IAAPA,GAAA,UAAAA,EAASjF,eAAT,SAAkB2G,UAAUmB,IA1CmB,yDAAH,sDA+CxD,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,sDAEJ,eAACsa,GAAD,CACI3mB,GAAG,OACH6M,SAAUpC,EACVnG,IAAKkF,EAHT,UAKI,eAAC,GAAD,CAAUpP,MAAM,+BAAhB,UACI,gCACI,sBAAK4B,UAAU,kBAAf,UACI,cAAC,GAAD,CAAOwH,KAAK,OAAOvB,MAAM,UACzB,cAAC,GAAD,CAAOuB,KAAK,UAAUvB,MAAM,YAC5B,cAAC,GAAD,CACIuB,KAAK,kBACLvB,MAAM,MACNS,MAAO+E,GAAQoC,GACftE,SAAU,SAAA4B,GAAC,OAAI2C,EAAc3C,EAAElL,OAAOyG,UAE1C,cAAC,GAAD,CACIT,MAAM,OACNuB,KAAK,OACLuC,gBAAgB,eAChBL,YAAY,mBACZzB,aAAc,CACdhC,MAAO,mBACPS,MAAO,GAEPhC,QAnLN,CAClB,CAAEgC,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,aAkLK6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,kBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,iBACLxK,KAAK,WACLvB,MAAM,aAEV,cAAC,GAAD,CACI+L,KAAK,mBACLxK,KAAK,UACLvB,MAAM,YAEV,cAAC,GAAD,CAAOuB,KAAK,QAAQvB,MAAM,SAASqB,cAAc,cACjD,cAAC,GAAD,CACIrB,MAAM,qBACNuB,KAAK,wBAGb,cAAC,GAAD,CACIA,KAAK,gBACLvB,MAAM,qBACN8D,gBAAgB,eAChB9B,aAAc,CACdhC,MAAO,iCACPS,MAAO,GAEPhC,QA7ML,CACf,CAAEgC,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,sBA2MC8K,mBAAiB,EACjBC,iBAAe,OAGvB,8BACI,cAACiB,GAAD,CACIzK,KAAK,cACLvB,MAAM,yBAIlB,eAAC,GAAD,CAAU7H,MAAM,mCAAhB,UACI,sBAAK4B,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,wBACNuB,KAAK,qBAET,cAAC,GAAD,CACIA,KAAK,QACLvB,MAAM,kBACN8D,gBAAgB,eAChB9B,aAAcua,GAAa,GAC3B9d,QAAS8d,GACTzR,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,yBACNuB,KAAK,sBACLuB,UAAW+hB,IAEf,cAAC,GAAD,CACItjB,KAAK,SACLvB,MAAM,eACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,2BACPS,MAAO,GAEXqK,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,SACLvB,MAAM,0BACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXqK,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,8BACN+L,KAAK,cACLxK,KAAK,aAIb,sBAAKxH,UAAU,gBAAf,UACI,cAACojB,GAAD,CACI5b,KAAK,wBACLvB,MAAM,yBACNkD,iBAAkB,WAAO,IAAD,EACxB,UAAAqE,EAAQjF,eAAR,SAAiB+O,WAAW,uBAC5ByT,GAAsBD,MAG1B,cAAC1H,GAAD,CACI5b,KAAK,qBACLvB,MAAM,wBAEV,cAACmd,GAAD,CACI5b,KAAK,kBACLvB,MAAM,4BAIlB,cAAC,GAAD,CAAU7H,MAAM,cAAhB,SACI,eAAC,KAAD,CAAOiK,KAAK,UAAZ,UACI,sBAAKrI,UAAU,kBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,YACLxK,KAAK,MACL0B,iBAAe,EACfF,QAASqE,EACTpH,MAAM,MACN8C,SAAUsE,EACVlE,iBAAkB,SAAAK,GAvO7C,IAAwBgI,EAyO2BN,OACI,kBACFxB,KAAKlG,EAAMvJ,OAAOyG,SA3O/C8K,EA8O+BhI,EAAMvJ,OAAOyG,MA7OjE4G,GAAc,GACd6D,GACKC,IADL,8CAC6DI,IACxDH,MAAK,SAAAzE,GAAa,IAAD,IACdie,EAAaje,EAAS9G,KAAK+D,OAC3B,UAAA2D,EAAQjF,eAAR,SAAiB+I,cAAc,cAAe,IAC9C,UAAA9D,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ3F,EAAS9G,KAAK0M,aACtBC,WAAY7F,EAAS9G,KAAK4M,aAIrCd,OAAM,SAAAzJ,GAAU,IAAD,IACR0J,EAAe,gDAEE,MAAjB1J,EAAM2J,SACND,EAAe,0BAGnB,UAAArE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ,GACRE,WAAY,MAIpB,UAAAjF,EAAQjF,eAAR,SAAiB+I,cAAc,cAAeO,MAEjDE,SAAQ,kBAAMzE,GAAc,UAqNb,cAAC,GAAD,CACI9F,KAAK,aACLvB,MAAM,aACN8C,SAAUsE,IAEd,cAAC,GAAD,CAAO7F,KAAK,SAASvB,MAAM,cAC3B,cAAC,GAAD,CACIuB,KAAK,SACLvB,MAAM,SACN8C,SAAUsE,OAGlB,sBAAKrN,UAAU,kBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,cACLvB,MAAM,gBAEV,cAAC,GAAD,CACIA,MAAM,SACNuB,KAAK,SACLuC,gBAAgB,eAChB9B,aAAc,CACMhC,MAAO,YACPS,MAAO,GAE3B6C,SAAU,SAAA7C,GACUmkB,EAAY,OAACnkB,QAAD,IAACA,OAAD,EAACA,EAAOA,QAKxChC,QAASyS,EACTpG,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,SACLvB,MAAM,SACN8D,gBAAgB,eAChB9B,aAAc,CACMhC,MAAO,YACPS,MAAO,GAE3BhC,QAASsmB,EACTja,mBAAiB,EACjBC,iBAAe,YAK/B,eAAC,GAAD,CAAU5S,MAAM,yBAAhB,UACI,cAAC,GAAD,IACA,eAACssB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,SACLvB,MAAM,oCAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,aAEnC,cAAC4b,GAAD,CACI5b,KAAK,SACLvB,MAAM,4BAGd,eAACwkB,GAAD,WACI,eAACC,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,UACLvB,MAAM,YAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,UACLvB,MAAM,YAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,QACLvB,MAAM,aAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAIvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,SACLvB,MAAM,WAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,SACLvB,MAAM,WAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,QACLvB,MAAM,UAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAACkjB,GAAD,WACI,cAACtH,GAAD,CACI5b,KAAK,SACLvB,MAAM,cAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,sBAK/C,eAAC,GAAD,CAAUpJ,MAAM,cAAhB,UACI,cAAC,GAAD,CACI6H,MAAM,wBACNuB,KAAK,YACLuC,gBAAgB,eAChBL,YAAY,0BACZzB,aAAc,CACNhC,MAAO,0BACPS,MAAO,GAEfhC,QAndC,CACjB,CAAEgC,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,8BAidH6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,eAACsD,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,mCACA,oDACA,qDACA,qDACA,4DAKR,kCACI,+BACI,6BACI,cAACuc,GAAD,CACI5b,KAAK,aAGb,mDACA,uCACA,6BACI,cAAC,GAAD,CACIA,KAAK,iBACLuC,gBAAgB,eAChB9B,aAAcgjB,EAAqB,GACnCvmB,QAASumB,EACTla,mBAAiB,EACjBC,iBAAe,MAGvB,6BACI,cAAC,GAAD,CAAaxJ,KAAK,mBAAgBwK,KAAK,iBAG/C,+BACI,6BACI,cAACoR,GAAD,CACI5b,KAAK,aAGb,gDACA,uCACA,6BACI,cAAC,GAAD,CACIA,KAAK,iBACLuC,gBAAgB,eAChB9B,aAAcgjB,EAAqB,GACnCvmB,QAASumB,EACTla,mBAAiB,EACjBC,iBAAe,MAGvB,6BACI,cAAC,GAAD,CAAaxJ,KAAK,mBAAgBwK,KAAK,iBAG/C,+BACI,6BACI,cAACoR,GAAD,CACI5b,KAAK,aAGb,iDACA,uCACA,6BACI,cAAC,GAAD,CACIA,KAAK,iBACLuC,gBAAgB,eAChB9B,aAAcgjB,EAAqB,GACnCvmB,QAASumB,EACTla,mBAAiB,EACjBC,iBAAe,MAGvB,6BACI,cAAC,GAAD,CAAaxJ,KAAK,mBAAgBwK,KAAK,6BAO/D,eAACwY,GAAD,WAEI,wBACIxqB,UAAU,oCACV2E,KAAK,SACLG,QA9fhB,WACIsI,GAAQ,IA0fA,sBAOA,wBACIpN,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,2BC7pBDyC,GAZU,WACJC,cAATrN,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,WAAWsN,OAAK,EAACC,UAAWC,KACxC,cAAC,IAAD,CAAOxN,KAAK,kBAAkBsN,OAAK,EAACC,UAAWsV,KAC/C,cAAC,IAAD,CAAO7iB,KAAK,IAAIuN,UAAWP,S,y6BCZhC,IAAMtW,GAAYC,UAAOC,IAAV,MAcT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MC6HXmsB,GAxIgB,WAAO,IAAD,EACTrqB,oBAAS,GADA,mBAC1BqM,EAD0B,KACpBC,EADoB,KA0BjC,SAASe,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QATZ,WACIsI,GAAQ,IAKJ,iCAOA,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,yDAGR,eAAC,GAAcC,KAAf,WACI,sBAAK5Q,UAAU,kBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,iBACNuB,KAAK,iBACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QA9DL,CACf,CAAEgC,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,UACnB,CAAES,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,UAyDC6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,WACNuB,KAAK,WACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAlEH,CACjB,CAAEgC,MAAO,EAAGT,MAAO,QACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,SACnB,CAAES,MAAO,EAAGT,MAAO,SA6DC6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACI/K,MAAM,iBACNuB,KAAK,WACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAtEC,CACrB,CAAEgC,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,cAqEC6K,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,OAGvB,sBAAKhR,UAAU,kBAAf,UACI,cAAC,GAAD,CACIsH,cAAc,YACdE,KAAK,QACLvB,MAAM,2BAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,QACLvB,MAAM,4CAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,QACLvB,MAAM,gCAIlB,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,o5BC9Hb,IAAMjU,GAAYC,UAAOC,IAAV,MAcT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MC0JXmsB,GAjKgB,WAC3B,IAAMzC,EAAsB,CACxB,CAAEhiB,MAAO,EAAGT,MAAO,YACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,oBACnB,CAAES,MAAO,EAAGT,MAAO,aACnB,CAAES,MAAO,EAAGT,MAAO,cACnB,CAAES,MAAO,EAAGT,MAAO,WACnB,CAAES,MAAO,EAAGT,MAAO,YARU,EAWTnF,oBAAS,GAXA,mBAW1BqM,EAX0B,KAWpBC,EAXoB,OAe7BtM,mBAAyB4nB,EAAoB,IAfhB,mBAa7B0C,EAb6B,KAc7BC,EAd6B,KAiB3BC,EAAqB,CACvB,CAAE5kB,MAAO,EAAGT,MAAO,mBACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,MACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,OACnB,CAAES,MAAO,EAAGT,MAAO,QAQvB,SAASkI,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QATZ,WACIsI,GAAQ,IAKJ,qCAOA,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,sEAGR,eAAC,GAAcC,KAAf,WACI,sBAAK5Q,UAAU,iBAAf,UACI,cAAC,GAAD,CACIiG,MAAM,eACNuB,KAAK,eACLuC,gBAAgB,eAChB9B,aAAcygB,EAAoB,GAClChkB,QAASgkB,EACTnf,SAAU,SAAA3E,GACNA,GAAUymB,EAAsBzmB,IAEpCkM,cAAc,EACdC,mBAAiB,EACjB4X,kBAAgB,IAEU,IAA7ByC,EAAmB1kB,OAChB,cAAC,GAAD,CACIT,MAAM,eACNuB,KAAK,eACLuC,gBAAgB,eAChB9B,aAAcqjB,EAAmB,GACjC5mB,QAAS4mB,EACTxa,cAAc,EACdC,mBAAiB,EACjBC,iBAAe,IAGvB,cAAC,GAAD,CACI1J,cAAc,YACdE,KAAK,YACLvB,MAAM,uBAGd,sBAAKjG,UAAU,iBAAf,UACI,cAAC,GAAD,CACIsH,cAAc,YACdE,KAAK,YACLvB,MAAM,iBAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,WACLvB,MAAM,gBAGgB,IAA7BmlB,EAAmB1kB,OAChB,qCACI,cAAC0c,GAAD,CACInd,MAAM,sDACNuB,KAAK,OAET,cAAC4b,GAAD,CACInd,MAAM,4CACNuB,KAAK,OAET,cAAC4b,GAAD,CACInd,MAAM,8DACNuB,KAAK,OAET,eAAC8M,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,6BACI,6CAGR,iCAImB,IAA7BukB,EAAmB1kB,OACY,IAA7B0kB,EAAmB1kB,QACnB,cAAC0c,GAAD,CAAUnd,MAAM,qBAAqBuB,KAAK,UAGlD,eAAC,GAAcjH,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,o5BC3Jb,IAAMjU,GAAYC,UAAOC,IAAV,MAcT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MC6DXusB,GAxEY,WAAO,IAAD,EACLzqB,oBAAS,GADJ,mBACtBqM,EADsB,KAChBC,EADgB,KAG7B,SAASe,IACLf,GAAQ,GAOZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QATZ,WACIsI,GAAQ,IAKJ,+BAOA,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,4DAGR,cAAC,GAAcC,KAAf,UACI,sBAAK5Q,UAAU,kBAAf,UACI,cAAC,GAAD,CACIsH,cAAc,YACdE,KAAK,QACLvB,MAAM,oBAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,QACLvB,MAAM,UAEV,cAAC,GAAD,CACIqB,cAAc,YACdE,KAAK,QACLvB,MAAM,2BAIlB,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,k/BC/Db,IAAMjU,GAAYC,UAAOC,IAAV,MC6EPusB,GAxDyB,SAAC,GAA8B,IAA5BhkB,EAA2B,EAA3BA,KAAMvB,EAAqB,EAArBA,MAAU2B,EAAW,iCAC3DC,EAAWC,iBAAyB,MADuB,EAERC,aAASP,GAA3DQ,EAF0D,EAE1DA,UAAWE,EAF+C,EAE/CA,cAF+C,KAEhCD,aAFgC,EAElBE,MACRrH,sBAH0B,mBAG3DiK,EAH2D,KAG7CC,EAH6C,KAK5DC,EAAgBC,uBAAY,SAACC,GAAsC,IAAD,EAC9DC,EAAI,UAAGD,EAAElL,OAAOoL,aAAZ,aAAG,EAAiB,GAG1BL,EADDI,GAGiB,QAErB,IAcH,OAZA3I,qBAAU,WACNyF,EAAc,CACVV,KAAMQ,EACNM,IAAKT,EAASU,QACdF,KAAM,WACNiB,WAJU,SAIChB,GACPA,EAAI5B,MAAQ,GACZsE,EAAgB,WAGzB,CAAChD,EAAWE,IAGX,cAAC,GAAD,UACI,wBAAOO,QAAST,EAAhB,UACK/B,GAAS,4BAAIA,IACb8E,IAAiBA,EAAapG,KAAK0e,SAAS,SACzC,qBACInf,IAAKoH,IAAIC,gBAAgBR,GACzB3G,IAAI,WAGR,uBACIJ,GAAG,QACHE,IAAKoH,IAAIC,gBAAgBR,GACzB0gB,UAAQ,KAGhB,oCACI9mB,KAAK,OACLX,GAAIgE,EACJM,IAAKT,EACL0B,SAAU0B,EACVO,OAAO,oBACH5D,U,k5BCrEjB,IAAM7I,GAAYC,UAAOC,IAAV,MAaT4V,GAAgB7V,kBAAOiN,KAAPjN,CAAH,MCoGXusB,GA5GY,WAAO,IAAD,EACLzqB,oBAAS,GADJ,mBACtBqM,EADsB,KAChBC,EADgB,KAG7B,SAASe,IACLf,GAAQ,GAiCZ,OACI,eAAC,GAAD,WACI,wBACIpN,UAAU,qCACV2E,KAAK,SACLG,QAnCZ,WACIsI,GAAQ,IA+BJ,gCAOA,eAAC,GAAD,CACID,KAAMA,EACNqD,OAAQrC,EACRlK,KAAK,KACLjE,UAAU,iBACV0Q,SAAS,SALb,UAOI,cAAC,GAAcrQ,OAAf,UACI,cAAC,GAAcsQ,MAAf,UACI,4DAGR,eAAC,GAAcC,KAAf,WACI,cAAC,GAAD,CACItJ,cAAc,aACdE,KAAK,iBACLvB,MAAM,sBAEV,sBAAKjG,UAAU,iBAAf,UACI,cAAC,GAAD,CAAYiG,MAAM,gBAAgBuB,KAAK,gBACvC,cAAC,GAAD,CAAYvB,MAAM,cAAcuB,KAAK,iBAEzC,sBAAKxH,UAAU,kBAAf,UACI,cAACojB,GAAD,CACI5b,KAAK,mBACLvB,MAAM,wBAEV,cAACmd,GAAD,CACI5b,KAAK,mBACLvB,MAAM,wBAEV,cAACmd,GAAD,CACI5b,KAAK,oBACLvB,MAAM,4BAGd,cAAC,GAAD,CACIuB,KAAK,QACLvB,MAAM,2DAGd,eAAC,GAAc1F,OAAf,WACI,wBACIP,UAAU,oCACV2E,KAAK,SACLG,QAASqJ,EAHb,sBAOA,wBACInO,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,iC,i4ICpGb,IAAMjU,GAAYC,UAAOC,IAAV,MAET+V,GAAYhW,UAAOC,IAAV,MAkBTysB,GAAyB1sB,kBAAO+M,KAAP/M,CAAH,MAoFtB2sB,GAAiB3sB,UAAOC,IAAV,MA+BdurB,GAAaxrB,UAAOC,IAAV,MAyBVwrB,GAAwBzrB,UAAOC,IAAV,MAQrByrB,GAAkB1rB,UAAOC,IAAV,MCiXb2sB,GA5diB,WAC5B,IAAMC,EAAyD,yCAAG,WAAM/lB,GAAN,UAAAtF,EAAA,sDAC9DwO,QAAQC,IAAInJ,GADkD,2CAAH,sDAIzD0H,EAAU1F,iBAAoB,MALF,EAMEhH,mBAAS,IANX,mBAM3B+M,EAN2B,KAMfC,EANe,OAOEhN,oBAAkB,GAPpB,mBAO3BuM,EAP2B,KAOfC,EAPe,OAQAxM,qBARA,mBAQhB+pB,GARgB,aASQ/pB,mBAA8B,IATtC,mBAS3BkqB,EAT2B,KAW5B7T,GAX4B,KAWnB9I,GAAsBC,QAAQnO,KAAI,SAAA2S,GAAI,MAAK,CACtDpM,MAAOoM,EAAKtE,KACZvI,MAAO6M,EAAKtE,KACZD,MAAOuE,EAAKvE,WA+DhB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,kDAEJ,eAACmd,GAAD,CACI1nB,GAAG,OACH6M,SAAUgb,EACVvjB,IAAKkF,EAHT,UAKI,eAAC,GAAD,CAAUpP,MAAM,+BAAhB,UACI,cAAC,GAAD,CAAOoJ,KAAK,cAAcvB,MAAM,qBAChC,sBAAKjG,UAAU,iBAAf,UACI,cAAC,GAAD,CACIwH,KAAK,kBACLvB,MAAM,YACNS,MACImH,EAAW3N,OAAS,GACdwL,GAASmC,GACTpC,GAAQoC,GAElBtE,SAAU,SAAA4B,GAAC,OAAI2C,EAAc3C,EAAElL,OAAOyG,UAE1C,cAAC,GAAD,CAAOc,KAAK,QAAQvB,MAAM,cAG9B,sBAAKjG,UAAU,kBAAf,UACI,cAAC,GAAD,CAAOwH,KAAK,UAAUvB,MAAM,YAC5B,cAAC,GAAD,CACI+L,KAAK,iBACLxK,KAAK,WACLvB,MAAM,aAEV,cAAC,GAAD,CACI+L,KAAK,mBACLxK,KAAK,UACLvB,MAAM,eAGd,sBAAKjG,UAAU,iBAAf,UACI,cAAC6Y,GAAD,CACIrR,KAAK,YACLvB,MAAM,uCAEV,eAAC0lB,GAAD,WACI,cAAC,GAAD,CACI3Z,KAAK,OACLxK,KAAK,UACLvB,MAAM,wBAEV,2IAOZ,eAAC,GAAD,CAAU7H,MAAM,8BAAhB,UACI,eAAC,GAAD,WACI,cAACglB,GAAD,CACI5b,KAAK,QACLvB,MAAM,oCAEV,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,aAEnC,cAAC4b,GAAD,CAAU5b,KAAK,SAASvB,MAAM,4BAElC,eAAC,GAAD,WACI,eAAC,GAAD,WACI,cAACmd,GAAD,CAAU5b,KAAK,UAAUvB,MAAM,YAC/B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,UAAUvB,MAAM,YAC/B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,QAAQvB,MAAM,aAC7B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,SAASvB,MAAM,WAC9B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,SAASvB,MAAM,WAC9B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,QAAQvB,MAAM,UAC7B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,gBAGvC,eAAC,GAAD,WACI,cAAC4b,GAAD,CAAU5b,KAAK,SAASvB,MAAM,cAC9B,2CACA,gCACI,cAAC,GAAD,CAAa+L,KAAK,QAAQxK,KAAK,UADnC,QAGI,cAAC,GAAD,CAAawK,KAAK,QAAQxK,KAAK,sBAK/C,cAAC,GAAD,CAAUpJ,MAAM,cAAhB,SACI,eAAC,KAAD,CAAOiK,KAAK,UAAZ,UACI,sBAAKrI,UAAU,kBAAf,UACI,cAAC,GAAD,CACIgS,KAAK,YACLxK,KAAK,MACL0B,iBAAe,EACfF,QAASqE,EACTpH,MAAM,MACN8C,SAAUsE,EACVlE,iBAAkB,SAAAK,GA/M9C,IAAwBgI,EAiNYN,OAAO,kBAAkBxB,KACrBlG,EAAMvJ,OAAOyG,SAlN7B8K,EAqN2BhI,EAAMvJ,OAAOyG,MApN5D4G,GAAc,GACd6D,GACKC,IADL,8CAC6DI,IACxDH,MAAK,SAAAzE,GAAa,IAAD,IACdie,EAAaje,EAAS9G,KAAK+D,OAC3B,UAAA2D,EAAQjF,eAAR,SAAiB+I,cAAc,cAAe,IAC9C,UAAA9D,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ3F,EAAS9G,KAAK0M,aACtBC,WAAY7F,EAAS9G,KAAK4M,aAIrCd,OAAM,SAAAzJ,GAAU,IAAD,IACR0J,EAAe,gDAEE,MAAjB1J,EAAM2J,SACND,EAAe,0BAGnB,UAAArE,EAAQjF,eAAR,SAAiBkJ,QAAQ,CACrBE,QAAS,CACLY,OAAQ,GACRE,WAAY,MAIpB,UAAAjF,EAAQjF,eAAR,SAAiB+I,cAAc,cAAeO,MAEjDE,SAAQ,kBAAMzE,GAAc,UA2Lb,cAAC,GAAD,CACI9F,KAAK,aACLvB,MAAM,aACN8C,SAAUsE,IAEd,cAAC,GAAD,CAAO7F,KAAK,SAASvB,MAAM,cAC3B,cAAC,GAAD,CACIuB,KAAK,SACLvB,MAAM,SACN8C,SAAUsE,OAGlB,sBAAKrN,UAAU,kBAAf,UACI,cAAC,GAAD,CAAOwH,KAAK,cAAcvB,MAAM,gBAChC,cAAC,GAAD,CACIA,MAAM,SACNuB,KAAK,SACLuC,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEX6C,SAAU,SAAA7C,GACNmkB,EAAY,OAACnkB,QAAD,IAACA,OAAD,EAACA,EAAOA,QAKxBhC,QAASyS,EACTpG,mBAAiB,EACjBC,iBAAe,IAEnB,cAAC,GAAD,CACIxJ,KAAK,SACLvB,MAAM,SACN8D,gBAAgB,eAChB9B,aAAc,CACVhC,MAAO,YACPS,MAAO,GAEXhC,QAASsmB,EACTja,mBAAiB,EACjBC,iBAAe,YAK/B,eAAC,GAAD,CAAU5S,MAAM,+BAAhB,UACI,cAAC,GAAD,IACA,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,gDACA,0CACA,gDACA,2CACA,+DACA,sDACA,iDAGR,kCACI,+BACI,uCACA,4CACA,4CACA,qCACA,qCACA,oCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,uCACA,4CACA,4CACA,qCACA,qCACA,oCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,uCACA,4CACA,4CACA,qCACA,qCACA,oCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,oBAM7C,eAAC,GAAD,CAAU1G,MAAM,4BAAhB,UACI,cAAC0tB,GAAD,IACA,eAACxX,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,4CACA,iDAGR,kCACI,+BACI,yCACA,wCACA,uCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,yCACA,wCACA,wCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,yCACA,wCACA,wCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,oBAM7C,eAAC,GAAD,CAAU1G,MAAM,iBAAhB,UACI,cAAC,GAAD,IACA,eAACkW,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,4CACA,4CACA,iDAGR,kCACI,+BACI,yCACA,wCACA,uCACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,yCACA,wCACA,wCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,yCACA,wCACA,wCACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,oBAM7C,eAAC,GAAD,CAAU1G,MAAM,mBAAhB,UACI,cAAC2tB,GAAD,IACA,eAACzX,GAAA,EAAD,CAAOzN,YAAU,EAAjB,UACI,gCACI,+BACI,sCACA,8CACA,4CACA,iDAGR,kCACI,+BACI,sDACA,4CACA,4CACA,6BACI,cAAC,IAAD,CAAU/B,QAAS,iBAAM,WAGjC,+BACI,sDACA,4CACA,4CACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,WAGjC,+BACI,wDACA,4CACA,4CACA,6BACI,cAAC,IAAD,CAAUA,QAAS,iBAAM,oBAM7C,cAAC,KAAD,CACI1G,MAAM,iBACN4tB,QAhZA,CACZ,CACIxkB,KAAM,OACNykB,SAAU,OACVC,UAAU,GAEd,CACI1kB,KAAM,MACNykB,SAAU,MACVC,UAAU,EACVC,OAAO,GAEX,CACI3kB,KAAM,aACNykB,SAAU,aACVC,UAAU,EACVC,OAAO,GAEX,CACI3kB,KAAM,aACNykB,SAAU,aACVC,UAAU,EACVC,OAAO,IA2XCrmB,KAlZH,CAAC,CAAE9B,GAAI,EAAGwK,KAAM,UAAW4d,IAAK,OAAQC,WAAY,UAmZjDC,YAAU,OAGlB,eAAC,GAAD,WACI,wBACItsB,UAAU,oCACV2E,KAAK,SACLG,QAAS,iBAAM,IAHnB,sBAOA,wBACI9E,UAAU,oCACV2E,KAAK,SACLqO,KAAK,OAHT,2BC3eDuZ,GApBU,kBACrB,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlkB,KAAK,aAAauN,UAAW/P,KACpC,cAAC,IAAD,CAAOwC,KAAK,UAAUuN,UAAWkB,KACjC,cAAC,IAAD,CAAOzO,KAAK,WAAWuN,UAAW4W,KAClC,cAAC,IAAD,CAAOnkB,KAAK,aAAauN,UAAWmC,KACpC,cAAC,IAAD,CAAO1P,KAAK,iBAAiBuN,UAAWgW,KACxC,cAAC,IAAD,CAAOvjB,KAAK,YAAYuN,UAAW0C,KACnC,cAAC,IAAD,CAAOjQ,KAAK,YAAYuN,UAAW6W,KACnC,cAAC,IAAD,CAAOpkB,KAAK,cAAcuN,UAAWa,KACrC,cAAC,IAAD,CAAOpO,KAAK,aAAauN,UAAW6N,KACpC,cAAC,IAAD,CAAOpb,KAAK,SAASuN,UAAW+T,KAChC,cAAC,IAAD,CAAOthB,KAAK,YAAYuN,UAAW8D,KACnC,cAAC,IAAD,CAAOrR,KAAK,WAAWuN,UAAWH,KAClC,cAAC,IAAD,CAAOpN,KAAK,QAAQuN,UAAW0U,WCrB5BiC,GANU,kBACrB,cAAC,IAAD,UACI,cAAC,GAAD,OCOOG,GAPO,kBAClB,eAAC,gBAAD,CAAertB,MAAOstB,EAAtB,UACI,cAAC,GAAD,IACA,cAAC,EAAD,QCLRC,IAASC,OAAO,cAAC,GAAD,IAAShqB,SAASI,eAAe,U","file":"static/js/main.5f68359e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/colapsibleIcon.95552bd0.svg\";","import { createGlobalStyle } from 'styled-components';\nimport { darken } from 'polished';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport colapsibleCustomIcon from '../assets/svg/colapsibleIcon.svg';\n\nexport default createGlobalStyle`\n    :root {\n        --base-primary-color: #222;\n        --base-secondary-color:#dfaa4a;\n        --base-tertiary-color: #fd5c0e;\n        --base-background-color: #f8f8f8;\n        --base-quaternary-color: #FFFF;\n        --primary-border-color: #eee;\n        --secondary-border-color: #ddd;\n        --primary-text-color: #7e7e7e;\n        --secondary-text-color: #585858;\n        --tertiary-text-color: #292929;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        outline: 0;\n    }\n\n   /*  @font-face {\n        font-family: 'sans-serif';\n        src: local('Gidole-Regular'), url(../assets/fonts/Gidole-Regular.otf) format('otf');\n    } */\n\n    a {\n        text-decoration:none !important;\n    }\n\n    body {\n        -webkit-font-smoothing: antialiased;\n    }\n\n\n    @media only screen and (max-width: 600px) {\n\n        body, input, button {\n            font-size:  12px !important;\n        }\n\n    }\n\n    body, input, button {\n        font-family: 'Roboto Slab',  serif;\n        color: var(--primary-text-color);\n        font-size: 14px;\n    }\n\n    html, body, #root {\n        width: 100vw;\n        height: 100vh;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n        font-weight: 500;\n    }\n\n    button {\n        cursor: pointer;\n        background: none;\n        border: none;\n        border-radius: 20px;\n        font-weight: bold;\n        text-transform: uppercase;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 200px;\n        font-size: 11px;\n        height: 35px;\n        transition: background 0.3s;\n        color: var(--base-quaternary-color);\n        background: var(--base-tertiary-color);\n\n        &:hover {\n            background: ${darken(0.04, '#fd5c0e')};\n        }\n\n        &:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n        }\n    }\n\n    .buttonStyle {\n        cursor: pointer;\n        background: none;\n        border: none;\n        border-radius: 20px;\n        font-weight: bold;\n        text-transform: uppercase;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 200px;\n        font-size: 11px;\n        height: 35px;\n        transition: background 0.3s;\n        color: var(--base-quaternary-color);\n        background: var(--base-tertiary-color);\n\n        &:hover {\n            background: ${darken(0.04, '#fd5c0e')};\n        }\n\n        &:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n        }\n    }\n\n    .twoFieldsGroup {\n        display: flex;\n        > div {\n            width: 50%;\n        }\n    }\n    .treeFieldsGroup {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n    .fourFieldsGroup {\n        display: flex;\n        > div {\n            width: 25%;\n        }\n    }\n\n    .fiveFieldsGroup {\n        display: flex;\n        > div {\n            width: 20%;\n        }\n    }\n\n    .sixFieldsGroup {\n        display: flex;\n        > div {\n            width: 16.67%;\n        }\n    }\n\n    .baseModalStyle {\n\n        .modal-content {\n            border: none;\n        }\n\n        .modal-header {\n            display: flex;\n            align-items: center;\n            height: 50px;\n            background: var(--base-tertiary-color);\n            color: #fff;\n\n            span {\n                color: #fff;\n            }\n        }\n\n        .modal-body {\n            color: var(--primary-text-color);\n            padding: 0px;\n        }\n\n        .modal-title {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            p {\n                margin: 0px;\n                font-weight: bold;\n                font-size: 18px;\n            }\n        }\n\n        .modal-footer {\n            display: flex;\n            justify-content: flex-end;\n            border-top: 0px;\n\n            > :first-child {\n                border: 2px solid var(--primary-border-color);\n                background: none;\n                color: var(--primary-text-color);\n\n                 &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n\n            button {\n                width: 100px;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n        }\n\n        .modal-90w {\n            width: 90%;\n            max-width: 1300px;\n        }\n    }\n\n    .accordion-button {\n        color: var(--primary-text-color);\n        font-size: 14px !important;\n        padding: 30px;\n        &:hover {\n            background: var(--base-background-color);\n        }\n    }\n\n    .accordion-button:not(.collapsed) {\n        color: var(--base-tertiary-color);\n        background-color: var(--base-background-color);\n    }\n\n    .accordion-button:focus {\n        border-color: red !important;\n        box-shadow: none;\n    }\n\n    .accordion-button:not(.collapsed)::after{\n        background-image:url(${colapsibleCustomIcon});\n    }\n\n    .accordion-body {\n        color: var(--primary-text-color);\n    }\n\n    .leaf_bb9a._bottom_3425 .cssLeaf_a623, .leaf_bb9a._left_927f .cssLeaf_a623, .leaf_bb9a._right_3d21 .cssLeaf_a623 {\n        display: none !important;\n    }\n`;\n","export default {\n    title: 'ligth',\n    color: {\n        primary: '#DCDCDC',\n        secondary: '#FFF',\n        tertiary: '#F5F5F5',\n\n        white: '#000',\n        black: '#FFF',\n        gray: '#BFBFBF',\n\n        success: '#03BB85',\n        info: '#3B5998',\n        warning: '#FF6961',\n    },\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 54px 1fr;\n    grid-template-areas:\n        'header'\n        'main';\n    height: 100vh;\n\n    @media only screen and (min-width: 800px) {\n        grid-template-columns: 250px 1fr; /* Show the side nav for non-mobile screens */\n        grid-template-areas:\n            'sidebar header'\n            'sidebar main';\n    }\n\n    .active {\n        transform: translateX(0);\n    }\n\n    #menu-icon {\n        position: fixed;\n        display: flex;\n        top: 10px;\n        left: 10px;\n        align-items: center;\n        justify-content: center;\n        border-radius: 50%;\n        z-index: 1;\n        cursor: pointer;\n        padding: 5px;\n    }\n\n    #close-icon {\n        position: absolute;\n        visibility: visible;\n        top: 8px;\n        right: 12px;\n        cursor: pointer;\n        font-size: 20px;\n        color: #ddd;\n    }\n\n    /* display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 54px 1fr;\n    grid-template-areas:\n        'sidebar header'\n        'sidebar main';\n    height: 100vh; */\n\n    /* @media only screen and (max-width: 700px) {\n        grid-template-columns: 0px auto;\n\n        > :nth-child(1) {\n            > button {\n                display: block;\n            }\n        }\n\n        > :nth-child(2) {\n            width: 0%;\n            > button {\n                display: block;\n            }\n        }\n    } */\n`;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    .active {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n\n        > svg {\n            transform: rotate(90deg);\n        }\n    }\n\n    .openAnimation {\n        @keyframes animate1 {\n            0% {\n                height: 0%;\n            }\n            100% {\n                height: 100%;\n            }\n        }\n\n        &::after {\n            animation: animate1 0.3s linear;\n            height: 100%;\n        }\n    }\n\n    .closeAnimation {\n        @keyframes animate2 {\n            0% {\n                height: 100%;\n            }\n            100% {\n                height: 0%;\n            }\n        }\n\n        &::after {\n            animation: animate2 0.3s linear;\n            height: 0%;\n        }\n    }\n\n    .itemContent {\n        max-height: 0;\n        padding-left: 7px;\n        overflow: hidden;\n        background: ${darken(0.03, '#313130')};\n        transition: max-height 0.3s ease-in-out;\n    }\n`;\n\nexport const MenuItemLink = styled(Link)`\n    /*     color: ${props => props.theme.color.info};\n\n */\n    color: var(--primary-text-color);\n    text-decoration: none;\n    position: relative;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n\n    &:hover {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n\n    > div > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n\n    &::after {\n        width: 3px;\n        bottom: 0;\n        left: 0;\n        content: '';\n        position: absolute;\n        background-color: var(--base-secondary-color);\n    }\n`;\n\nexport const SubMenuItemLink = styled(Link)`\n    color: var(--primary-text-color);\n    text-decoration: none;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    &:hover {\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n`;\n","import React, { useEffect } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { MdKeyboardArrowRight } from 'react-icons/md';\n\nimport { MenuItemLink, Container, SubMenuItemLink } from './styles';\n\nexport interface IMenuItemProps {\n    link?: string;\n    grouppedItem?: boolean;\n    icon: React.FC<IconBaseProps>;\n    title: string;\n    externalLink?: boolean;\n    subItens?: Array<IMenuItemProps>;\n}\n\nconst MenuItem: React.FC<IMenuItemProps> = ({\n    link,\n    icon: Icon,\n    title,\n    subItens,\n    grouppedItem,\n    externalLink,\n}) => {\n    return (\n        <Container>\n            <MenuItemLink\n                to={externalLink ? { pathname: link } : link || ''}\n                className=\"item\"\n                target={externalLink ? '_blank' : ''}\n            >\n                <div>\n                    <Icon />\n                    {title}\n                </div>\n                {grouppedItem && <MdKeyboardArrowRight />}\n            </MenuItemLink>\n            <div className=\"itemContent\">\n                {subItens?.length !== 0 ? (\n                    subItens?.map(subItem => (\n                        <SubMenuItemLink\n                            className=\"subItem\"\n                            key={subItem.title}\n                            to={\n                                subItem.externalLink\n                                    ? { pathname: subItem.link }\n                                    : subItem.link || ''\n                            }\n                            target={subItem.externalLink ? '_blank' : ''}\n                        >\n                            <subItem.icon />\n                            {subItem.title}\n                        </SubMenuItemLink>\n                    ))\n                ) : (\n                    <></>\n                )}\n            </div>\n        </Container>\n    );\n};\n\nexport default MenuItem;\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    grid-area: sidebar;\n    overflow-y: hidden;\n    justify-content: space-between; */\n\n    grid-area: sidebar;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-between;\n    width: 250px;\n    position: fixed;\n    overflow-y: hidden;\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n    z-index: 2;\n    transform: translateX(-252px);\n    transition: all 0.6s ease-in-out;\n\n    /*     background-color: ${props => props.theme.color.secondary};\n */\n    /*     border-right: 1px solid ${props => props.theme.color.gray};\n */\n    background: var(--base-primary-color);\n    @media only screen and (min-width: 800px) {\n        position: relative;\n        transform: translateX(0);\n\n        #close-icon {\n            visibility: hidden;\n        }\n    }\n\n    > button {\n        position: absolute;\n        left: 17px;\n        top: 9px;\n        display: none;\n        background: none;\n        width: 20px;\n\n        svg {\n            color: #ffff;\n        }\n    }\n`;\n\nexport const Header = styled.header`\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    input {\n        width: 100%;\n    }\n`;\n\nexport const Footer = styled.a`\n    color: var(--primary-text-color);\n    text-decoration: none;\n    border-top: 3px solid var(--base-secondary-color);\n    padding: 15px;\n    background: ${darken(0.03, '#313130')};\n    display: flex;\n    align-items: center;\n    z-index: 1;\n    justify-content: flex-start;\n\n    > svg {\n        width: 20px;\n        height: 20px;\n        margin-right: 10px;\n    }\n\n    &:hover {\n        background-color: ${darken(0.03, '#313130')};\n        color: var(--base-secondary-color);\n    }\n`;\n\nexport const LogImg = styled.img`\n    width: 180px;\n    height: 120px;\n    margin-right: 10px;\n`;\nexport const MenuContainer = styled.nav`\n    height: 200px;\n    /*     background: blue;\n */\n    /*  display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n\n    .highlight {\n        background-color: ${darken(0.03, '#313130')};\n        color: var(--base-secondary-color);\n\n        &::after {\n            content: '';\n            width: 4px;\n            height: 100%;\n            position: absolute;\n            left: 0;\n            background-color: var(--base-secondary-color);\n        }\n    } */\n`;\n","export default __webpack_public_path__ + \"static/media/logo.dcafddbf.png\";","/* eslint-disable no-alert */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/named */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {\n    MdDashboard,\n    MdArrowDownward,\n    MdArrowUpward,\n    MdExitToApp,\n    MdEventNote,\n    MdWork,\n    MdBorderColor,\n    MdAttachMoney,\n    MdLiveHelp,\n    MdStore,\n    MdGroup,\n    MdPerson,\n    MdClear,\n    MdInsertDriveFile,\n    MdLocalGroceryStore,\n    MdChat,\n} from 'react-icons/md';\nimport { BsQuestionCircle } from 'react-icons/bs';\nimport { IoMdCalculator, IoMdPricetags } from 'react-icons/io';\nimport {\n    RiTruckFill,\n    RiHandSanitizerFill,\n    RiInboxArchiveLine,\n    RiInboxUnarchiveLine,\n} from 'react-icons/ri';\nimport { FiYoutube } from 'react-icons/fi';\nimport { AiOutlineCodeSandbox, AiOutlineYoutube } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { FaCashRegister, FaMoneyCheckAlt } from 'react-icons/fa';\nimport MenuItemLink, { IMenuItemProps } from './MenuItem';\n\nimport { Container, Header, MenuContainer, LogImg, Footer } from './styles';\nimport Logo from '../../assets/images/logo.png';\n\nconst Aside: React.FC = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const MenuItens = [\n        {\n            title: 'Agenda',\n            icon: MdEventNote,\n            link: '/schedule',\n            subItens: [],\n        },\n        {\n            title: 'Dashboard',\n            icon: MdDashboard,\n            link: '/dashboard',\n            subItens: [\n                { title: 'Vendas', icon: MdPerson, link: '/' },\n                { title: 'Previsões', icon: MdPerson, link: '/' },\n                { title: 'Pendências', icon: MdPerson, link: '/' },\n                { title: 'Despesas', icon: MdPerson, link: '/' },\n                { title: 'Lucro', icon: MdPerson, link: '/' },\n                { title: 'Comissões', icon: MdPerson, link: '/' },\n                { title: 'Rateio', icon: MdPerson, link: '/' },\n                { title: 'Vales', icon: MdPerson, link: '/' },\n                { title: 'Débitos', icon: MdPerson, link: '/' },\n                { title: 'Compras', icon: MdPerson, link: '/' },\n                { title: 'Fixo', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Artistas', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Clientes', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Produtos', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Serviços', icon: MdPerson, link: '/' },\n            ],\n        },\n        {\n            title: 'Cadastros',\n            icon: MdBorderColor,\n            link: '/off',\n            subItens: [\n                { title: 'Artistas', icon: MdPerson, link: '/artists' },\n                {\n                    title: 'Clientes',\n                    icon: MdGroup,\n                    link: '/clients',\n                    subItens: [\n                        {\n                            title: 'teste2',\n                            icon: MdEventNote,\n                            link: '#',\n                            subItens: [\n                                {\n                                    title: 'teste',\n                                    icon: RiTruckFill,\n                                    link: '#',\n                                },\n                            ],\n                        },\n                        {\n                            title: 'teste',\n                            icon: MdEventNote,\n                            link: '#',\n                        },\n                    ],\n                },\n                {\n                    title: 'Fornecedores',\n                    icon: RiTruckFill,\n                    link: '/providers',\n                },\n                {\n                    title: 'Produtos',\n                    icon: RiHandSanitizerFill,\n                    link: '/products',\n                },\n                { title: 'Serviços', icon: MdWork, link: '/services' },\n            ],\n        },\n        {\n            title: 'Financeiro',\n            icon: MdAttachMoney,\n            link: '/off',\n            subItens: [\n                {\n                    title: 'Entradas, recebimentos e vouchers',\n                    icon: MdArrowUpward,\n                    link: '/financial/inputs',\n                },\n                {\n                    title: 'Saídas, retiradas e vales',\n                    icon: MdArrowDownward,\n                    link: '/financial/outputs',\n                },\n                {\n                    title: 'Comandas',\n                    icon: MdInsertDriveFile,\n                    link: '/financial/comandas',\n                },\n                {\n                    title: 'Caixa',\n                    icon: FaCashRegister,\n                    link: '/financial/cash',\n                },\n                {\n                    title: 'Contas a pagar',\n                    icon: FaMoneyCheckAlt,\n                    link: '/financial/accounts_payable',\n                },\n                {\n                    title: 'Comissões',\n                    icon: IoMdCalculator,\n                    link: '/financial/commissions',\n                },\n            ],\n        },\n        {\n            title: 'Estoque',\n            icon: AiOutlineCodeSandbox,\n            link: '/off',\n            subItens: [\n                {\n                    title: 'Entrada',\n                    icon: RiInboxArchiveLine,\n                    link: '/stock/management/input',\n                },\n                {\n                    title: 'Saída',\n                    icon: RiInboxUnarchiveLine,\n                    link: '/stock/management/output',\n                },\n                {\n                    title: 'Sugestão de promoção',\n                    icon: IoMdPricetags,\n                    link: '/stock/promotions',\n                },\n                {\n                    title: 'Sugestão de compras',\n                    icon: MdLocalGroceryStore,\n                    link: '/stock/purchases',\n                },\n            ],\n        },\n        {\n            title: 'Estabelecimento',\n            icon: MdStore,\n            link: '/establishment',\n            subItens: [],\n        },\n        {\n            title: 'Ajuda',\n            icon: MdLiveHelp,\n            link: '/ajuda',\n            subItens: [\n                {\n                    title: 'Chat suporte',\n                    icon: MdChat,\n                    link: '/',\n                },\n                {\n                    title: 'Perguntas Frequentes',\n                    icon: BsQuestionCircle,\n                    link: '/help/questions',\n                },\n                {\n                    title: 'Canal Youtube',\n                    icon: FiYoutube,\n                    link:\n                        'https://www.youtube.com/channel/UCxX8CSPae6OZIJf8uDc7dMg',\n                    externalLink: true,\n                },\n            ],\n        },\n        /*  { title: 'Entradas', icon: MdArrowUpward, link: '/list/entry-balance' },\n        // eslint-disable-next-line prettier/prettier\n        { title: 'Saídas', icon: MdArrowDownward, link:'/list/exit-balance' }, */\n        // eslint-disable-next-line prettier/prettier\n    ];\n\n    function searchItem(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value.toLocaleUpperCase());\n    }\n\n    function searchSubItens(currentItem: IMenuItemProps) {\n        currentItem.subItens?.some(\n            subItem =>\n                subItem.title.toLocaleUpperCase().startsWith(searchTerm) ||\n                subItem.subItens?.some(sub =>\n                    sub.title.toLocaleUpperCase().startsWith(searchTerm),\n                ),\n        );\n    }\n\n    useEffect(() => {\n        const menuItemList = Array.from(\n            document.getElementsByClassName(\n                'item',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const subMenuItemList = Array.from(\n            document.getElementsByClassName(\n                'subItem',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        subMenuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n\n        menuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                menuItemList.forEach(ele => {\n                    const panel = ele.nextElementSibling as Element;\n\n                    if (ele !== item && ele.classList.contains('active')) {\n                        panel.removeAttribute('style');\n                        ele.classList.remove('active');\n                        ele.classList.remove('openAnimation');\n                        ele.classList.add('closeAnimation');\n                    }\n                });\n\n                const panel = item.nextElementSibling as Element;\n\n                if (item.classList.contains('active')) {\n                    panel.removeAttribute('style');\n                    item.classList.remove('active');\n                    item.classList.remove('openAnimation');\n                    item.classList.add('closeAnimation');\n                } else {\n                    panel.setAttribute('style', 'max-height:500px');\n                    item.classList.add('active');\n                    item.classList.remove('closeAnimation');\n                    item.classList.add('openAnimation');\n                }\n\n                // Close sidemenu on click\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n    }, []);\n\n    return (\n        <Container id=\"sideMenu\">\n            <div id=\"close-icon\">\n                <MdClear size={22} />\n            </div>\n            <div>\n                <Header>\n                    <LogImg src={Logo} alt=\"Logo\" />\n                    {/*                     <input onChange={searchItem} />\n                     */}\n                </Header>\n                <PerfectScrollbar>\n                    {/*  <MenuContainer>\n                        {MenuItens.map(item => (\n                            <MenuItemLink\n                                key={item.title}\n                                title={item.title}\n                                icon={item.icon}\n                                link={item.link}\n                                grouppedItem\n                                subItens={item.subItens}\n                            />\n                    ))}\n                    </MenuContainer> */}\n                    <MenuContainer id=\"menuContainer\">\n                        {MenuItens.map(item => (\n                            /*  item.title\n                                .toLocaleUpperCase()\n                                .startsWith(searchTerm) ||\n                            (item.subItens &&\n                                item.subItens.some(subItem =>\n                                    subItem.title\n                                        .toLocaleUpperCase()\n                                        .startsWith(searchTerm),\n                                )) ? ( */\n                            <MenuItemLink\n                                key={item.title}\n                                title={item.title}\n                                icon={item.icon}\n                                link={item.link}\n                                grouppedItem\n                                subItens={item.subItens}\n                            />\n                            /* ) : (\n                                []\n                            ), */\n                        ))}\n                    </MenuContainer>\n                </PerfectScrollbar>\n            </div>\n            <Footer>\n                <MdExitToApp />\n                Sair\n            </Footer>\n        </Container>\n    );\n};\n\nexport default Aside;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    /*     background-color: ${props => props.theme.color.primary};\n */\n    color: ${props => props.theme.color.white};\n    grid-area: main;\n    padding: 30px;\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.color.secondary};\n        border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background-color: ${props => props.theme.color.tertiary};\n    }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst Content: React.FC = ({ children }) => {\n    return <Container>{children}</Container>;\n};\n\nexport default Content;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    /*     background-color: ${props => props.theme.color.secondary};\n */\n    background-color: var(--base-quaternary-color);\n    border-bottom: 1px solid var(--primary-border-color);\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 16px;\n    /*     border-bottom: 1px solid ${props => props.theme.color.gray};\n */\n\n    > button {\n        display: block;\n        background: none;\n        width: 20px;\n        svg {\n            color: var(--primary-text-color);\n        }\n    }\n\n    @media only screen and (min-width: 46.875em) {\n        > button {\n            display: none;\n        }\n    }\n`;\n\nexport const Profile = styled.div`\n    > img {\n        border-radius: 50px;\n        width: 30px;\n        height: 30px;\n        margin-left: 10px;\n    }\n\n    height: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-left: 1px solid var(--primary-border-color);\n    /*     color: ${props => props.theme.color.white};\n */\n`;\nexport const Welcome = styled.h3`\n    font-size: 16px;\n    margin-right: 5px;\n    height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    margin-right: -25px;\n    z-index: 1;\n\n    .dropbtn {\n        border: none;\n        background: none;\n        font-weight: bold;\n        color: var(--primary-text-color);\n        box-sizing: border-box;\n        border-radius: 0px;\n\n        svg {\n            margin-left: 5px;\n        }\n\n        &:hover {\n            color: var(--base-tertiary-color);\n        }\n    }\n\n    .dropdown-content {\n        width: 100%;\n        display: none;\n        position: absolute;\n        background-color: #fff;\n        min-width: 160px;\n        box-shadow: rgba(0, 0, 0, 0.08) 0px 4px 16px 0px,\n            rgba(0, 0, 0, 0.06) 0px 2px 4px 0px;\n    }\n\n    .dropdown-content a {\n        padding: 14px;\n        position: relative;\n        color: var(--base-primary-color);\n        text-decoration: none;\n        display: block;\n    }\n\n    .dropdown-content a:hover {\n        color: var(--base-tertiary-color);\n        background: #f8f8f8;\n    }\n\n    .dropdown:hover .dropdown-content {\n        display: block;\n    }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Container } from './styles';\n\ninterface IDropdownProps {\n    options: {\n        title: string;\n        link: string;\n        externalLink: boolean;\n        clickEvent?: () => void;\n    }[];\n    title: string;\n}\n\nconst Dropdown: React.FC<IDropdownProps> = ({ options, title }) => {\n    return (\n        <Container>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" type=\"button\">\n                    {title}\n                    <MdKeyboardArrowDown size={16} />\n                </button>\n                <div className=\"dropdown-content\">\n                    {options.map(option =>\n                        option.externalLink ? (\n                            <a key={option.title} href={option.link}>\n                                {option.title}\n                            </a>\n                        ) : (\n                            <Link\n                                key={option.title}\n                                to={option.link}\n                                onClick={option.clickEvent}\n                            >\n                                {option.title}\n                            </Link>\n                        ),\n                    )}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dropdown;\n\n/*\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n            externalLink: PropTypes.bool.isRequired,\n            clickEvent: PropTypes.func,\n        }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}; */\n","export default __webpack_public_path__ + \"static/media/profile.ffb5e816.jpg\";","import React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport { MdMenu } from 'react-icons/md';\nimport Toggle from '../Toggle';\nimport { Container, Profile, Welcome } from './styles';\nimport Dropdown from '../Dropdown';\nimport ProfilePhoto from '../../assets/images/profile.jpg';\n\nconst MainHeader: React.FC = () => {\n    const profileMenu = [\n        {\n            title: 'Perfil',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste1',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste2',\n            link: '',\n            externalLink: false,\n        },\n    ];\n\n    return (\n        <Container>\n            {/*             <Toggle />\n             */}\n            {/*  <button className=\"toggleMenu\" type=\"button\">\n                <MdMenu size={22} />\n            </button> */}\n            <div />\n            <Profile>\n                {/*                 <BsPeopleCircle size={25} />\n                 */}\n                <Dropdown title=\"Anderson Tartari\" options={profileMenu} />\n                <img src={ProfilePhoto} alt=\"profile\" />\n            </Profile>\n            {/* <Profile>\n                <Welcome>Olá, Anderson.</Welcome>\n            </Profile> */}\n        </Container>\n    );\n};\n\nexport default MainHeader;\n","import React, { ClassType, useEffect } from 'react';\nimport { MdMenu } from 'react-icons/md';\nimport { Container } from './styles';\n\nimport Aside from '../Aside';\nimport Content from '../Content';\nimport MainHeader from '../MainHeader';\n\nconst Layout: React.FC = ({ children }) => {\n    useEffect(() => {\n        const menuIconEl = document.getElementById('menu-icon') as HTMLElement;\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        const sidenavCloseEl = document.getElementById(\n            'close-icon',\n        ) as HTMLElement;\n\n        function toggleClassName(el: Element, className: string) {\n            if (el.classList.contains(className)) {\n                el.classList.remove(className);\n            } else {\n                el.classList.add(className);\n            }\n        }\n\n        menuIconEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n\n        sidenavCloseEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n    }, []);\n\n    return (\n        <Container>\n            <div id=\"menu-icon\">\n                <MdMenu size={22} />\n            </div>\n            <MainHeader />\n            <Aside />\n            <Content>{children}</Content>\n        </Container>\n    );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Container = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n        margin-bottom: 30px;\n    }\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n`;\n\nexport const PieChart = styled.div`\n    padding: 10px;\n    height: 320px;\n    width: 300px;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    > div {\n        margin-bottom: 10px;\n        > span {\n            font-weight: bold;\n            color: var(--secondary-text-color);\n            font-size: 16px;\n        }\n    }\n`;\n\nexport const BarChart = styled.div`\n    width: 550px;\n    height: 320px;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    > div {\n        margin-bottom: 10px;\n        > span {\n            font-weight: bold;\n            color: var(--secondary-text-color);\n            font-size: 16px;\n        }\n    }\n`;\n\nexport const ChartsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    color: var(--secondary-text-color);\n    margin-top: 50px;\n    justify-content: center;\n    align-items: center;\n\n    @media only screen and (max-width: 1100px) {\n        flex-direction: column;\n\n        > :first-child {\n            width: 105%;\n            height: 100%;\n        }\n    }\n`;\n\nexport const CardsContainer = styled.div`\n    margin-top: 10px;\n    display: flex;\n\n    /*  flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap; */\n    margin-bottom: 20px;\n\n    @media only screen and (max-width: 1100px) {\n        flex-direction: column;\n        display: flex;\n        align-items: center;\n    }\n`;\n\nexport const CardsContainer2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 320px;\n    margin-top: 20px;\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    }\n`;\n\nexport const Card = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 220px;\n    height: 90px;\n    margin: 10px;\n\n    > p {\n        color: #ffff;\n        height: 30%;\n        text-align: center;\n        padding: 5px;\n        z-index: 1;\n        margin-bottom: 0px;\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n        width: 100%;\n        background-color: var(--base-tertiary-color);\n    }\n\n    > div {\n        color: #ffff;\n        position: relative;\n        font-size: 20px;\n        height: 70%;\n        width: 100%;\n        display: flex;\n        background-color: ${lighten(0.05, '#FD5C0E')};\n        align-items: center;\n        font-weight: bold;\n        justify-content: center;\n        border-bottom-left-radius: 5px;\n        border-bottom-right-radius: 5px;\n\n        > p {\n            z-index: 1;\n            margin: 0px;\n        }\n\n        > svg {\n            position: absolute;\n            object-fit: cover;\n            margin-top: 15px;\n            height: 150px;\n            left: 152px;\n            width: 100px;\n            opacity: 0.4;\n        }\n    }\n`;\n","import React from 'react';\nimport { Chart, Pie, Bar, Doughnut } from 'react-chartjs-2';\nimport { MdAttachMoney, MdTimeline } from 'react-icons/md';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport {\n    Container,\n    PieChart,\n    BarChart,\n    ChartsContainer,\n    CardsContainer,\n    CardsContainer2,\n    Card,\n} from './styles';\n\nconst Dashboard: React.FC = () => {\n    const pieData = {\n        labels: ['Despesas fixas', 'Despesas eventuais'],\n        datasets: [\n            {\n                label: '# of Votes',\n                data: [800, 1250],\n                backgroundColor: ['#fd5c0e', '#fd7d3e'],\n                borderColor: ['#fff', '#fff'],\n            },\n        ],\n    };\n\n    const barData = {\n        labels: [\n            'Jan',\n            'Fev',\n            'Mar',\n            'Abr',\n            'Mai',\n            'Jun',\n            'Jul',\n            'Ago',\n            'Set',\n            'Out',\n            'Nov',\n            'Dez',\n        ],\n        /*  datasets: [\n            {\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n                barOptions: {},\n            },\n        ], */\n        datasets: [\n            {\n                label: 'Receita',\n                data: [800, 1250, 1300, 1200],\n                backgroundColor: '#fd5c0e',\n            },\n            {\n                label: 'Despesa',\n                data: [350, 780, 850, 900],\n                backgroundColor: '#fd7d3e',\n            },\n        ],\n    };\n\n    const barOptions = {\n        scales: {\n            y: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n                ticks: {\n                    callback(value: string) {\n                        return `R$ ${value}`;\n                    },\n                    beginAtZero: true,\n                },\n            },\n            x: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n            },\n        },\n        responsive: true,\n    };\n\n    const pieOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            /*  title: {\n                display: true,\n                text: 'Chart.js Horizontal Bar Chart',\n            }, */\n        },\n    };\n\n    return (\n        <Container>\n            <h1>Dashboard</h1>\n            <span>Indicadores financeiros</span>\n            <CardsContainer>\n                <Card>\n                    <p>Total de receita no mês</p>\n                    <div>\n                        <p>R$ 1650,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Total de comissões no mês</p>\n                    <div>\n                        <p>R$ 350,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Total de despesas no mês</p>\n                    <div>\n                        <p>R$ 550,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Resultados do mês</p>\n                    <div>\n                        <p>R$ 650,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Receita anual</p>\n                    <div>\n                        <p>R$ 4550,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n            </CardsContainer>\n            <ChartsContainer>\n                <BarChart>\n                    <div className=\"header\">\n                        <span className=\"title\">\n                            Análise anual (receita x despesa)\n                        </span>\n                    </div>\n                    <Bar type=\"\" data={barData} options={barOptions} />\n                </BarChart>\n                <PieChart>\n                    <div className=\"header\">\n                        <span className=\"title\">Despesas do mês</span>\n                    </div>\n                    <Doughnut\n                        height={100}\n                        width={100}\n                        type=\"\"\n                        data={pieData}\n                        options={pieOptions}\n                    />\n                </PieChart>\n                <CardsContainer2>\n                    <span>Previsão de ganhos</span>\n                    <Card>\n                        <p>Hoje</p>\n                        <div>\n                            <p>R$ 250,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                    <Card>\n                        <p>Semana</p>\n                        <div>\n                            <p>R$ 1250,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                    <Card>\n                        <p>Mês</p>\n                        <div>\n                            <p>R$ 5000,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                </CardsContainer2>\n            </ChartsContainer>\n        </Container>\n    );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    height: 40%;\n\n    svg {\n        padding: 10px;\n        width: 100px;\n        height: 100px;\n    }\n\n    span {\n        margin-top: 4px;\n        font-size: 10px;\n    }\n\n    strong {\n        font-size: 12px;\n    }\n`;\n","import React from 'react';\nimport { FaFolderOpen } from 'react-icons/fa';\n\nimport { Container } from './styles';\n\ninterface IEmptyListProps {\n    title: string;\n    subtitle: string;\n}\n\nconst EmptyList: React.FC<IEmptyListProps> = ({ title, subtitle }) => {\n    return (\n        <Container>\n            <FaFolderOpen />\n            <strong>{title}</strong>\n            <span>{subtitle}</span>\n        </Container>\n    );\n};\n\nexport default EmptyList;\n","import styled from 'styled-components';\n\ninterface ISectionProps {\n    title: string;\n}\n\nexport const Container = styled.div<ISectionProps>`\n    position: relative;\n    border-top: 3px solid var(--primary-border-color);\n    padding: 25px 0px;\n    background-color: #ffff;\n    display: flex;\n    flex-direction: column;\n    margin: 6px;\n    flex: 1;\n\n    &:before {\n        content: '${props => props.title}';\n        position: absolute;\n        top: -14px;\n        padding: 0px 10px;\n        background: #fff;\n        font-size: 16px;\n        font-weight: bold;\n        color: var(--secondary-text-color);\n    }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\ninterface Props {\n    title: string;\n    children?: React.ReactNode;\n    bordered?: boolean;\n}\n\nconst FieldSet: React.FC<Props> = ({ children, title }) => {\n    return <Container title={title}>{children}</Container>;\n};\n\nexport default FieldSet;\n","import styled from 'styled-components';\n\ninterface IInputProps {\n    textTransform: string;\n}\n\nexport const Container = styled.div<IInputProps>`\n    display: flex;\n    margin: 5px;\n    flex-direction: column;\n\n    &:focus-within {\n        > div {\n            label {\n                color: var(--base-tertiary-color);\n            }\n\n            svg {\n                color: var(--base-tertiary-color);\n            }\n        }\n\n        > input {\n            border-color: var(--base-tertiary-color);\n        }\n    }\n\n    > div {\n        display: flex;\n        align-items: center;\n\n        > label {\n            margin-left: 15px;\n            margin-bottom: 5px;\n            font-size: 13px;\n            font-weight: bold;\n            color: var(--primary-text-color);\n        }\n\n        > svg {\n            margin-left: 5px;\n            width: 17px;\n            height: 17px;\n        }\n\n        > p {\n            background-color: red;\n            font-size: 13px;\n        }\n    }\n\n    > input {\n        text-transform: ${props => props.textTransform};\n        border-radius: 50px;\n        border: 1px solid var(--primary-border-color);\n        height: 35px;\n        padding: 15px;\n        color: var(--primary-text-color);\n\n        &[disabled] {\n            background-color: var(--base-quaternary-color);\n            cursor: not-allowed;\n        }\n    }\n\n    > span {\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        color: #db3b21;\n\n        > svg {\n            width: 16px;\n            height: 16px;\n        }\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label?: string;\n    customMask?: (value: string) => string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    customMask,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [value, setValue] = useState('');\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <input\n                id={fieldName}\n                ref={inputRef}\n                /*   value={customMask ? customMask(value) : undefined}\n                onChange={event =>\n                    customMask ? setValue(event.target.value) : undefined\n                } */\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","import styled, { css, keyframes } from 'styled-components';\n\ninterface IInputProps {\n    textTransform: string;\n    loading?: boolean;\n}\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const Container = styled.div.attrs<IInputProps>(({ loading }) => ({\n    disabled: loading,\n}))<IInputProps>`\n    position: relative;\n    display: flex;\n    margin: 5px;\n    flex-direction: column;\n\n    &:focus-within {\n        > div {\n            label {\n                color: var(--base-tertiary-color);\n            }\n\n            svg {\n                color: var(--base-tertiary-color);\n            }\n        }\n\n        > :last-child > input {\n            border-color: var(--base-tertiary-color);\n        }\n    }\n\n    > div {\n        display: flex;\n        align-items: center;\n\n        > label {\n            margin-left: 15px;\n            margin-bottom: 5px;\n            font-size: 13px;\n            font-weight: bold;\n            color: var(--primary-text-color);\n        }\n\n        > svg {\n            margin-left: 5px;\n            width: 17px;\n            height: 17px;\n        }\n\n        > input {\n            width: 100%;\n            text-transform: ${props => props.textTransform};\n            border-radius: 50px;\n            border: 1px solid var(--primary-border-color);\n            height: 35px;\n            padding: 15px;\n            color: var(--primary-text-color);\n\n            &[disabled] {\n                background-color: var(--base-quaternary-color);\n                cursor: not-allowed;\n            }\n        }\n\n        ${props =>\n            props.loading &&\n            css`\n                > svg {\n                    position: absolute;\n                    right: 20px;\n                    width: 12px;\n                    height: 12px;\n                    color: var(--base-tertiary-color);\n                    animation: ${rotate} 1.5s linear infinite;\n                }\n            `}\n    }\n\n    > span {\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        color: #db3b21;\n\n        > svg {\n            width: 16px;\n            height: 16px;\n        }\n    }\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport ReactInputMask, { Props as ReactInputProps } from 'react-input-mask';\nimport { FaSpinner } from 'react-icons/fa';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    loading?: boolean;\n    showLoadingIcon?: boolean;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label?: string;\n    labelIcon?: React.FC<IconBaseProps>;\n    onChangeCallback?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\ntype InputProps = ReactInputProps & Props;\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    loading,\n    textTransform,\n    showLoadingIcon,\n    labelIcon: LabelIcon,\n    onChangeCallback,\n    ...rest\n}) => {\n    const inputRef = useRef(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [value, setValue] = useState<string>('');\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            getValue() {\n                return value;\n            },\n            clearValue() {\n                setValue('');\n            },\n        });\n    }, [fieldName, registerField, value]);\n    return (\n        <Container\n            textTransform={textTransform || 'capitalize'}\n            loading={loading}\n        >\n            {label && (\n                <div>\n                    <label\n                        htmlFor={fieldName}\n                        style={{ color: error ? '#db3b21' : '' }}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <div>\n                <ReactInputMask\n                    ref={inputRef}\n                    defaultValue={defaultValue}\n                    value={value}\n                    style={{ borderColor: error ? '#db3b21' : '' }}\n                    disabled={loading}\n                    onChange={event => {\n                        if (onChangeCallback) {\n                            onChangeCallback(event);\n                        }\n\n                        setValue(event.target.value);\n                    }}\n                    {...rest}\n                />\n                {showLoadingIcon && loading && <FaSpinner id=\"loadingIcon\" />}\n            </div>\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 5px;\n\n    &:focus-within {\n        > label {\n            color: var(--base-tertiary-color);\n        }\n    }\n\n    > label {\n        margin-left: 15px;\n        margin-bottom: 5px;\n        font-size: 13px;\n        font-weight: bold;\n        color: var(--primary-text-color);\n    }\n`;\n","/* eslint-disable no-shadow */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactSelect, {\n    OptionTypeBase,\n    Props as SelectProps,\n} from 'react-select';\nimport { useField } from '@unform/core';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props extends SelectProps<OptionTypeBase> {\n    name: string;\n    label?: string;\n}\n\nconst Select: React.FC<Props> = ({ name, label, placeholder, ...rest }) => {\n    const selectRef = useRef(null);\n    const { fieldName, defaultValue, registerField, error } = useField(name);\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: selectRef.current,\n            setValue: (ref, value) => {\n                /*                 ref.state.value = value;\n                 */ setValue(value);\n            },\n            clearValue: ref => {\n                /*                 ref.state.value = '';\n                 */ setValue('');\n            },\n            getValue: ref => {\n                if (rest.isMulti) {\n                    if (!ref.state.value) {\n                        return [];\n                    }\n                    return ref.state.value.map(\n                        (option: OptionTypeBase) => option.value,\n                    );\n                }\n                if (!ref.state.value) {\n                    return '';\n                }\n                return ref.state.value;\n            },\n        });\n    }, [fieldName, registerField, rest.isMulti]);\n\n    return (\n        <Container>\n            {label && (\n                <label\n                    style={{ color: error ? '#db3b21' : '' }}\n                    htmlFor={fieldName}\n                >\n                    {label}\n                </label>\n            )}\n\n            <ReactSelect\n                escapeClearsValue\n                id={fieldName}\n                className={error ? 'react-select__value-container--error' : ''}\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                value={value}\n                placeholder={placeholder}\n                ref={selectRef}\n                onChange={value => setValue(value)}\n                classNamePrefix=\"react-select\"\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 5px;\n\n    &:focus-within {\n        color: var(--base-tertiary-color);\n    }\n\n    > label {\n        margin-left: 15px;\n        margin-bottom: 5px;\n        font-size: 13px;\n        font-weight: bold;\n        color: var(--primary-text-color);\n    }\n`;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDatePicker, {\n    ReactDatePickerProps,\n    registerLocale,\n} from 'react-datepicker';\nimport MaskedTextInput from 'react-text-mask';\nimport ReactInputMask, { Props as ReactInputProps } from 'react-input-mask';\nimport { useField } from '@unform/core';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport pt from 'date-fns/locale/pt-BR';\nimport { Container } from './styles';\n\nregisterLocale('pt', pt);\ninterface Props extends Omit<ReactDatePickerProps, 'onChange'> {\n    name: string;\n    label?: string;\n    initialDate?: string;\n}\nconst DatePicker: React.FC<Props> = ({ name, label, initialDate, ...rest }) => {\n    const datepickerRef = useRef(null);\n    const {\n        fieldName,\n        registerField,\n        defaultValue = initialDate\n            ? new Date(\n                  initialDate.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, '$2/$1/$3'),\n              )\n            : '',\n        error,\n    } = useField(name);\n    const [date, setDate] = useState(defaultValue);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: datepickerRef.current,\n            path: 'props.selected',\n            clearValue: (ref: any) => {\n                ref.clear();\n            },\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <ReactDatePicker\n                id={fieldName}\n                ref={datepickerRef}\n                selected={date}\n                onChange={setDate}\n                locale=\"pt\"\n                dateFormat=\"dd/MM/yyyy\"\n                /*  customInput={<ReactInputMask mask=\"99/99/9999\" />} */\n                {...rest}\n            />\n        </Container>\n    );\n};\nexport default DatePicker;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 5px;\n    padding: 10px;\n\n    label {\n        font-weight: bold;\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        justify-content: center;\n        align-items: center;\n        color: var(--primary-text-color);\n\n        &:hover {\n            opacity: 0.7;\n        }\n\n        img {\n            object-fit: cover;\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            border: 1px solid var(--primary-border-color);\n            background: #eee;\n            margin-bottom: 10px;\n        }\n\n        input {\n            display: none;\n        }\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/imagePlaceholder.157f088b.png\";","/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue(ref: HTMLInputElement) {\n                ref.value = '';\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                <img\n                    src={selectedFile ? URL.createObjectURL(selectedFile) : defaultValue}\n                    alt=\"profile\"\n                />\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label || ''}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","function cpfMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1');\n}\n\nfunction cnpjMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1/$2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1');\n}\n\nfunction phoneMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(\\d{4})-(\\d)(\\d{4})/, '$1$2-$3')\n        .replace(/(-\\d{4})\\d+?$/, '$1');\n}\n\nfunction cepMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\n        .replace(/(-\\d{3})\\d+?$/, '$1');\n}\n\nfunction rgMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{1})\\d+?$/, '$1');\n}\n\nfunction brazilianCurrencyMask(value: number): string {\n    return value\n        .toFixed(2)\n        .replace('.', ',')\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n}\n\nfunction capitalizeString(value: string): string {\n    return value\n        .toLocaleLowerCase()\n        .replace(\n            new RegExp(/\\b([a-z]{2,})(?<!)/g),\n            word => word.charAt(0).toUpperCase() + word.slice(1),\n        );\n}\n\nfunction downcaseString(value: string): string {\n    return value.toLocaleLowerCase();\n}\n\nexport {\n    cpfMask,\n    cnpjMask,\n    phoneMask,\n    cepMask,\n    rgMask,\n    brazilianCurrencyMask,\n    capitalizeString,\n    downcaseString,\n};\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const FieldSet = styled.div`\n    border-bottom: 1px solid var(--primary-border-color);\n    font-weight: bold;\n    padding-bottom: 20px;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: var(--base-tertiary-color);\n`;\n\ninterface SectionButtonProps {\n    horizontalLine: boolean;\n}\n\nexport const SectionButton = styled.button.attrs<SectionButtonProps>(\n    ({ horizontalLine }) => ({\n        horizontalLine,\n    }),\n)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n\n    &:hover {\n        color: var(--base-tertiary-color);\n        background: none;\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\nexport const CreateClientForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n\n    @media only screen and (max-width: 1000px) {\n        #group1 {\n            flex-direction: column-reverse;\n\n            > div {\n                width: 100% !important;\n            }\n\n            > :first-child {\n                > :last-child {\n                    > div {\n                        flex-direction: column;\n                        > div {\n                            width: 100% !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        #group2,\n        #group3 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n    @media only screen and (max-width: 1200px) {\n        #group4,\n        #group5,\n        #group6 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n\n    #group1 {\n        display: flex;\n\n        > :first-child {\n            width: 80%;\n\n            > :last-child {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n\n                > div {\n                    display: flex;\n                    > div {\n                        width: 50%;\n                    }\n                }\n            }\n        }\n\n        > :last-child {\n            width: 20%;\n            border-radius: 5px;\n        }\n    }\n\n    #group2,\n    #group4,\n    #group5,\n    #group6 {\n        display: flex;\n        > div {\n            width: 25%;\n        }\n    }\n\n    #group3 {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-90w {\n        width: 90%;\n        max-width: 1300px;\n    }\n`;\n","import axios from 'axios';\nimport config from '../config.json';\n\nconst api = axios.create({\n    baseURL: `http://${config.API_SERVICE_HOST}:${config.API_SERVICE_PORT}`,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    responseType: 'json',\n});\n\napi.interceptors.response.use(\n    response => {\n        /* if (response.status !== 200) {\n            console.log(response);\n        } */\n        return response;\n    },\n    error => {\n        if (!error.response) {\n            throw new Error('O servidor não está respondendo');\n        }\n\n        return Promise.reject(error.response);\n    },\n);\n\nexport default api;\n","/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport {\n    FaWhatsapp,\n    FaInstagram,\n    FaFacebook,\n    FaTwitter,\n    FaPlus,\n} from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport FieldSet from '../../../components/FieldSet';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateClientProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\ninterface ICNPJ {\n    razao_social: string;\n    cep: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC<ICreateClientProps> = ({ saveClient }) => {\n    const [show, setShow] = useState(false);\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [cnpjLoading, setCnpjLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [currentUfAndCity, setCurrentUfAndCity] = useState({\n        uf: '',\n        city: '',\n    });\n    const [currentCity, setCurrentCity] = useState<string>();\n    const [citiesList, setCitiesList] = useState<Array<IComboBox>>();\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n        setShowAddressContainer(false);\n        setShowPreferencesContainer(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const ufsList = brasilStatesAndCities.estados.map(uf => ({\n        sigla: uf.sigla,\n        label: `${uf.sigla} - ${uf.nome}`,\n        value: uf.nome,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUfAndCity({\n                    uf: response.data.state,\n                    city: response.data.city,\n                });\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: ufsList.find(\n                            uf => uf.sigla === response.data.state,\n                        ),\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    function getCNPJInfo(cnpjNumber: string) {\n        setCnpjLoading(true);\n        apiClient\n            .get<ICNPJ>(`https://brasilapi.com.br/api/cnpj/v1/${cnpjNumber}`)\n            .then(response => {\n                formRef.current?.setFieldError('numeroCPFouCNPJ', '');\n                console.log(formRef.current?.getFieldValue('address.cep'));\n                console.log(response.data.cep);\n                formRef.current?.setData({\n                    nome: response.data.razao_social,\n                    address: {\n                        cep: 121223321,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CNPJ não encontrado!';\n                } else if (error.status === 400) {\n                    errorMessage = 'CNPJ inválido!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    nome: '',\n                });\n\n                formRef.current?.setFieldError('numeroCPFouCNPJ', errorMessage);\n            })\n            .finally(() => setCnpjLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        data.dataDeNascimento = convertToISO8601UTCDateFormat(\n            new Date(data.dataDeNascimento),\n        );\n\n        console.log(data);\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                nome: Yup.string().required('O nome é obrigatório!'),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                porcentagemDescontoServicos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                porcentagemDescontoProdutos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n            saveClient(data);\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Cliente</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <div id=\"group1\">\n                                <div>\n                                    <Input\n                                        name=\"nome\"\n                                        label=\"Nome Completo/Razão Social*\"\n                                    />\n                                    <div>\n                                        <div>\n                                            <DatePicker\n                                                label=\"Data de nascimento\"\n                                                name=\"dataDeNascimento\"\n                                            />\n                                            <Select\n                                                label=\"Sexo\"\n                                                name=\"sexo\"\n                                                classNamePrefix=\"react-select\"\n                                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                                options={affiliationOptions}\n                                                isSearchable={false}\n                                                blurInputOnSelect\n                                                openMenuOnFocus\n                                            />\n                                        </div>\n                                        <div>\n                                            <Input\n                                                textTransform=\"lowercase\"\n                                                name=\"email\"\n                                                label=\"E-mail*\"\n                                            />\n                                            <Input\n                                                name=\"numeroCPFouCNPJ\"\n                                                label=\"CPF/CNPJ*\"\n                                                value={\n                                                    tipoPessoa.length > 14\n                                                        ? cnpjMask(tipoPessoa)\n                                                        : cpfMask(tipoPessoa)\n                                                }\n                                                onChange={event => {\n                                                    setTipoPessoa(\n                                                        event.target.value,\n                                                    );\n                                                    if (\n                                                        RegExp(\n                                                            /\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}/g,\n                                                        ).test(\n                                                            event.target.value,\n                                                        )\n                                                    ) {\n                                                        console.log('entrou');\n                                                        getCNPJInfo(\n                                                            event.target.value.replace(\n                                                                '/',\n                                                                '',\n                                                            ),\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <MaskedInput\n                                                mask=\"99.999.999-9\"\n                                                name=\"RG\"\n                                                label=\"RG\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <AvatarInput\n                                        name=\"avatarImage\"\n                                        label=\"Foto do cliente\"\n                                    />\n                                </div>\n                            </div>\n                        </FieldSet>\n                        <FieldSet title=\"Redes Sociais\">\n                            <div id=\"group4\">\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"whatsapp\"\n                                    label=\"Whatsapp*\"\n                                    labelIcon={FaWhatsapp}\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"instagram\"\n                                    labelIcon={FaInstagram}\n                                    label=\"Instagram\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"twitter\"\n                                    labelIcon={FaTwitter}\n                                    label=\"Twitter\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"tiktok\"\n                                    labelIcon={IoLogoTiktok}\n                                    label=\"TikTok\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"facebook\"\n                                    labelIcon={FaFacebook}\n                                    label=\"Facebook\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={cepLoading}\n                                            label=\"CEP\"\n                                            disabled={cepLoading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={cepLoading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={cepLoading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            /*  defaultValue={{\n                                                label: 'Selecione um estado',\n                                                value: 0,\n                                            }} */\n                                            onChange={value => {\n                                                console.log(value);\n                                                /*   setCurrentUf(\n                                                    value?.label.substring(\n                                                        0,\n                                                        2,\n                                                    ),\n                                                ); */\n                                                /*                                                 setCurrentCity(null);\n                                                 */\n                                            }}\n                                            options={ufsList}\n                                            isSearchable\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            isSearchable\n                                            defaultValue={{\n                                                label: 'Selecione uma cidade',\n                                                value: 0,\n                                            }}\n                                            /* disabled={cities?.length === 0} */\n                                            noOptionsMessage={() =>\n                                                /* {\n                                                console.log(\n                                                    document.querySelector(\n                                                        'div.react-select__single-value.css-1uccc91-singleValue',\n                                                    ),\n                                                ); */\n\n                                                'Sem resultados'\n                                            }\n                                            classNamePrefix=\"react-select\"\n                                            options={brasilStatesAndCities.estados\n                                                .find(\n                                                    elem =>\n                                                        elem.sigla ===\n                                                        currentUfAndCity.uf,\n                                                )\n                                                ?.cidades.map(elem => ({\n                                                    value: elem,\n                                                    label: elem,\n                                                }))}\n                                            /*  onChange={value =>\n                                                setCurrentCity(value)\n                                            }\n                                            value={\n                                                currentCity ||\n                                                (citiesList && citiesList[0])\n                                            } */\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPreferencesContainer(\n                                    !showPreferencesContainer,\n                                )\n                            }\n                        >\n                            {showPreferencesContainer\n                                ? 'Ocultar Preferências'\n                                : 'Mostrar Preferências'}\n                            {showPreferencesContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPreferencesContainer && (\n                            <FieldSet title=\"Preferências\">\n                                <div id=\"group5\">\n                                    <Input\n                                        name=\"idArtista1\"\n                                        label=\"Artista de Preferência 1\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoProdutos\"\n                                        label=\"Desconto em Produtos (0% - 100%)\"\n                                    />\n                                    <Input\n                                        name=\"indocadoPor\"\n                                        label=\"Indicado por\"\n                                    />\n                                    <Input\n                                        name=\"coloracaoCabelo\"\n                                        label=\"Coloração Cabelo\"\n                                    />\n                                </div>\n\n                                <div id=\"group6\">\n                                    <Input\n                                        name=\"idArtista2\"\n                                        label=\"Artista de Preferência 2\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoServicos\"\n                                        label=\"Desconto em Serviços (0% - 100%)\"\n                                    />\n\n                                    <Input\n                                        name=\"tipoDePele\"\n                                        label=\"Tipo de Pele\"\n                                    />\n                                    <Input\n                                        name=\"tipoDeUnha\"\n                                        label=\"Tipo de Unha\"\n                                    />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import {\n    setHours,\n    setSeconds,\n    setMinutes,\n    setMilliseconds,\n    format,\n} from 'date-fns';\n\n// ISO 8601 zulu time zone (UTC)\nexport function convertToISO8601UTCDateFormat(date: Date): string {\n    const formattedDate = format(\n        setMilliseconds(setSeconds(setMinutes(setHours(date, 23), 59), 59), 0),\n        \"yyyy-MM-dd'T'HH:mm:ss'Z'\",\n    );\n\n    return formattedDate;\n}\n\nexport function getISO8601UTCDateFormatRegex(): RegExp {\n    return /^\\d{4}-((?!00)[0]\\d|1[0-2])-((?!00)[0-2]\\d|3[0-1])T([0-1]\\d|2[0-3]):[0-5]\\d:[0-5]\\dZ$/g;\n}\n\nexport function convertToBrasilianDateFormat(date: Date): string {\n    const formattedDate = format(new Date(date), 'dd/MM/yyyy');\n\n    return formattedDate;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ClientHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > :first-child {\n                width: 15%;\n                > button {\n                    width: 100%;\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :last-child {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport { convertToBrasilianDateFormat } from '../../../utils/dateUtils';\nimport AddClientModal, { IFormData } from '../CreateClient';\n\nimport { Container, ClientHeaderContainer } from './styles';\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [clientsList, setClientsList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchClient(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ClientHeaderContainer>\n                <h1>Clientes</h1>\n                <div>\n                    <AddClientModal\n                        saveClient={clientData => {\n                            setClientsList([...clientsList, clientData]);\n                        }}\n                    />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar cliente\" />\n                    </div>\n                </div>\n            </ClientHeaderContainer>\n            {clientsList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>Telefone</th>\n                            <th>Sexo</th>\n                            <th>Data de Nascimento</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {clientsList.map((client, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{client.nome}</td>\n                                <td>{client.whatsapp}</td>\n                                <td>{client.sexo}</td>\n                                <td>\n                                    {convertToBrasilianDateFormat(\n                                        new Date(client.dataDeNascimento),\n                                    )}\n                                </td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedClientList = clientsList.filter(\n                                                (_, clientIndex) =>\n                                                    clientIndex !== index,\n                                            );\n\n                                            setClientsList(updatedClientList);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados clientes cadastrados\"\n                    subtitle='Adicione um novo cliente clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    > button {\n        width: 20%;\n    }\n`;\nexport const AddSkillModal = styled(Modal)`\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst AddSkills: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Gerar relatório do cliente\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Relatório - Histórico do cliente</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <DatePicker label=\"Data inicial\" name=\"dataInicial\" />\n                    <DatePicker label=\"Data final\" name=\"dataFinal\" />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Gerar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddSkills;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\nimport { lighten } from 'polished';\n\nexport const Container = styled.div``;\n\nexport const ClientHistoryContainer = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n\n    > :nth-child(2) {\n        display: flex;\n        justify-content: center;\n    }\n\n    > :nth-child(4) {\n        margin-top: 50px;\n    }\n\n    > :first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        > label {\n            font-size: 18px;\n        }\n    }\n\n    > :last-child {\n        > div > table > tbody > tr {\n            &:hover {\n                cursor: pointer;\n                background: #f8f8f8;\n            }\n        }\n    }\n\n    > p {\n        font-size: 16px;\n        color: var(--primary-text-color);\n        font-weight: bold;\n    }\n\n    > div {\n        > div > table {\n            color: var(--primary-text-color);\n        }\n    }\n`;\n\nexport const CardsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-bottom: 20px;\n`;\n\nexport const Card = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 180px;\n    height: 90px;\n    margin: 10px;\n\n    > p {\n        color: #ffff;\n        height: 30%;\n        text-align: center;\n        padding: 5px;\n        margin-bottom: 0px;\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n        width: 100%;\n        background-color: var(--base-tertiary-color);\n    }\n\n    > div {\n        color: #ffff;\n        font-size: 20px;\n        height: 70%;\n        width: 100%;\n        display: flex;\n        background-color: ${lighten(0.05, '#FD5C0E')};\n        align-items: center;\n        font-weight: bold;\n        justify-content: center;\n        border-bottom-left-radius: 5px;\n        border-bottom-right-radius: 5px;\n    }\n`;\n\nexport const PageTitle = styled.div`\n    margin-bottom: 45px;\n\n    > p {\n        font-weight: bold;\n        font-size: 20px;\n        color: var(--base-tertiary-color);\n        width: max-content;\n    }\n\n    > p::after {\n        content: '';\n        display: block;\n        width: 95%;\n        border-bottom: 3px solid #fd854b;\n    }\n`;\n","import React, { useRef } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport AddSkills from './AddSkills';\nimport FieldSet from '../../../components/FieldSet';\n\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport {\n    Container,\n    ClientHistoryContainer,\n    PageTitle,\n    CardsContainer,\n    Card,\n} from './styles';\n\nconst ClientHistory: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const history = useHistory();\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Histórico do Cliente</p>\n            </PageTitle>\n            <ClientHistoryContainer onSubmit={() => ''} id=\"form\" ref={formRef}>\n                <AvatarInput name=\"avatarImage\" label=\"Fulano da Silva\" />\n                <div>\n                    <CardsContainer>\n                        <Card>\n                            <p>Saldo</p>\n                            <div>R$ 50,00</div>\n                        </Card>\n                        <Card>\n                            <p>Ticket Médio</p>\n                            <div>R$195,00</div>\n                        </Card>\n                        <Card>\n                            <p>Taxa de comparecimento</p>\n                            <div>15,38 %</div>\n                        </Card>\n                        <Card>\n                            <p>Profissional querido</p>\n                            <div>Fernanda</div>\n                        </Card>\n                        <Card>\n                            <p>Dia da semana preferido</p>\n                            <div>Terça-Feira</div>\n                        </Card>\n                    </CardsContainer>\n                </div>\n                <AddSkills />\n                <FieldSet title=\"Próxima visita\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Profissional</th>\n                                <th>Duração</th>\n                                <th>Valor total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>31/03/2021</td>\n                                <td>Fernanda</td>\n                                <td>45min</td>\n                                <td>R$ 40,00</td>\n                            </tr>\n                            <tr>\n                                <td>02/04/2021</td>\n                                <td>Cleiton</td>\n                                <td>50min</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Histórico de visitas\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Horário</th>\n                                <th>Comanda</th>\n                                <th>Profissional</th>\n                                <th>Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr\n                                onClick={() =>\n                                    // eslint-disable-next-line prettier/prettier\n                                    history.push('/clients/history/service')}\n                            >\n                                <td>30/03/2021</td>\n                                <td>15:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr>\n                                <td>30/02/2021</td>\n                                <td>16:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr>\n                                <td>30/01/2021</td>\n                                <td>17:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </ClientHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ClientHistory;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst PageNotFound: React.FC = () => {\n    return <Container>Not Found</Container>;\n};\n\nexport default PageNotFound;\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 5px;\n    padding: 10px;\n\n    label {\n        cursor: pointer;\n        background: none;\n        border: none;\n        border-radius: 20px;\n        font-weight: bold;\n        text-transform: uppercase;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 200px;\n        font-size: 11px;\n        height: 35px;\n        transition: background 0.3s;\n        color: var(--base-quaternary-color);\n        background: var(--base-tertiary-color);\n\n        &:hover {\n            background: ${darken(0.04, '#fd5c0e')};\n        }\n\n        > input {\n            display: none;\n        }\n    }\n`;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue() {\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label\n                htmlFor={fieldName}\n                className=\"fibre-button fibre-button--cancel\"\n            >\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const PageTitle = styled.div`\n    margin-bottom: 45px;\n\n    > p {\n        font-weight: bold;\n        font-size: 20px;\n        color: var(--base-tertiary-color);\n        width: max-content;\n    }\n\n    > p::after {\n        content: '';\n        display: block;\n        width: 95%;\n        border-bottom: 3px solid #fd854b;\n    }\n`;\n\nexport const ServiceHistoryContainer = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n`;\n","import React, { useRef } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport FieldSet from '../../../../components/FieldSet';\nimport ButtonInput from '../../../../components/UnformFields/ButtonInput';\n\nimport { Container, PageTitle, ServiceHistoryContainer } from './styles';\n\nconst ServiceDetails: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Imagens do serviço</p>\n            </PageTitle>\n            <FieldSet title=\"Antes\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n            <FieldSet title=\"Depois\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ServiceDetails;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport ClientHistory from './ClientHistory';\nimport PageNotFound from '../Errors/PageNotFound';\nimport ServiceDetails from './ClientHistory/ServiceDetails';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/clients\" exact component={Home} />\n            <Route path=\"/clients/history\" exact component={ClientHistory} />\n            <Route\n                path=\"/clients/history/service\"\n                exact\n                component={ServiceDetails}\n            />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","import styled from 'styled-components';\n\ninterface ITitleContainerProps {\n    lineColor: string;\n}\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n\n    margin-bottom: 25px;\n`;\nexport const TitleContainer = styled.div<ITitleContainerProps>`\n    > h1 {\n        color: ${props => props.theme.color.white};\n\n        &::after {\n            content: '';\n            display: block;\n            width: 55px;\n            border-bottom: 10px solid ${props => props.lineColor};\n        }\n    }\n`;\nexport const Controllers = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import React from 'react';\n\nimport { Container, TitleContainer, Controllers } from './styles';\n\ninterface IContentHeaderProps {\n    title: string;\n    lineColor: string;\n    children: React.ReactNode;\n}\n\nconst ContentHeader: React.FC<IContentHeaderProps> = ({\n    title,\n    lineColor,\n    children,\n}) => {\n    return (\n        <Container>\n            <TitleContainer lineColor={lineColor}>\n                <h1>{title}</h1>\n            </TitleContainer>\n            <Controllers>{children}</Controllers>\n        </Container>\n    );\n};\n\nexport default ContentHeader;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    > select {\n        padding: 7px 10px;\n        border-radius: 5px;\n        margin-left: 7px;\n    }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface ISelectInputProps {\n    options: {\n        value: string | number;\n        label: string | number;\n    }[];\n}\n\nconst SelectInput: React.FC<ISelectInputProps> = ({ options }) => {\n    return (\n        <Container>\n            <select>\n                {options.map(option => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </Container>\n    );\n};\n\nexport default SelectInput;\n","import styled from 'styled-components';\n\ninterface ITagProps {\n    color: string;\n}\n\nexport const Container = styled.li`\n    background-color: ${props => props.theme.color.tertiary};\n    list-style: none;\n    border-radius: 5px;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.3s;\n\n    position: relative;\n\n    &:hover {\n        opacity: 0.7;\n        transform: translateX(10px);\n    }\n\n    cursor: pointer;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding-left: 10px;\n    }\n`;\n\nexport const Tag = styled.div<ITagProps>`\n    width: 10px;\n    height: 60%;\n    position: absolute;\n    left: 0;\n    background-color: ${props => props.color};\n`;\n","import React from 'react';\n\nimport { Container, Tag } from './styles';\n\ninterface IHistoryFinanceCardProps {\n    tagColor: string;\n    title: string;\n    subtitle: string;\n    amount: string;\n}\n\nconst HistoryFinanceCard: React.FC<IHistoryFinanceCardProps> = ({\n    tagColor,\n    title,\n    subtitle,\n    amount,\n}) => {\n    return (\n        <Container>\n            <Tag color={tagColor} />\n            <div>\n                <span>{title}</span>\n                <small>{subtitle}</small>\n            </div>\n            <h3>{amount}</h3>\n        </Container>\n    );\n};\n\nexport default HistoryFinanceCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Content = styled.div``;\n\nexport const Filters = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 30px;\n\n    > button {\n        font-size: 18px;\n        font-weight: 500;\n        background: none;\n        border: none;\n        color: ${props => props.theme.color.white};\n        margin: 0 10px;\n        transition: opacity 0.3s;\n\n        &:hover {\n            opacity: 0.7;\n        }\n    }\n\n    .tag-filter-recurrent::after {\n        content: '';\n        margin: auto;\n        display: block;\n        width: 55px;\n        border-bottom: 10px solid ${props => props.theme.color.warning};\n    }\n\n    .tag-filter-eventual::after {\n        content: '';\n        margin: auto;\n        display: block;\n        width: 55px;\n        border-bottom: 10px solid ${props => props.theme.color.success};\n    }\n`;\n","import React, { useMemo } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\n\nimport { Container, Content, Filters } from './styles';\n\ninterface IRouteParams {\n    match: {\n        params: {\n            type: string;\n        };\n    };\n}\n\nconst List: React.FC<IRouteParams> = ({ match }) => {\n    const { type } = match.params;\n\n    const title = useMemo(() => {\n        return type === 'entry-balance'\n            ? { text: 'Entradas', lineColor: '#F7931B' }\n            : { text: 'Saídas', lineColor: '#E44C4E' };\n    }, [type]);\n\n    const months = [\n        {\n            value: 7,\n            label: 'Julho',\n        },\n        {\n            value: 8,\n            label: 'Agosto',\n        },\n        {\n            value: 9,\n            label: 'Setembro',\n        },\n    ];\n\n    const years = [\n        {\n            value: 2020,\n            label: 2020,\n        },\n        {\n            value: 2019,\n            label: 2019,\n        },\n        {\n            value: 2018,\n            label: 2018,\n        },\n    ];\n\n    return (\n        <Container>\n            <ContentHeader title={title.text} lineColor={title.lineColor}>\n                <SelectInput options={months} />\n                <SelectInput options={years} />\n            </ContentHeader>\n\n            <Filters>\n                <button className=\"tag-filter-recurrent\" type=\"button\">\n                    Recorrentes\n                </button>\n                <button className=\"tag-filter-eventual\" type=\"button\">\n                    Eventuais\n                </button>\n            </Filters>\n\n            <Content>\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n            </Content>\n        </Container>\n    );\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst SignIn: React.FC = () => {\n    return <Container>SignIn</Container>;\n};\n\nexport default SignIn;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const FieldSet = styled.div`\n    border-bottom: 1px solid var(--primary-border-color);\n    font-weight: bold;\n    padding-bottom: 20px;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: var(--base-tertiary-color);\n`;\n\ninterface SectionButtonProps {\n    horizontalLine: boolean;\n}\n\nexport const SectionButton = styled.button.attrs<SectionButtonProps>(\n    ({ horizontalLine }) => ({\n        horizontalLine,\n    }),\n)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n\n    &:hover {\n        background: none;\n        color: var(--base-tertiary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\nexport const CreateClientForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n\n    @media only screen and (max-width: 1000px) {\n        #group1,\n        #group2,\n        #group3 {\n            flex-direction: column;\n\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n\n    #group1 {\n        display: flex;\n        > div {\n            width: 50%;\n        }\n    }\n\n    #group2 {\n        display: flex;\n        > div {\n            width: 25%;\n        }\n    }\n\n    #group3 {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-90w {\n        width: 90%;\n        max-width: 1300px;\n    }\n`;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport FieldSet from '../../../components/FieldSet';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    contato: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IBankapi {\n    ispb: string;\n    name: string;\n    code: number;\n    fullName: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const [loading, setLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [rgNumber, setRgNumber] = useState('');\n    const [banks, setBanks] = useState('');\n\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    const cities = brasilStatesAndCities.estados\n        .find(elem => elem.nome === currentState)\n        ?.cidades.map(elem => ({\n            value: elem,\n            label: elem,\n        }));\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    useState(() => {\n        /* apiClient\n            .get<IBankapi>(`https://brasilapi.com.br/api/banks/v1/`)\n            .then(response => {})\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n            }); */\n    });\n\n    function getAddressInfo(cep: string) {\n        setLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: states.filter(\n                            estado => estado.sigla === response.data.state,\n                        ),\n                        cidade: cities?.filter(\n                            cidade => cidade.label === response.data.city,\n                        ),\n                    },\n                });\n                setCurrentState(\n                    formRef.current?.getFieldValue('address.estado')[0].label,\n                );\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Fornecedor</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                            <div id=\"group1\">\n                                <Input\n                                    name=\"numeroCPFouCNPJ\"\n                                    label=\"CPF/CNPJ*\"\n                                    value={\n                                        tipoPessoa.length > 14\n                                            ? cnpjMask(tipoPessoa)\n                                            : cpfMask(tipoPessoa)\n                                    }\n                                    onChange={e =>\n                                        setTipoPessoa(e.target.value)\n                                    }\n                                />\n                                <Input name=\"email\" label=\"E-mail\" />\n                            </div>\n\n                            <div id=\"group3\">\n                                <Input name=\"contato\" label=\"Contato\" />\n                                <MaskedInput\n                                    mask=\"(99) 9999-9999\"\n                                    name=\"telefone\"\n                                    label=\"Telefone\"\n                                />\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"celular\"\n                                    label=\"Celular\"\n                                />\n                            </div>\n                            <Input name=\"observacoes\" label=\"Observações\" />\n                        </FieldSet>\n                        <FieldSet title=\"Informações Bancárias\">\n                            <div id=\"group2\">\n                                <Input name=\"pix\" label=\"Chave PIX\" />\n                                <Input name=\"banco\" label=\"Banco\" />\n                                <Input name=\"agencia\" label=\"Agência\" />\n                                <Input\n                                    name=\"contaCorrente\"\n                                    label=\"Conta Corrente\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={loading}\n                                            label=\"CEP\"\n                                            disabled={loading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={loading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={loading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            onChange={value => {\n                                                setCurrentState(value?.value);\n                                                formRef.current?.clearField(\n                                                    'address.cidade',\n                                                );\n                                            }}\n                                            options={states}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            isDisabled={currentState === ''}\n                                            options={cities}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ProviderHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > :first-child {\n                width: 15%;\n                > button {\n                    width: 100%;\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :last-child {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport { convertToBrasilianDateFormat } from '../../../utils/dateUtils';\nimport AddProviderModal, { IFormData } from '../CreateProvider';\n\nimport { Container, ProviderHeaderContainer } from './styles';\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Fornecedores</h1>\n                <div>\n                    <AddProviderModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar fornecedor\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>CPF/CNPJ</th>\n                            <th>Contato</th>\n                            <th>Telefone</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.numeroCPFouCNPJ}</td>\n                                <td>{provider.contato}</td>\n                                <td>{provider.whatsapp}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados fornecedores cadastrados\"\n                    subtitle='Adicione um novo fornecedor clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Providers: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/providers\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Providers;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const CreateClientForm = styled(Form)`\n    justify-content: space-around;\n    padding: 25px;\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 1000px) {\n        > :first-child {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n\n        > :last-child > div {\n                flex-direction: column;\n            }\n        }\n    }\n\n    > :first-child {\n        display: flex;\n        > div {\n            display: flex;\n            flex-direction: column;\n            flex: 1;\n            width: 50%;\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n\n        > :first-child {\n            display: flex;\n        }\n    }\n\n    #group1 {\n        display: flex;\n        > div {\n            width: 50%;\n        }\n    }\n`;\n\nexport const SectionButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n    width: 300px;\n\n    &:hover {\n        background: none;\n        color: var(--base-tertiary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-90w {\n        width: 90%;\n        max-width: 1300px;\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport { FaPlus } from 'react-icons/fa';\nimport { brazilianCurrencyMask } from '../../../utils/masks';\nimport Input from '../../../components/UnformFields/Input';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showDiscountContainer, setShowDiscountContainer] = useState(false);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [showConfigContainer, setShowConfigContainer] = useState(false);\n\n    const typeComissionOptions = [\n        {\n            label: 'Percentual',\n            value: 'percentual',\n        },\n        {\n            label: 'Valor',\n            value: 'valor',\n        },\n    ];\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Cabelo' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Manicure e Pedicure' },\n        { value: 5, label: 'Estética (facial ou corporal)' },\n        { value: 6, label: 'Massagem' },\n        { value: 7, label: 'Sobrancelhas' },\n    ];\n\n    const checkboxProfessionalOptions: CheckboxOption[] = [\n        {\n            id: 'descontarProfessional',\n            value: 'Descontar do Profissional',\n            label: 'Descontar do Profissional',\n        },\n    ];\n\n    const checkboxClientOptions: CheckboxOption[] = [\n        {\n            id: 'descontarClient',\n            value: 'Descontar do Cliente',\n            label: 'Descontar do Cliente',\n        },\n    ];\n\n    const checkboxProductForSale: CheckboxOption[] = [\n        {\n            id: 'produtoParaVenda',\n            value: 'Produto para Venda',\n            label: 'Produto para Venda',\n        },\n    ];\n\n    const checkboxProductForConsuption: CheckboxOption[] = [\n        {\n            id: 'produtoParaConsumo',\n            value: 'Produto para Consumo',\n            label: 'Produto para Consumo',\n        },\n    ];\n\n    interface IAddress {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface IFormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: IAddress;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <p>Cadastro de Produto</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <div>\n                                <FieldSet title=\"Dados do Produto\">\n                                    <Input name=\"descricao\" label=\"Descrição\" />\n                                    <div id=\"group1\">\n                                        <Select name=\"marca\" label=\"Marca\" />\n                                        <Input name=\"linha\" label=\"Linha\" />\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"grupo\"\n                                            label=\"Grupo\"\n                                            options={groupOptions}\n                                        />\n                                        <Select name=\"tipo\" label=\"Tipo\" />\n                                    </div>\n                                </FieldSet>\n\n                                <FieldSet title=\"Fornecedor\">\n                                    <Select\n                                        name=\"nomefornecedor\"\n                                        label=\"Nome\"\n                                    />\n                                    <Input\n                                        name=\"tempodeentrega\"\n                                        label=\"Tempo médio de Entrega (dias)\"\n                                    />\n                                    <Input\n                                        name=\"codigoDoFornecedor\"\n                                        label=\"Código do fornecedor\"\n                                    />\n                                </FieldSet>\n                            </div>\n                            <div>\n                                <FieldSet title=\"Comissões\">\n                                    <Select\n                                        name=\"formaDeComissao\"\n                                        label=\"Forma de comissão\"\n                                    />\n                                    <div> Quando Profissional</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoProfissional\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                    <div>Quando Assistente</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoAssitente\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                                <FieldSet title=\"Descontos\">\n                                    <div id=\"group1\">\n                                        {/* <CheckBox\n                                            options={\n                                                checkboxProfessionalOptions\n                                            }\n                                            name=\"decontardoprofissional\"\n                                        />\n                                        <CheckBox\n                                            options={checkboxClientOptions}\n                                            name=\"decontardocliente\"\n                                        /> */}\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Input\n                                            name=\"usoInterno\"\n                                            label=\"Uso Interno\"\n                                        />\n                                        <Input\n                                            name=\"usoProprio\"\n                                            label=\"Uso Próprio\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                            </div>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowConfigContainer(!showConfigContainer)\n                            }\n                        >\n                            {showConfigContainer\n                                ? 'Ocultar configurações do produto'\n                                : 'Mostrar configurações do produto'}\n                            {showConfigContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        <div>\n                            {showConfigContainer && (\n                                <>\n                                    <div>\n                                        <FieldSet title=\"Finalidade\">\n                                            <div id=\"group1\">\n                                                {/*  <CheckBox\n                                                    options={\n                                                        checkboxProductForSale\n                                                    }\n                                                    name=\"produtoParaVenda\"\n                                                />\n                                                <CheckBox\n                                                    options={\n                                                        checkboxProductForConsuption\n                                                    }\n                                                    name=\"produtoParaConsumo\"\n                                                /> */}\n                                            </div>\n                                            <div id=\"group1\">\n                                                <Input\n                                                    name=\"valorDaVenda\"\n                                                    label=\"Valor da Venda\"\n                                                />\n                                                <Input\n                                                    name=\"descontoMáximoPermitido\"\n                                                    label=\"Desconto Máximo Permitido\"\n                                                />\n                                            </div>\n                                        </FieldSet>\n\n                                        <FieldSet title=\"Estoque Mínimo\">\n                                            <Input\n                                                name=\"estoqueMinimo\"\n                                                label=\"Estoque mínimo (unidades)\"\n                                            />\n                                            <Input\n                                                name=\"valorConvertido\"\n                                                label=\"Valor Convertido\"\n                                            />\n                                        </FieldSet>\n                                    </div>\n                                    <FieldSet title=\"Registro de Saída\">\n                                        <Select\n                                            name=\"registrarSaidaPor\"\n                                            label=\"Registrar saída por\"\n                                        />\n                                        <div id=\"group1\">\n                                            <Select\n                                                name=\"conversao\"\n                                                label=\"Informe a conversão\"\n                                            />\n                                            <Input\n                                                name=\"possui\"\n                                                label=\"Possui (cm)\"\n                                            />\n                                        </div>\n                                    </FieldSet>\n                                </>\n                            )}\n                        </div>\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ProviderHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > :first-child {\n                width: 15%;\n                > button {\n                    width: 100%;\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :last-child {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport AddServiceModal from '../CreateProduct';\nimport { Container, ProviderHeaderContainer } from './styles';\n\nexport interface IFormData {\n    nome: string;\n    marca: string;\n    tipo: string;\n    precoDeVenda: string;\n}\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Revelador',\n            marca: 'CADVEU',\n            tipo: 'Cabelo',\n            precoDeVenda: '21,60',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Produtos</h1>\n                <div>\n                    <AddServiceModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Marca</th>\n                            <th>Tipo do produto</th>\n                            <th>Preço de venda</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.marca}</td>\n                                <td>{provider.tipo}</td>\n                                <td>{provider.precoDeVenda}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados produtos cadastrados\"\n                    subtitle='Adicione um novo produto clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Products: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/products\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Products;\n","import styled from 'styled-components';\n\ninterface IInputProps {\n    textTransform: string;\n}\n\nexport const Container = styled.div<IInputProps>`\n    display: flex;\n    margin: 5px;\n    flex-direction: column;\n    max-width: 99%;\n\n    &:focus-within {\n        > div {\n            label {\n                color: var(--base-tertiary-color);\n            }\n\n            svg {\n                color: var(--base-tertiary-color);\n            }\n        }\n\n        > textarea {\n            border-color: var(--base-tertiary-color);\n        }\n    }\n\n    > div {\n        display: flex;\n        align-items: center;\n\n        > label {\n            margin-left: 15px;\n            margin-bottom: 5px;\n            font-size: 13px;\n            font-weight: bold;\n            color: var(--primary-text-color);\n        }\n\n        > svg {\n            margin-left: 5px;\n            width: 17px;\n            height: 17px;\n        }\n\n        > p {\n            background-color: red;\n            font-size: 13px;\n        }\n    }\n\n    > textarea {\n        text-transform: ${props => props.textTransform};\n        border-radius: 18px;\n        border: 1px solid var(--primary-border-color);\n        min-height: 60px;\n        padding: 15px;\n        color: var(--primary-text-color);\n\n        &[disabled] {\n            background-color: var(--base-quaternary-color);\n            cursor: not-allowed;\n        }\n    }\n\n    > span {\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        color: #db3b21;\n\n        > svg {\n            width: 16px;\n            height: 16px;\n        }\n    }\n`;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label: string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['textarea'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLTextAreaElement>(null);\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <textarea\n                id={fieldName}\n                ref={inputRef}\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const CreateClientForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n    > div {\n        width: 100%;\n    }\n\n    #group1 {\n        display: flex;\n        > div {\n            width: 50%;\n        }\n    }\n\n    #group2 {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n`;\n\nexport const SectionButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n    width: 300px;\n\n    &:hover {\n        background: none;\n        color: var(--base-tertiary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-90w {\n        width: 90%;\n        max-width: 1300px;\n    }\n`;\n\nexport const WeekSchedule = styled.div`\n    display: flex;\n    max-width: 50%;\n\n    > div {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        margin-left: 10px;\n\n        button {\n            margin-bottom: 10px;\n            width: 120px;\n        }\n    }\n\n    > :last-child {\n        > div {\n            display: flex;\n            align-items: center;\n            > div {\n                margin-left: 5px;\n                margin-right: 5px;\n            }\n        }\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../components/UnformFields/Input';\nimport TextArea from '../../../components/UnformFields/TextArea';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n    WeekSchedule,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    valor: string;\n    categoria: string;\n    tempoDeExecucao: string;\n    contato: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [\n        showDiferentPriceContainer,\n        setShowDiferentPriceContainer,\n    ] = useState(false);\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Assessoria de Noivas' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Cabelo' },\n        { value: 4, label: 'Depilação' },\n        { value: 5, label: 'Estética corporal' },\n        { value: 6, label: 'Estética facial' },\n        { value: 7, label: 'Manícure e pedícure' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Massagem' },\n        { value: 5, label: 'Podologia' },\n        { value: 6, label: 'Sobrancelha' },\n        { value: 7, label: 'Tatuagem' },\n    ];\n\n    const checkboxOnlineScheduleptions: CheckboxOption[] = [\n        { id: 'agendamentoOnline', value: 'true', label: 'Agendamento online' },\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxDiferentPrice: CheckboxOption[] = [\n        {\n            id: 'precoDiferenciado',\n            value: 'true',\n            label: 'Preço Diferenciado',\n        },\n    ];\n\n    function handleClose() {\n        setShowDiferentPriceContainer(false);\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button type=\"button\" onClick={handleShow}>\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Cadastro de Serviço</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <FieldSet title=\"Dados do Serviço\">\n                                <div id=\"group1\">\n                                    <Select\n                                        name=\"grupoServico\"\n                                        label=\"Grupo de serviço\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={groupOptions}\n                                        isSearchable\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                    <Input name=\"servico\" label=\"Serviço\" />\n                                </div>\n                                <Select\n                                    name=\"referenciaTributacao\"\n                                    label=\"Referência para tributação\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={{\n                                        label: 'Selecione',\n                                        value: 0,\n                                    }}\n                                    options={groupOptions}\n                                    isSearchable\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                                <TextArea\n                                    name=\"descricaoServico\"\n                                    label=\"Descrição do serviço\"\n                                />\n                                <div id=\"group2\">\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Preço serviço\"\n                                    />\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Custo serviço\"\n                                    />\n                                    <Input name=\"servico\" label=\"Duração\" />\n                                </div>\n                                {/*  <CheckBox\n                                    options={checkboxOnlineScheduleptions}\n                                    name=\"agendamentoOnline\"\n                                />\n                                <CheckBox\n                                    options={checkboxCanFitIn}\n                                    name=\"possibilitaEncaixe\"\n                                />\n                                <CheckBox\n                                    options={checkboxDiferentPrice}\n                                    name=\"precoDiferenciado\"\n                                    onChange={() =>\n                                        setShowDiferentPriceContainer(\n                                            !showDiferentPriceContainer,\n                                        )\n                                    }\n                                /> */}\n                                {showDiferentPriceContainer && (\n                                    <>\n                                        <WeekSchedule>\n                                            <div>\n                                                <label>Dia da semana</label>\n                                                <button type=\"button\">\n                                                    Domingo\n                                                </button>\n                                                <button type=\"button\">\n                                                    Segunda\n                                                </button>\n                                                <button type=\"button\">\n                                                    Terça\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quarta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quinta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sexta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sábado\n                                                </button>\n                                            </div>\n                                            <div>\n                                                <label>\n                                                    Valor diferenciado\n                                                </label>\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                            </div>\n                                            <div>\n                                                <label>Definir horário</label>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </WeekSchedule>\n                                    </>\n                                )}\n                            </FieldSet>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowCommissionContainer(\n                                    !showCommissionContainer,\n                                )\n                            }\n                        >\n                            {showCommissionContainer\n                                ? 'Ocultar comissões'\n                                : 'Mostrar comissões'}\n                            {showCommissionContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showCommissionContainer && (\n                            <FieldSet title=\"Comissões\">\n                                <Select\n                                    name=\"formaDeComissao\"\n                                    label=\"Forma de comissão\"\n                                />\n                                <div> Quando Profissional</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                                <div>Quando Assistente</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ProviderHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > :first-child {\n                width: 15%;\n                > button {\n                    width: 100%;\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :last-child {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport AddServiceModal from '../CreateService';\nimport { Container, ProviderHeaderContainer } from './styles';\n\nexport interface IFormData {\n    nome: string;\n    valor: string;\n    categoria: string;\n    tempoDeExecucao: string;\n}\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Botox capilar',\n            valor: 'R$ 350,00',\n            categoria: 'Cabelo',\n            tempoDeExecucao: '02:45:00',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Serviços</h1>\n                <div>\n                    <AddServiceModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar serviço\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Valor</th>\n                            <th>Tempo</th>\n                            <th>Categoria</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.valor}</td>\n                                <td>{provider.tempoDeExecucao}</td>\n                                <td>{provider.categoria}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados serviços cadastrados\"\n                    subtitle='Adicione um novo serviço clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Providers: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/services\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Providers;\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\nimport { Form } from '@unform/web';\n\nexport const FilterContainer = styled.div`\n    display: flex;\n    width: 100%;\n\n    > div {\n        width: 100%;\n        margin-right: 15px;\n    }\n\n    @media only screen and (max-width: 768px) {\n        flex-direction: column;\n\n        > div {\n            margin-bottom: 10px;\n        }\n    }\n`;\n\nexport const EventContainer = styled.div``;\n\nexport const Container = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n        margin-bottom: 30px;\n        line-height: 22px !important;\n    }\n\n    > :nth-child(2) {\n        margin-bottom: 25px;\n    }\n\n    .react-datepicker-popper {\n        z-index: 9 !important;\n    }\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    .rbc-allday-cell {\n        display: none;\n    }\n    .rbc-time-view .rbc-header {\n        border-bottom: none;\n    }\n\n    .rbc-time-content {\n        border-top: 1px solid #ddd;\n        width: 100%;\n        scroll-behavior: smooth;\n        overflow-x: auto;\n        ::-webkit-scrollbar {\n            display: none;\n        }\n    }\n\n    .rbc-time-header-gutter {\n        min-width: 45.8px !important;\n    }\n\n    /*  .rbc-timeslot-group {\n        border-bottom: 0;\n    } */\n\n    .rbc-time-content {\n        border-top: 0;\n    }\n\n    .rbc-time-gutter {\n        background: ${lighten(0.6, '#222')};\n        color: #fff;\n    }\n\n    .rbc-time-header-gutter {\n        border-right: 1px solid ${lighten(0.05, '#222')};\n    }\n\n    /*    .rbc-timeslot-group {\n        border-bottom: none;\n    }\n */\n    /*   .rbc-time-header-content {\n        border-left: 1px solid ${lighten(0.05, '#222')};\n    } */\n\n    /*  .rbc-time-view {\n        border-bottom: none !important;\n    }\n */\n    .rbc-time-header {\n        border-bottom: 2px solid var(--base-border-color);\n    }\n\n    .rbc-current-time-indicator {\n        background-color: var(--base-tertiary-color);\n    }\n\n    .rbc-time-header-content > .rbc-row.rbc-row-resource {\n        border-bottom: none;\n    }\n\n    .rbc-time-view-resources .rbc-time-gutter,\n    .rbc-time-view-resources .rbc-time-header-gutter {\n        z-index: 1;\n    }\n\n    .rbc-time-header-gutter {\n        background-color: #eee;\n        border-right: 1px solid #ddd;\n    }\n\n    .rbc-header {\n        background-color: #eee;\n    }\n\n    .rbc-event-label {\n        display: none;\n    }\n\n    .rbc-event {\n        display: flex;\n        padding: 0px;\n        background: #eee;\n        border: 1px solid #eee;\n    }\n\n    .rbc-time-header-content + .rbc-time-header-content {\n        margin-left: 0px !important;\n    }\n\n    .rbc-time-view-resources .rbc-day-slot {\n        min-width: 225px;\n    }\n    .rbc-time-view-resources .rbc-time-header-content {\n        min-width: 225px;\n    }\n\n    @media only screen and (max-width: 1000px) {\n        .rbc-time-view-resources .rbc-day-slot {\n            min-width: 110px;\n        }\n        .rbc-time-view-resources .rbc-time-header-content {\n            min-width: 110px;\n        }\n\n        .rbc-time-header-gutter {\n            min-width: 41px !important;\n        }\n    }\n\n    .rs-drawer-footer {\n        height: 80px !important;\n    }\n\n    .rbc-event {\n        height: auto !important;\n    }\n`;\n\nexport const ResourceHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 15px;\n    color: #fff;\n    color: var(--primary-text-color);\n    background-color: #eee;\n\n    > p {\n        font-size: 12px;\n        font-weight: lighter;\n    }\n\n    > strong {\n        font-size: 15px;\n    }\n\n    > img {\n        width: 60px;\n        height: 60px;\n        border-radius: 50px;\n    }\n`;\n\ninterface StyledEventProps {\n    status: string;\n}\n\nexport const Event = styled.div<StyledEventProps>`\n    width: 100%;\n    height: auto;\n    color: var(--primary-text-color);\n    border-radius: 5px;\n    display: flex;\n    padding-bottom: 10px;\n    padding-top: 10px;\n    padding: 5px;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    > p {\n        margin-bottom: 10px;\n    }\n\n    > ul {\n        margin-top: 8px;\n    }\n\n    background: ${props => {\n        switch (props.status) {\n            case 'Agendado':\n                return '#ffd8b7';\n                break;\n            case 'Alterado':\n                return '#fcfcdc';\n                break;\n            case 'Confirmado':\n                return '#d4eef9';\n                break;\n            case 'Cliente chegou':\n                return '#e0f4da';\n                break;\n            case 'Finalizado':\n                return '#f2f2f2';\n                break;\n            default:\n                return '';\n        }\n    }};\n\n    /* > :first-child {\n        height: 60px;\n        width: 100%;\n        padding-top: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        background: ${props => {\n        switch (props.status) {\n            case 'Agendado':\n                return '#ffd8b7';\n                break;\n            case 'Alterado':\n                return '#fcfcdc';\n                break;\n            case 'Confirmado':\n                return '#d4eef9';\n                break;\n            case 'Cliente chegou':\n                return '#e0f4da';\n                break;\n            case 'Finalizado':\n                return '#f2f2f2';\n                break;\n            default:\n                return '';\n        }\n    }};\n\n        > img {\n            top: 9px;\n            position: relative;\n            width: 60px;\n            height: 60px;\n            border-radius: 50%;\n            box-shadow: 0 0 0 3px #fff, 0 0 0 3px #fff,\n                0 2px 5px 4px rgba(0, 0, 0, 0.2);\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding-top: 50px;\n        height: 100%;\n        background-color: #fff;\n\n        > :first-child {\n            font-size: 15px;\n            font-weight: bold;\n        }\n\n        > ul {\n            padding-top: 10px;\n        }\n\n        > :nth-child(3) {\n            width: 100%;\n            display: flex;\n            align-items: center;\n            flex-direction: column;\n            justify-content: center;\n            padding-bottom: 15px;\n\n            > div {\n                width: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                margin-bottom: 4px;\n            }\n\n            > :first-child {\n                svg {\n                    margin-right: 3px;\n                }\n            }\n        }\n    } */\n`;\n\nexport const CalendarContainer = styled.div`\n    position: relative;\n\n    > :first-child {\n        position: absolute;\n        z-index: 2;\n        display: flex;\n        top: calc(100% / 22.5);\n        left: 0;\n        width: 100.5%;\n        justify-content: space-between;\n\n        > button {\n            background: none;\n            border: none;\n            width: 40px !important;\n\n            > svg {\n                width: 40px;\n                height: 40px;\n                color: var(--primary-text-color);\n            }\n        }\n    }\n\n    /*  .rbc-event:hover {\n        height: fit-content !important;\n    } */\n`;\n\nexport const MenuContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width: 90%;\n    padding: 10px;\n\n    > svg {\n        width: 23px;\n        height: 23px;\n\n        &:hover {\n            color: var(--base-tertiary-color);\n        }\n    }\n\n    .rs-modal-backdrop.in {\n        opacity: 0.08 !important;\n    }\n`;\n\nexport const PopoverButtonStyle = styled.button`\n    cursor: pointer;\n\n    > svg {\n        color: var(--primary-text-color);\n        margin-right: 5px;\n\n        &:hover {\n            color: var(--base-fibre-color);\n        }\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    > button {\n        margin-left: 10px;\n        width: 120px;\n    }\n`;\n\nexport const CreateEventForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n\n    > :last-child {\n        > :last-child {\n            margin-top: 15px;\n            width: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    }\n`;\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable radix */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-shadow */\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport {\n    Calendar,\n    momentLocalizer,\n    ResourceHeaderProps,\n} from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport {\n    MdKeyboardArrowRight,\n    MdKeyboardArrowLeft,\n    MdPerson,\n    MdAccessTime,\n    MdAttachMoney,\n    MdEdit,\n    MdInfo,\n    MdAlarm,\n    MdAlarmOn,\n    MdInfoOutline,\n    MdPlayCircleOutline,\n} from 'react-icons/md';\nimport { RiMoneyDollarCircleLine } from 'react-icons/ri';\nimport {\n    BiStopCircle,\n    BiCalendarCheck,\n    BiCalendarX,\n    BiCalendarEdit,\n    BiCalendarExclamation,\n} from 'react-icons/bi';\n\nimport { Button, ButtonToolbar, Drawer, Popover, Whisper, Modal } from 'rsuite';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport DatePicker from 'react-datepicker';\nimport ComboBox from 'react-select';\nimport Button1 from 'react-bootstrap/Button';\nimport Input from '../../components/UnformFields/Input';\nimport FieldSet from '../../components/FieldSet';\n\nimport 'rsuite/src/styles/themes/default/index.less';\n\n/* import 'rsuite/dist/styles/rsuite-default.css';\n */ import MaskedInput from '../../components/UnformFields/InputMaskd';\nimport Select from '../../components/UnformFields/Select';\nimport './customModal.css';\nimport '../../styles/customreactdatepicker.css';\n\nimport {\n    Container,\n    ResourceHeader,\n    CalendarContainer,\n    Event,\n    MenuContainer,\n    PopoverButtonStyle,\n    CreateEventForm,\n    ButtonContainer,\n    FilterContainer,\n    EventContainer,\n} from './styles';\n\ninterface IResource {\n    title: string;\n    position: string;\n    img: string;\n}\n\ninterface IEventService {\n    descricao: string;\n    duracao: string;\n    preco: string;\n}\n\ninterface IEvent {\n    id: number;\n    title: string;\n    status: string;\n    resourceId: string;\n    client: string;\n    servicos: Array<IEventService>;\n    start: Date;\n    preference: string;\n    end: Date;\n    img: string;\n    cellPhone?: string;\n}\n\ninterface IEventFormData {\n    client: {\n        label: string;\n        value: number;\n    };\n    preference: {\n        label: string;\n        value: number;\n    };\n    hour: {\n        label: string;\n        value: number;\n    };\n    cellPhone: string;\n    services: Array<IEventService>;\n}\n\nmoment.locale('pt-br');\nconst localizer = momentLocalizer(moment);\n\nconst Schedule: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [showEventModal, setShowEventModal] = useState(false);\n    const [showAttendanceModal, setShowAttendanceEventModal] = useState(false);\n    const [focusedEvent, setFocusedEvent] = useState({});\n\n    const [eventData, setEventData] = useState<IEvent>({\n        id: 0,\n        title: '',\n        status: '',\n        resourceId: '',\n        client: '',\n        cellPhone: '',\n        preference: '',\n        servicos: [],\n        start: new Date(),\n        end: new Date(),\n        img: '',\n    });\n\n    const [events, setEvents] = useState([\n        {\n            title: 'Corte cabelo',\n\n            resourceId: 'Luciano',\n            client: 'Juliana',\n            status: 'Agendado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n                {\n                    descricao: 'Corte',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 9, 20, 0, 0),\n        },\n        {\n            title: 'Barba',\n            resourceId: 'Jessica',\n            client: 'Juliana',\n            status: 'Alterado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 2, 30, 0, 0),\n            end: new Date(2021, 4, 24, 4, 30, 0, 0),\n        },\n        {\n            title: 'Unhas',\n            resourceId: 'Marcia',\n            status: 'Confirmado',\n            img: 'https://i.pravatar.cc/500',\n            client: 'Juliana',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 6, 30, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 10, 30, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 6, 0, 0, 0),\n            end: new Date(2021, 4, 24, 8, 0, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 6, 30, 0, 0),\n            end: new Date(2021, 4, 24, 9, 0, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Fulana',\n            client: 'Juliana',\n            status: 'Finalizado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 12, 30, 0, 0),\n            end: new Date(2021, 4, 24, 14, 30, 0, 0),\n        },\n    ]);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    function handleCloseEventModal() {\n        setShowEventModal(false);\n    }\n\n    function handleShowEventModal() {\n        setShowEventModal(true);\n    }\n\n    function handleCloseStopAttendanceModal() {\n        setShowEventModal(false);\n    }\n\n    function handleShowStopAttendanceModal() {\n        setShowEventModal(true);\n    }\n\n    const clients = [\n        { value: 1, label: 'Maria' },\n        { value: 2, label: 'Celso' },\n        { value: 3, label: 'Julia' },\n    ];\n\n    const positions = [\n        { value: 1, label: 'Barbeiro' },\n        { value: 2, label: 'Cabeleireiro' },\n        { value: 3, label: 'Esteticista' },\n    ];\n\n    const preferences = [\n        { value: 1, label: 'Comanda aberta' },\n        { value: 2, label: 'Indicação' },\n        { value: 3, label: 'Noivas' },\n        { value: 4, label: 'Normal' },\n        { value: 5, label: 'Preferencial' },\n        { value: 6, label: 'Primeira vez' },\n    ];\n\n    const hours = [\n        { value: 1, label: '8:00' },\n        { value: 2, label: '8:30' },\n        { value: 3, label: '9:00' },\n        { value: 4, label: '9:30' },\n        { value: 5, label: '10:00' },\n        { value: 6, label: '10:30' },\n        { value: 7, label: '11:00' },\n        { value: 8, label: '11:30' },\n        { value: 9, label: '12:00' },\n        { value: 10, label: '12:30' },\n    ];\n\n    const services = [\n        { value: 1, label: 'Unhas' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Corte' },\n    ];\n\n    const artists = [\n        { value: 1, label: 'Luciano' },\n        { value: 2, label: 'Marcio' },\n        { value: 3, label: 'Maria' },\n    ];\n\n    const clientsData = [\n        { value: 1, label: 'Luciano' },\n        { value: 2, label: 'Marcio' },\n        { value: 3, label: 'Maria' },\n    ];\n\n    const formRef = useRef<FormHandles>(null);\n\n    const handleCreateEventSubmit: SubmitHandler<IEventFormData> = async data => {\n        /* setEvents([\n            ...events,\n            {\n                cellPhone: data.cellPhone,\n                client: data.client.label,\n                preference: data.preference.label,\n                start: new Date(eventData.start.setHours(data.hour.value)),\n                servicos: data.services,\n                img: 'https://i.pravatar.cc/500',\n            },\n        ]); */\n    };\n\n    /*  const events = [\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(120, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n    ];\n */\n\n    const resources = [\n        {\n            id: 'Luciano',\n            title: 'Luciano',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Jessica',\n            title: 'Jessica',\n            position: 'Maquiadora',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Marcia',\n            title: 'Marcia',\n            position: 'Cabeleleira',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Alan',\n            title: 'Alan',\n            position: 'Esteticista',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Fulana',\n            title: 'Fulana',\n            position: 'Manicure',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Beltrano',\n            title: 'Beltrano',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Ciclano',\n            title: 'Ciclano',\n            position: 'Cabeleireiro',\n            allday: 'off',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Fulaninho',\n            title: 'Fulaninho',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Beltraninho',\n            title: 'Beltraninho',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n    ];\n\n    const [scrollProgress, setScrollProgress] = useState(0);\n\n    useEffect(() => {\n        const buttonRight = document.getElementById(\n            'slideRight',\n        ) as HTMLButtonElement;\n        const buttonLeft = document.getElementById(\n            'slideLeft',\n        ) as HTMLButtonElement;\n\n        buttonRight.onclick = () => {\n            document.getElementsByClassName(\n                'rbc-time-content',\n            )[0].scrollLeft += 300;\n        };\n        buttonLeft.onclick = () => {\n            document.getElementsByClassName(\n                'rbc-time-content',\n            )[0].scrollLeft -= 300;\n        };\n\n        const EventList = Array.from(\n            document.getElementsByClassName(\n                'rbc-event',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        EventList.forEach(item => {\n            const { left, width, height } = item.style;\n            const siblings =\n                item.parentElement &&\n                Array.from(item.parentElement.children)\n                    .filter(c => c !== item)\n                    .map(item => item as HTMLElement);\n\n            item.addEventListener('mouseover', () => {\n                siblings?.forEach(item => {\n                    item.style.display = 'none';\n                });\n                item.style.height = 'auto';\n                item.style.width = '100%';\n                item.style.left = '0';\n                item.style.zIndex = '999';\n            });\n\n            item.addEventListener('mouseout', () => {\n                siblings?.forEach(item => {\n                    item.style.display = 'block';\n                });\n                item.style.height = height;\n                item.style.width = width;\n                item.style.left = left;\n                item.style.zIndex = '';\n            });\n        });\n\n        /*   EventList.forEach(item => {\n            const size = item.style.height;\n\n            item.addEventListener('mouseover', () => {\n                item.style.height = 'auto';\n            });\n            item.addEventListener('mouseout', () => {\n                item.style.height = size;\n            });\n        }); */\n\n        /* return () => {}; */\n\n        /*    const target = document.getElementsByClassName('rbc-time-content')[0];\n\n        const scrollListener = () => {\n            const windowScroll = target.scrollLeft; // Distance of the scrollbar from the leftmost point\n            const totalWidth = target.scrollWidth - target.clientWidth; // Total width the scrollbar can traverse\n\n            if (windowScroll === 0) {\n                setScrollProgress(0);\n            }\n\n            if (windowScroll > totalWidth) {\n                setScrollProgress(100);\n            }\n\n            setScrollProgress((windowScroll / totalWidth) * 100);\n        };\n\n        target.addEventListener('touchmove', scrollListener);\n\n        return () => {\n            target.removeEventListener('touchmove', scrollListener);\n        }; */\n    });\n\n    const [date, setDate] = useState(new Date());\n    const [reload, setReload] = useState(false);\n\n    const speakerEdit = <Popover title=\"Editar\" />;\n    const speakerPlay = <Popover title=\"Iniciar atendimento\" />;\n    const speakerStop = <Popover title=\"Finalizar atendimento\" />;\n    const speakerConfirm = <Popover title=\"Confirmar agendamento\" />;\n    const speakerCancel = <Popover title=\"Cancelar horário de atendimento\" />;\n    const speakerClientIsHere = <Popover title=\"Cliente chegou\" />;\n\n    return (\n        <Container>\n            <h1>Agenda</h1>\n            <FilterContainer>\n                <DatePicker\n                    selected={date}\n                    onChange={(date: Date) => date && setDate(date)}\n                />\n\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={artists}\n                    isSearchable\n                    defaultValue={{\n                        label: 'Filtro por artista',\n                        value: 0,\n                    }}\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={positions}\n                    defaultValue={{\n                        label: 'Filtro por função',\n                        value: 0,\n                    }}\n                    isSearchable\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={clientsData}\n                    isSearchable\n                    defaultValue={{\n                        label: 'Filtro por cliente',\n                        value: 0,\n                    }}\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n            </FilterContainer>\n\n            <Drawer show={show} onHide={handleClose}>\n                <Drawer.Header>\n                    <Drawer.Title>Novo Agendamento</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                    <CreateEventForm\n                        id=\"form\"\n                        onSubmit={handleCreateEventSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Cliente\">\n                            <Select\n                                label=\"Cliente\"\n                                name=\"client\"\n                                classNamePrefix=\"react-select\"\n                                options={clients}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Preferência\"\n                                name=\"preference\"\n                                classNamePrefix=\"react-select\"\n                                options={preferences}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Horário\"\n                                name=\"hour\"\n                                classNamePrefix=\"react-select\"\n                                options={hours}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <MaskedInput\n                                mask=\"(99) 9 9999-9999\"\n                                name=\"cellPhone\"\n                                label=\"Celular\"\n                            />\n                        </FieldSet>\n                        <FieldSet title=\"Serviço(s)\">\n                            <Select\n                                label=\"Descrição\"\n                                name=\"service\"\n                                classNamePrefix=\"react-select\"\n                                options={services}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <MaskedInput\n                                mask=\"99:99\"\n                                name=\"time\"\n                                label=\"Duração\"\n                            />\n                            <MaskedInput\n                                mask=\"R$ 999,99\"\n                                name=\"value\"\n                                label=\"Valor\"\n                            />\n                            <div>\n                                <button>Incluir mais serviços</button>\n                            </div>\n                        </FieldSet>\n                    </CreateEventForm>\n                </Drawer.Body>\n                <Drawer.Footer>\n                    <ButtonContainer>\n                        <button\n                            className=\"fibre-button fibre-button--cancel\"\n                            type=\"button\"\n                            onClick={handleClose}\n                        >\n                            Cancelar\n                        </button>\n                        <button\n                            className=\"fibre-button fibre-button--cancel\"\n                            type=\"submit\"\n                            form=\"form\"\n                        >\n                            Salvar\n                        </button>\n                    </ButtonContainer>\n                </Drawer.Footer>\n            </Drawer>\n\n            {/*       <Calendar\n                localizer={localizer}\n                toolbar={false}\n                formats={{\n                    dateFormat: 'dd',\n                    dayFormat: (date: any, culture: any, localizer: any) =>\n                        localizer.format(date, 'dddd', culture),\n                }}\n                events={events}\n                defaultDate={moment().toDate()}\n                defaultView=\"week\"\n                selectable\n                popup\n                style={{ height: 600 }}\n            /> */}\n\n            <CalendarContainer>\n                <div>\n                    <button id=\"slideLeft\" type=\"button\">\n                        <MdKeyboardArrowLeft />\n                    </button>\n                    <button id=\"slideRight\" type=\"button\">\n                        <MdKeyboardArrowRight />\n                    </button>\n                </div>\n                <Calendar\n                    toolbar={false}\n                    components={{\n                        resourceHeader: ({ resource, index }) => {\n                            const {\n                                title,\n                                position,\n                                img,\n                            } = resource as IResource;\n\n                            return (\n                                <ResourceHeader key={index}>\n                                    <img src={img} alt=\"avatar\" />\n                                    <strong>{title}</strong>\n                                    <p>{position}</p>\n                                </ResourceHeader>\n                            );\n                        },\n                        event: ({ event }) => {\n                            const {\n                                title,\n                                status,\n                                resourceId,\n                                client,\n                                servicos,\n                                start,\n                                end,\n                                img,\n                            } = event as IEvent;\n\n                            const duration = moment.duration(\n                                moment(end).diff(moment(start)),\n                            );\n\n                            let total = 0;\n\n                            return (\n                                <EventContainer>\n                                    <Event\n                                        status={status}\n                                        onClick={handleShowEventModal}\n                                    >\n                                        <p>{client}</p>\n                                        {`${moment(start, 'HHmmss').format(\n                                            'HH:mm',\n                                        )} - ${moment(end, 'HHmmss').format(\n                                            'HH:mm',\n                                        )} -> `}\n                                        {status}\n                                        {/*  <ul>\n                                            {servicos.map(service => (\n                                                <li>{service.descricao}</li>\n                                            ))}\n                                        </ul> */}\n                                        <MenuContainer>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerCancel}\n                                            >\n                                                <BiCalendarX />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerClientIsHere}\n                                            >\n                                                <BiCalendarExclamation />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerEdit}\n                                            >\n                                                <BiCalendarEdit />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerConfirm}\n                                            >\n                                                <BiCalendarCheck />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerPlay}\n                                            >\n                                                <MdPlayCircleOutline />\n                                            </Whisper>\n                                        </MenuContainer>\n                                    </Event>\n                                    <Modal\n                                        show={showEventModal}\n                                        onHide={handleCloseEventModal}\n                                        overflow\n                                    >\n                                        <Modal.Header>\n                                            <Modal.Title>\n                                                {`${moment(\n                                                    start,\n                                                    'HHmmss',\n                                                ).format('HH:mm')} - ${moment(\n                                                    end,\n                                                    'HHmmss',\n                                                ).format('HH:mm')} -> `}\n                                                {status}\n                                            </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                            <img src={img} alt=\"avatar\" />\n                                            <div>\n                                                <p>{client}</p>\n                                                <ul>\n                                                    {servicos.map(service => (\n                                                        <li>\n                                                            {service.descricao}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                                <div>\n                                                    <div>\n                                                        <MdAccessTime />\n                                                        <span>\n                                                            {`${duration.hours()}h:${duration.minutes()}min`}\n                                                        </span>\n                                                    </div>\n                                                    <div>\n                                                        <RiMoneyDollarCircleLine />\n                                                        <span>\n                                                            {servicos.forEach(\n                                                                service => {\n                                                                    total += parseInt(\n                                                                        service.preco,\n                                                                    );\n                                                                },\n                                                            )}\n                                                            {total}\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Modal.Body>\n                                        <Modal.Footer>\n                                            <MenuContainer>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerCancel}\n                                                >\n                                                    <BiCalendarX />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={\n                                                        speakerClientIsHere\n                                                    }\n                                                >\n                                                    <BiCalendarExclamation />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerEdit}\n                                                >\n                                                    <BiCalendarEdit />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerConfirm}\n                                                >\n                                                    <BiCalendarCheck />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerPlay}\n                                                >\n                                                    <MdPlayCircleOutline />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerStop}\n                                                    onClick={\n                                                        handleShowStopAttendanceModal\n                                                    }\n                                                >\n                                                    <BiStopCircle />\n                                                </Whisper>\n                                            </MenuContainer>\n                                        </Modal.Footer>\n                                    </Modal>\n                                </EventContainer>\n                            );\n                        },\n                    }}\n                    localizer={localizer}\n                    events={events}\n                    defaultView=\"day\"\n                    onSelectSlot={selectData => {\n                        handleShow();\n                        setEventData({\n                            ...eventData,\n                            end: new Date(selectData.start),\n                            start: new Date(selectData.start),\n                        });\n                    }}\n                    selectable\n                    popup\n                    resources={resources}\n                    date={date}\n                    defaultDate={new Date(2021, 4, 24)}\n                />\n            </CalendarContainer>\n            <Modal\n                show={showAttendanceModal}\n                onHide={handleCloseStopAttendanceModal}\n                overflow\n            >\n                <Modal.Header>\n                    <Modal.Title />\n                </Modal.Header>\n                <Modal.Body>\n                    <h1>fff</h1>\n                </Modal.Body>\n                <Modal.Footer />\n            </Modal>\n\n            {console.log(showAttendanceModal)}\n        </Container>\n    );\n};\n\nexport default Schedule;\n\n/* https://react-bootstrap.github.io/components/offcanvas/ */\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            > form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n","/* eslint-disable prettier/prettier */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport * as Yup from 'yup';\nimport { OptionTypeBase } from 'react-select';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddInputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n    const [showClientInput, setShowClientInput] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Nova entrada</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"treeFieldsgroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento*\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                onChange={(option: OptionTypeBase | null) => {\n                                   if(option && option.label === 'Voucher'){\n                                       setShowClientInput(true);\n                                   }else {\n                                       setShowClientInput(false);\n                                   }}}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Tipo de receita*\"\n                                name=\"tipoReceita\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <>\n                            {showClientInput && (\n                            <Select\n                                label=\"Nome do cliente\"\n                                name=\"nomeCliente\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            )}\n                        </>\n                        <div className=\"treeFieldsgroup\">\n                            <Select\n                                label=\"Tipo documento\"\n                                name=\"tipoDespesa\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={documentOptions[0]}\n                                options={documentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Input\n                                name=\"numeroDocumento\"\n                                label=\"Número do documento\"\n                            />\n                            <Select\n                                name=\"colaborador\"\n                                label=\"Colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={documentOptions[0]}\n                                options={documentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddInputs;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ClientList = styled.div``;\n\nexport const ClientListHeader = styled.li`\n    > h3 {\n        font-size: 16px;\n    }\n\n    border-bottom: 3px solid var(--primary-border-color);\n\n    list-style: none;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const SearchContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        > button {\n            > svg {\n                display: none;\n            }\n        }\n\n        > div {\n            > button {\n                > svg {\n                    display: none;\n                }\n            }\n        }\n    }\n\n    @media only screen and (max-width: 900px) {\n        > :last-child {\n            margin: 25px 0px;\n            padding: 0px;\n\n            > div {\n                > input {\n                    width: 100%;\n                }\n\n                > button {\n                    width: 40%;\n\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :first-child {\n                > button {\n                    width: 40px;\n\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        /* > :last-child {\n            align-items: center;\n            display: flex;\n            flex-direction: column-reverse;\n\n            > :first-child {\n                background-color: red;\n                width: 100%;\n                > button {\n                    align-self: flex-start;\n                    margin-top: 10px;\n                    width: 100%;\n                    font-size: 9px !important;\n                }\n            }\n\n            > :last-child {\n                width: 150%;\n            }\n        } */\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 260px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > div {\n        margin-top: 20px;\n        padding: 30px;\n        display: flex;\n        justify-content: space-between;\n\n        > div {\n            margin-left: 10px;\n            display: flex;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                margin-bottom: 10px;\n                border: 1px solid #eeee;\n                border-top-left-radius: 5px;\n                border-bottom-left-radius: 5px;\n            }\n\n            .searchButton {\n                border-top-left-radius: 0px;\n                border-bottom-left-radius: 0px;\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport AddInputs from './AddInputs';\nimport { Container, SearchContainer } from './styles';\n\nconst Inputs: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <SearchContainer>\n                <h1>Entradas, recebimentos e vouchers</h1>\n                <div>\n                    <AddInputs />\n                    <div>\n                        <input placeholder=\"Data, descrição ou valor\" />\n                        <button className=\"searchButton \" type=\"button\">\n                            <span>Pesquisar</span>\n                            <FaSearch />\n                        </button>\n                    </div>\n                </div>\n            </SearchContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Valor (R$)</th>\n                        <th>Forma de pagamento</th>\n                        <th>Descrição</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>250,00</td>\n                        <td>Cartão</td>\n                        <td>Dia de beleza</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>20,00</td>\n                        <td>Dinheiro</td>\n                        <td>Barba</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>80,00</td>\n                        <td>Cartão</td>\n                        <td>Corte e alisamento</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Inputs;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n","import React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Registro de saída</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"treeFieldsgroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento*\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Tipo de saída*\"\n                                name=\"tipoReceita\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ClientList = styled.div``;\n\nexport const ClientListHeader = styled.li`\n    > h3 {\n        font-size: 16px;\n    }\n\n    border-bottom: 3px solid var(--primary-border-color);\n\n    list-style: none;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const SearchContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        > button {\n            > svg {\n                display: none;\n            }\n        }\n\n        > div {\n            > button {\n                > svg {\n                    display: none;\n                }\n            }\n        }\n    }\n\n    @media only screen and (max-width: 900px) {\n        > :last-child {\n            margin: 25px 0px;\n            padding: 0px;\n\n            > div {\n                > input {\n                    width: 100%;\n                }\n\n                > button {\n                    width: 40%;\n\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n\n            > :first-child {\n                > button {\n                    width: 40px;\n\n                    > span {\n                        display: none;\n                    }\n                    > svg {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        /* > :last-child {\n            align-items: center;\n            display: flex;\n            flex-direction: column-reverse;\n\n            > :first-child {\n                background-color: red;\n                width: 100%;\n                > button {\n                    align-self: flex-start;\n                    margin-top: 10px;\n                    width: 100%;\n                    font-size: 9px !important;\n                }\n            }\n\n            > :last-child {\n                width: 150%;\n            }\n        } */\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 170px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > div {\n        margin-top: 20px;\n        padding: 30px;\n        display: flex;\n        justify-content: space-between;\n\n        > div {\n            margin-left: 10px;\n            display: flex;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                margin-bottom: 10px;\n                border: 1px solid #eeee;\n                border-top-left-radius: 5px;\n                border-bottom-left-radius: 5px;\n            }\n\n            .searchButton {\n                border-top-left-radius: 0px;\n                border-bottom-left-radius: 0px;\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport AddOutputs from './AddOutputs';\nimport { Container, SearchContainer } from './styles';\n\nconst Inputs: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <SearchContainer>\n                <h1>Saídas, retiradas e vales</h1>\n                <div>\n                    <AddOutputs />\n                    <div>\n                        <input placeholder=\"Data, descrição ou valor\" />\n                        <button className=\"searchButton \" type=\"button\">\n                            <span>Pesquisar</span>\n                            <FaSearch />\n                        </button>\n                    </div>\n                </div>\n            </SearchContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Valor (R$)</th>\n                        <th>Forma de pagamento</th>\n                        <th>Descrição</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>250,00</td>\n                        <td>Dinheiro</td>\n                        <td>Energia</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>1.500,00</td>\n                        <td>Dinheiro</td>\n                        <td>Aluguel</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>230,00</td>\n                        <td>Dinheiro</td>\n                        <td>Internet</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Inputs;\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Container = styled.div`\n    > :last-child {\n        width: 100%;\n        display: flex;\n        justify-content: flex-end;\n\n        > button {\n            margin-left: 10px;\n        }\n    }\n\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n        margin-bottom: 30px;\n    }\n\n    > p {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n        margin-bottom: 15px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > :nth-child(2) {\n        align-items: flex-end;\n        justify-content: flex-end;\n        flex-direction: column;\n        display: flex;\n        > p {\n            width: 320px;\n            text-align: center;\n        }\n        margin-bottom: 15px;\n        display: flex;\n    }\n\n    > :nth-child(3) {\n        display: flex;\n    }\n\n    > :nth-child(4) {\n        margin-top: 20px;\n        display: flex;\n    }\n\n    > :nth-child(5) {\n        margin-top: 20px;\n        display: flex;\n    }\n\n    /* > :nth-child(4) {\n        margin-top: 40px;\n        display: flex;\n        justify-content: space-between;\n        padding: 0px 25px;\n\n        > :first-child {\n            width: 70%;\n\n            > span {\n                font-weight: bold;\n                color: var(--secondary-text-color);\n                font-size: 16px;\n            }\n        }\n\n        > :last-child {\n            display: flex;\n            justify-content: center;\n        }\n    } */\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n\n            > tr > :last-child {\n                > div {\n                    display: flex;\n                    > svg {\n                        margin-right: 5px;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const PieChart = styled.div`\n    position: relative;\n    height: 320px;\n    width: 300px;\n    /*   padding: 10px;\n    height: 320px;\n    width: 300px;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    > div {\n        margin-bottom: 10px;\n        > span {\n            font-weight: bold;\n            color: var(--secondary-text-color);\n            font-size: 16px;\n        }\n    } */\n`;\n\nexport const BarChart = styled.div`\n    /*  background-color: red;\n    position: relative;\n    height: 125px;\n    padding: 10px;\n    width: 100%;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    > div {\n        margin-bottom: 10px;\n        > span {\n            font-weight: bold;\n            color: var(--secondary-text-color);\n            font-size: 16px;\n        }\n    } */\n`;\n\nexport const ChartsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    color: var(--secondary-text-color);\n    margin-top: 80px;\n    justify-content: center;\n    align-items: center;\n\n    @media only screen and (max-width: 1100px) {\n        flex-direction: column;\n\n        > :first-child {\n            width: 105%;\n            height: 100%;\n        }\n    }\n`;\n\nexport const CardsContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-evenly;\n    width: 100%;\n\n    > :nth-child(1),\n    > :nth-child(2),\n    > :nth-child(3) {\n    }\n\n    /* display: flex;\n    justify-content: space-evenly;\n    margin-top: 10px;\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    }\n\n    @media only screen and (max-width: 1100px) {\n        flex-direction: column;\n        display: flex;\n        align-items: center;\n    } */\n`;\n\nexport const CardsContainer2 = styled.div`\n    display: flex;\n\n    /* display: flex;\n    justify-content: space-evenly;\n    margin-top: 10px;\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    } */\n`;\n\nexport const Card = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 220px;\n    height: 90px;\n    margin: 10px;\n\n    > p {\n        color: #ffff;\n        height: 30%;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 5px;\n        margin-bottom: 0px;\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n        width: 100%;\n        background-color: var(--base-tertiary-color);\n    }\n\n    > div {\n        color: #ffff;\n        position: relative;\n        font-size: 20px;\n        height: 70%;\n        width: 100%;\n        display: flex;\n        background-color: ${lighten(0.05, '#FD5C0E')};\n        align-items: center;\n        font-weight: bold;\n        justify-content: center;\n        border-bottom-left-radius: 5px;\n        border-bottom-right-radius: 5px;\n\n        > p {\n            z-index: 1;\n            margin: 0px;\n        }\n\n        > svg {\n            position: absolute;\n            object-fit: cover;\n            margin-top: 15px;\n            height: 150px;\n            left: 130px;\n            width: 100px;\n            opacity: 0.4;\n        }\n    }\n`;\n\nexport const Card2 = styled(Card)`\n    > div {\n        > svg {\n            left: 70px;\n        }\n    }\n`;\n\nexport const Card3 = styled(Card)`\n    display: flex;\n    flex-direction: column;\n    width: 220px;\n    height: 150px;\n\n    > div {\n        font-size: 40px;\n\n        > svg {\n            height: 200px;\n            left: 90px;\n            width: 200px;\n        }\n    }\n`;\n\nexport const Section1 = styled.div`\n    width: 70%;\n\n    > span {\n        font-weight: bold;\n        color: var(--secondary-text-color);\n        font-size: 16px;\n    }\n    > :nth-child(2) {\n        display: flex;\n        justify-content: space-around;\n    }\n`;\n\nexport const Section2 = styled.div`\n    width: 30%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    > :last-child {\n        margin-top: 40px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-around;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport const Title = styled.p`\n    font-weight: bold;\n    color: var(--secondary-text-color);\n    font-size: 16px;\n    margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    display: flex;\n`;\n\nexport const ProductFormContainer = styled.div``;\n\nexport const ServiceFormContainer = styled.div``;\n\nexport const TotalValue = styled.div`\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-weight: bold;\n    width: 100%;\n    height: 50px;\n    background-color: #eee;\n`;\n\nexport const PendingValue = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-weight: bold;\n    width: 100%;\n    height: 50px;\n    background-color: #eee;\n    margin-bottom: 10px;\n`;\n\nexport const PaymentContainer = styled.div``;\n\nexport const CreateComandaForm = styled(Form)`\n    display: flex;\n    align-items: flex-end;\n    width: 100%;\n\n    > div {\n        width: 25%;\n    }\n\n    > :last-child {\n        margin: 5px;\n    }\n`;\n\nexport const ConfigurePaymentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    > :first-child {\n        display: flex;\n        align-items: center;\n\n        > div {\n            width: 50%;\n        }\n\n        > button {\n            width: 10%;\n            margin-bottom: -25px;\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n    }\n`;\n\nexport const FieldSet = styled.div`\n    border-bottom: 1px solid var(--primary-border-color);\n    font-weight: bold;\n    padding-bottom: 20px;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: var(--base-tertiary-color);\n`;\n\ninterface SectionButtonProps {\n    horizontalLine: boolean;\n}\n\nexport const AddComandaMenu = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n`;\n\nexport const SectionButton = styled.button.attrs<SectionButtonProps>(\n    ({ horizontalLine }) => ({\n        horizontalLine,\n    }),\n)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n\n    &:hover {\n        color: var(--base-tertiary-color);\n        background: none;\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\n/* export const CreateClientForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n\n    @media only screen and (max-width: 1000px) {\n        #group1 {\n            flex-direction: column-reverse;\n\n            > div {\n                width: 100% !important;\n            }\n\n            > :first-child {\n                > :last-child {\n                    > div {\n                        flex-direction: column;\n                        > div {\n                            width: 100% !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        #group2,\n        #group3 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n    @media only screen and (max-width: 1200px) {\n        #group4,\n        #group5,\n        #group6 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n\n    #group1 {\n        display: flex;\n\n        > :first-child {\n            width: 80%;\n\n            > :last-child {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n\n                > div {\n                    display: flex;\n                    > div {\n                        width: 50%;\n                    }\n                }\n            }\n        }\n\n        > :last-child {\n            width: 20%;\n            border-radius: 5px;\n        }\n    }\n\n    #group2,\n    #group4,\n    #group5,\n    #group6 {\n        display: flex;\n        > div {\n            width: 25%;\n        }\n    }\n\n    #group3 {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n`;\n*/\nexport const CreateComandaModal = styled(Modal)`\n    .modal-body {\n        table {\n            margin-top: 20px;\n            color: var(--primary-text-color);\n        }\n\n        > :nth-child(2) {\n            padding: 15px;\n        }\n    }\n`;\n","/* eslint-disable no-shadow */\n/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect, BaseSyntheticEvent } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport {\n    FaWhatsapp,\n    FaInstagram,\n    FaFacebook,\n    FaTwitter,\n    FaPlus,\n} from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport {\n    MdKeyboardArrowRight,\n    MdKeyboardArrowDown,\n    MdRemoveRedEye,\n} from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport ReactInputMask from 'react-input-mask';\nimport { OptionTypeBase } from 'react-select';\nimport FieldSet from '../../../../components/FieldSet';\nimport Input from '../../../../components/UnformFields/Input';\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport Select from '../../../../components/UnformFields/Select';\nimport Checkbox from '../../../../components/UnformFields/CheckBox';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../../utils/masks';\nimport {\n    Container,\n    CreateComandaModal,\n    CreateComandaForm,\n    SectionButton,\n    AddComandaMenu,\n    TotalValue,\n    PaymentContainer,\n    ConfigurePaymentForm,\n    PendingValue,\n    ProductFormContainer,\n    ServiceFormContainer,\n} from './styles';\nimport '../../../../styles/customreactselect.css';\nimport '../../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../../utils/dateUtils';\nimport apiClient from '../../../../services/apiClient';\n\nexport enum discountType {\n    'value',\n    'percentage',\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst professionalsList = [\n    { value: 1, label: 'Marcia' },\n    { value: 2, label: 'Sergio' },\n    { value: 3, label: 'Daniel' },\n];\n\nconst types = [\n    { value: 1, label: 'Produto' },\n    { value: 2, label: 'Serviço' },\n];\n\nconst paymentOptions = [\n    { value: 1, label: 'Cartão' },\n    { value: 2, label: 'Dinheiro' },\n    { value: 3, label: 'Voucher' },\n];\n\nconst servicesList = [\n    { value: 1, label: 'Hidratação' },\n    { value: 2, label: 'Cabelo' },\n    { value: 3, label: 'Manícure e pedícure' },\n];\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [currentForm, setCurrentForm] = useState<OptionTypeBase>({\n        value: 2,\n        label: 'Serviço',\n    });\n    const [showPaymentContainer, setShowPaymentContainer] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <MdRemoveRedEye onClick={handleShow} />\n            <CreateComandaModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <CreateComandaModal.Header>\n                    <CreateComandaModal.Title>\n                        <p>Detalhes da Comanda - Márcia Soares</p>\n                    </CreateComandaModal.Title>\n                </CreateComandaModal.Header>\n                <CreateComandaModal.Body>\n                    <PendingValue>\n                        <div>Pendente de pagamento:</div>\n                        <div>R$ 00,00</div>\n                    </PendingValue>\n                    <div>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Serviço/Produto</th>\n                                    <th>Profissional</th>\n                                    <th>Preço Unit.</th>\n                                    <th>Qtde</th>\n                                    <th>Desconto</th>\n                                    <th>Preço total</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>1</td>\n                                    <td>Hidratação</td>\n                                    <td>Marcela</td>\n                                    <td>R$ 50,00</td>\n                                    <td\n                                        contentEditable=\"true\"\n                                        onInput={(event: BaseSyntheticEvent) =>\n                                            console.log(event.target.innerText)\n                                        }\n                                    />\n                                    <td contentEditable=\"true\">R$ 10,00</td>\n                                    <td>R$ 40,00</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPaymentContainer(!showPaymentContainer)\n                            }\n                        >\n                            {showPaymentContainer\n                                ? 'Ocultar Pagamento'\n                                : 'Mostrar Pagamento'}\n                            {showPaymentContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPaymentContainer && (\n                            <PaymentContainer>\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th>Forma de pagamento </th>\n                                            <th>Valor (R$) </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Dinheiro</td>\n                                            <td>R$ 50,00</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Voucher</td>\n                                            <td>R$ 10,00</td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </PaymentContainer>\n                        )}\n                    </div>\n                    <TotalValue>\n                        <div>Valor da Comanda:</div>\n                        <div>R$ 60,00</div>\n                        <div>-</div>\n                        <div>Desconto:</div>\n                        <div>R$ 00,00</div>\n                        <div>=</div>\n                        <div>Total a pagar:</div>\n                        <div>R$ 60,00</div>\n                    </TotalValue>\n                </CreateComandaModal.Body>\n                <CreateComandaModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Voltar\n                    </button>\n                </CreateComandaModal.Footer>\n            </CreateComandaModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react';\nimport { Chart, Pie, Bar, Doughnut } from 'react-chartjs-2';\nimport { MdAttachMoney, MdTimeline, MdSystemUpdateAlt,MdSort, MdDelete } from 'react-icons/md';\nimport { VscFilePdf } from 'react-icons/vsc';\nimport { IoIosCalculator } from 'react-icons/io';\nimport DatePicker from 'react-datepicker';\nimport { Table } from 'react-bootstrap';\nimport Checkbox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    Section1,\n    Section2,\n    PieChart,\n    BarChart,\n    ChartsContainer,\n    CardsContainer,\n    CardsContainer2,\n    Card2,\n    Card3,\n    Card,\n    Title,\n} from './styles';\n\nimport ViewComandaModal from './ViewComanda';\n\n\nconst CashRegister: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n\n    const pieData = {\n        labels: ['Agendamentos concluídos', 'Agendamentos cancelados'],\n        datasets: [\n            {\n                label: '# of Votes',\n                data: [150, 20],\n                backgroundColor: ['#fd5c0e', '#fd8b53'],\n                borderColor: ['#fff', '#fff'],\n            },\n        ],\n    };\n\n    const barData = {\n        labels: [\n            'Hoje',\n        ],\n        /*  datasets: [\n            {\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n                barOptions: {},\n            },\n        ], */\n        datasets: [\n            {\n                label: 'Dinheiro',\n                data: [1800],\n                backgroundColor: '#fd5c0e',\n            },\n            {\n                label: 'Crédito',\n                data: [650],\n                backgroundColor: '#fd8b53',\n            },\n            {\n                label: 'Débito',\n                data: [350],\n                backgroundColor: '#fdab82',\n            },\n            {\n                label: 'PIX',\n                data: [650],\n                backgroundColor: '#fdc3a5',\n            },\n            {\n                label: 'Voucher',\n                data: [350],\n                backgroundColor: '#fddccb',\n            }\n\n        ],\n    };\n\n    const barOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n/*         barPercentage: 0.7,\n */        barThickness: 90,\n        scales: {\n            y: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n                ticks: {\n                    callback(value: string) {\n                        return `R$ ${value}`;\n                    },\n                    beginAtZero: true,\n                },\n            },\n            x: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n            },\n        },\n    };\n\n    const pieOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            /*  title: {\n                display: true,\n                text: 'Chart.js Horizontal Bar Chart',\n            }, */\n        },\n    };\n\n    return (\n        <Container>\n            <h1>Caixa do dia - Aberto</h1>\n            <div>\n                <Title>\n                    Data do caixa\n                </Title>\n                <DatePicker\n                    selected={date}\n                    onChange={(selecteDate: Date) =>\n                    selecteDate && setDate(selecteDate)}\n                />\n            </div>\n            <div>\n                <Section1>\n                    <Title>Movimentações (valores)</Title>\n                    <div>\n                        <Card2>\n                            <p>Dinheiro</p>\n                            <div>\n                                <p>R$ 250,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Crédito</p>\n                            <div>\n                                <p>R$ 1250,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Débito</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>PIX</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Voucher</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                    </div>\n                    <Title>\n                        Movimentações (proporção)\n                    </Title>\n                    <Bar type=\"\" data={barData} width={340} height={80} options={barOptions} />\n                    <Title>\n                        Comandas do dia\n                    </Title>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Número da comanda</th>\n                                <th>Cliente</th>\n                                <th>Status</th>\n                                <th>Valor Pago</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <Title>\n                        Entradas x Saídas\n                    </Title>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Valor (R$)</th>\n                                <th>Forma de pagamento</th>\n                                <th>Descrição</th>\n                                <th>Tipo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>250,00</td>\n                                <td>Cartão</td>\n                                <td>Dia de beleza</td>\n                                <td>Entrada</td>\n                            </tr>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>20,00</td>\n                                <td>Dinheiro</td>\n                                <td>Produto de limpeza</td>\n                                <td>Saída</td>\n                            </tr>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>80,00</td>\n                                <td>Cartão</td>\n                                <td>Corte e alisamento</td>\n                                <td>Entrada</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Section1>\n                <Section2>\n                    <Title>Agendamentos (concluídos x cancelados)</Title>\n                    <PieChart>\n                        <Doughnut\n                            height={100}\n                            width={100}\n                            type=\"\"\n                            data={pieData}\n                            options={pieOptions}\n                        />\n                    </PieChart>\n                    <div>\n                        <Title>Agendamentos (números)</Title>\n                        <Card3>\n                            <p>Total de agendamentos</p>\n                            <div>\n                                <p>25</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                        <Card3>\n                            <p>Agendamentos concluídos</p>\n                            <div>\n                                <p>20</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                        <Card3>\n                            <p>Agendamentos cancelados</p>\n                            <div>\n                                <p>5</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                    </div>\n                </Section2>\n            </div>\n            <div>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={()=> \"\"}\n                >\n                    Gerar relatório do dia\n                    {/*                     <IoIosCalculator /> */}\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={()=> \"\"}\n                >\n                    Fechar caixa\n                    {/*                     <IoIosCalculator /> */}\n                </button>\n            </div>\n        </Container>\n    );\n};\n\nexport default CashRegister;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    margin: 15px;\n    display: flex;\n    align-items: center;\n\n    input[type='checkbox'] {\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n        margin-right: 5px;\n        position: relative;\n        width: 16px;\n        height: 16px;\n        appearance: none;\n        cursor: pointer;\n\n        &::before {\n            position: absolute;\n            content: '';\n            top: 0px;\n            left: 4px;\n            width: 7px;\n            height: 12px;\n            border-style: solid;\n            border-color: white;\n            border-width: 0 2px 2px 0;\n            transform: rotate(45deg);\n        }\n\n        &:checked {\n            border: none;\n            background: var(--base-tertiary-color);\n        }\n    }\n\n    > label {\n        margin: 0px;\n        color: var(--primary-text-color);\n    }\n`;\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable no-shadow */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport { useEffect, useRef, InputHTMLAttributes, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n    value?: string;\n    onChangeCallback?: () => void;\n}\n\ntype InputProps = InputHTMLAttributes<HTMLInputElement> & Props;\n\nconst Checkbox: React.FC<InputProps> = ({\n    name,\n    value,\n    label,\n    onChangeCallback,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [checked, setChecked] = useState(false);\n    const { fieldName, defaultValue, registerField, error } = useField(name);\n\n    const defaultChecked = defaultValue === value;\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef,\n            getValue: ref => {\n                return ref.current.checked;\n            },\n            clearValue: ref => {\n                ref.current.checked = defaultChecked;\n            },\n            setValue: (ref, value) => {\n                ref.current.checked = value;\n            },\n        });\n    }, [defaultValue, fieldName, registerField, defaultChecked]);\n\n    return (\n        <Container>\n            <input\n                defaultChecked={defaultChecked}\n                ref={inputRef}\n                value={value}\n                type=\"checkbox\"\n                checked={checked}\n                onChange={() => {\n                    if (onChangeCallback) {\n                        onChangeCallback();\n                    }\n\n                    setChecked(!checked);\n                }}\n                id={fieldName}\n                {...rest}\n            />\n\n            <label htmlFor={fieldName} key={fieldName}>\n                {label}\n            </label>\n\n            {error && <span>{error}</span>}\n        </Container>\n    );\n};\n\nexport default Checkbox;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    display: flex;\n`;\n\nexport const ProductFormContainer = styled.div``;\n\nexport const ServiceFormContainer = styled.div``;\n\nexport const TotalValue = styled.div`\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-weight: bold;\n    width: 100%;\n    height: 50px;\n    background-color: #eee;\n`;\n\nexport const PendingValue = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-weight: bold;\n    width: 100%;\n    height: 50px;\n    background-color: #eee;\n    margin-bottom: 10px;\n`;\n\nexport const PaymentContainer = styled.div``;\n\nexport const CreateComandaForm = styled(Form)`\n    display: flex;\n    align-items: flex-end;\n    width: 100%;\n\n    @media only screen and (max-width: 768px) {\n        flex-direction: column;\n\n        > div {\n            width: 100% !important;\n        }\n    }\n\n    > div {\n        width: 25%;\n    }\n\n    > :last-child {\n        margin: 5px;\n    }\n`;\n\nexport const CustomInput = styled.div`\n    > label {\n        font-weight: bold;\n    }\n`;\n\nexport const ConfigurePaymentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    > :first-child {\n        display: flex;\n        align-items: center;\n\n        > div {\n            width: 50%;\n        }\n\n        > button {\n            width: 10%;\n            margin-bottom: -25px;\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        > :last-child {\n            > :nth-child(2) {\n                display: flex;\n                flex-direction: column;\n                > div {\n                    display: flex;\n                    > :first-child {\n                        width: 25%;\n                    }\n                }\n            }\n\n            /*  > :first-child {\n            width: 30%;\n        }\n\n        > :last-child {\n            width: 70%;\n            display: flex; */\n\n            /*  > :nth-child(2) {\n                display: flex;\n\n                > :first-child {\n                    width: 30%;\n                }\n                > :last-child {\n                    width: 70%;\n                }\n            }\n\n            > :last-child {\n                display: flex;\n            } */\n        }\n    }\n`;\n\nexport const FieldSet = styled.div`\n    border-bottom: 1px solid var(--primary-border-color);\n    font-weight: bold;\n    padding-bottom: 20px;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: var(--base-tertiary-color);\n`;\n\ninterface SectionButtonProps {\n    horizontalLine: boolean;\n}\n\nexport const AddComandaMenu = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n`;\n\nexport const SectionButton = styled.button.attrs<SectionButtonProps>(\n    ({ horizontalLine }) => ({\n        horizontalLine,\n    }),\n)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n\n    &:hover {\n        color: var(--base-tertiary-color);\n        background: none;\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\n/* export const CreateClientForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n\n    @media only screen and (max-width: 1000px) {\n        #group1 {\n            flex-direction: column-reverse;\n\n            > div {\n                width: 100% !important;\n            }\n\n            > :first-child {\n                > :last-child {\n                    > div {\n                        flex-direction: column;\n                        > div {\n                            width: 100% !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        #group2,\n        #group3 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n    @media only screen and (max-width: 1200px) {\n        #group4,\n        #group5,\n        #group6 {\n            flex-direction: column;\n            > div {\n                width: 100% !important;\n            }\n        }\n    }\n\n    #group1 {\n        display: flex;\n\n        > :first-child {\n            width: 80%;\n\n            > :last-child {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n\n                > div {\n                    display: flex;\n                    > div {\n                        width: 50%;\n                    }\n                }\n            }\n        }\n\n        > :last-child {\n            width: 20%;\n            border-radius: 5px;\n        }\n    }\n\n    #group2,\n    #group4,\n    #group5,\n    #group6 {\n        display: flex;\n        > div {\n            width: 25%;\n        }\n    }\n\n    #group3 {\n        display: flex;\n        > div {\n            width: 33.3%;\n        }\n    }\n`;\n*/\nexport const CreateComandaModal = styled(Modal)`\n    .modal-body {\n        table {\n            margin-top: 20px;\n            color: var(--primary-text-color);\n        }\n\n        > :nth-child(2) {\n            padding: 15px;\n        }\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-shadow */\n/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect, BaseSyntheticEvent } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport {\n    FaWhatsapp,\n    FaInstagram,\n    FaFacebook,\n    FaTwitter,\n    FaPlus,\n} from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport {\n    MdKeyboardArrowRight,\n    MdKeyboardArrowDown,\n    MdRemoveRedEye,\n} from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport ReactInputMask from 'react-input-mask';\nimport { OptionTypeBase } from 'react-select';\nimport FieldSet from '../../../../components/FieldSet';\nimport Input from '../../../../components/UnformFields/Input';\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport Select from '../../../../components/UnformFields/Select';\nimport Checkbox from '../../../../components/UnformFields/CheckBox';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../../utils/masks';\nimport {\n    Container,\n    CreateComandaModal,\n    CreateComandaForm,\n    SectionButton,\n    AddComandaMenu,\n    TotalValue,\n    PaymentContainer,\n    ConfigurePaymentForm,\n    PendingValue,\n    ProductFormContainer,\n    ServiceFormContainer,\n    CustomInput,\n} from './styles';\nimport '../../../../styles/customreactselect.css';\nimport '../../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../../utils/dateUtils';\nimport apiClient from '../../../../services/apiClient';\n\nexport enum discountType {\n    'value',\n    'percentage',\n}\n\ninterface ICreateComandaProps {\n    saveComanda: (comanda: IFormData) => void;\n}\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst professionalsList = [\n    { value: 1, label: 'Marcia' },\n    { value: 2, label: 'Sergio' },\n    { value: 3, label: 'Daniel' },\n];\n\nconst types = [\n    { value: 1, label: 'Produto' },\n    { value: 2, label: 'Serviço' },\n];\n\nconst discountTypes = [\n    { value: 1, label: 'R$' },\n    { value: 2, label: '%' },\n];\n\nconst paymentOptions = [\n    { value: 1, label: 'Cartão' },\n    { value: 2, label: 'Dinheiro' },\n    { value: 3, label: 'Voucher' },\n];\n\nconst servicesList = [\n    { value: 1, label: 'Hidratação' },\n    { value: 2, label: 'Cabelo' },\n    { value: 3, label: 'Manícure e pedícure' },\n];\n\nconst CreateClient: React.FC<ICreateComandaProps> = ({ saveComanda }) => {\n    const [show, setShow] = useState(false);\n    const [currentForm, setCurrentForm] = useState<OptionTypeBase>({\n        value: 2,\n        label: 'Serviço',\n    });\n    const [showPaymentContainer, setShowPaymentContainer] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [discountType, setDiscountType] = useState<OptionTypeBase>(\n        discountTypes[1],\n    );\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.target);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        console.log(data);\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                nome: Yup.string().required('O nome é obrigatório!'),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                porcentagemDescontoServicos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                porcentagemDescontoProdutos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n            saveComanda(data);\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <MdRemoveRedEye onClick={handleShow} />\n            <CreateComandaModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <CreateComandaModal.Header>\n                    <CreateComandaModal.Title>\n                        <p>Detalhes da Comanda - Márcia Soares</p>\n                    </CreateComandaModal.Title>\n                </CreateComandaModal.Header>\n                <CreateComandaModal.Body>\n                    <PendingValue>\n                        <div>Pendente de pagamento:</div>\n                        <div>R$ 00,00</div>\n                    </PendingValue>\n                    <div>\n                        {' '}\n                        <AddComandaMenu>\n                            <CreateComandaForm onSubmit={() => ''} id=\"form\">\n                                <Select\n                                    label=\"Tipo\"\n                                    name=\"type\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={types[2]}\n                                    options={types}\n                                    onChange={value =>\n                                        value && setCurrentForm(value)\n                                    }\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                                {currentForm.value === 1 ? (\n                                    <>\n                                        <Select\n                                            label=\"Produto\"\n                                            name=\"servico\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            options={servicesList}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            label=\"Profissional\"\n                                            name=\"profissional\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            options={professionalsList}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Input\n                                            textTransform=\"lowercase\"\n                                            name=\"qtd\"\n                                            label=\"Quantidade\"\n                                        />\n                                        <MaskedInput\n                                            label=\"Valor unitário (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                        <MaskedInput\n                                            label=\"Desconto (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                    </>\n                                ) : (\n                                    <>\n                                        <Select\n                                            label=\"Serviço\"\n                                            name=\"servico\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            options={servicesList}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            label=\"Profissional\"\n                                            name=\"profissional\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            options={professionalsList}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <MaskedInput\n                                            label=\"Valor unitário (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                    </>\n                                )}\n                                <button\n                                    className=\"fibre-button fibre-button--cancel\"\n                                    type=\"button\"\n                                >\n                                    Incluir item\n                                </button>\n                            </CreateComandaForm>\n                        </AddComandaMenu>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Serviço/Produto</th>\n                                    <th>Profissional</th>\n                                    <th>Preço Unit.</th>\n                                    <th>Qtde</th>\n                                    <th>Desconto</th>\n                                    <th>Preço total</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>1</td>\n                                    <td>Hidratação</td>\n                                    <td>Marcela</td>\n                                    <td>R$ 50,00</td>\n                                    <td\n                                        contentEditable=\"true\"\n                                        onInput={(event: BaseSyntheticEvent) =>\n                                            console.log(event.target.innerText)\n                                        }\n                                    />\n                                    <td contentEditable=\"true\">R$ 10,00</td>\n                                    <td>R$ 40,00</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPaymentContainer(!showPaymentContainer)\n                            }\n                        >\n                            {showPaymentContainer\n                                ? 'Ocultar Pagamento'\n                                : 'Mostrar Pagamento'}\n                            {showPaymentContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPaymentContainer && (\n                            <PaymentContainer>\n                                <ConfigurePaymentForm\n                                    onSubmit={() => ''}\n                                    id=\"form2\"\n                                >\n                                    <div>\n                                        <Select\n                                            label=\"Forma de pagamento\"\n                                            name=\"type\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={paymentOptions[1]}\n                                            options={paymentOptions}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <MaskedInput\n                                            label=\"Valor (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                        <button type=\"button\">\n                                            <FaPlus />\n                                        </button>\n                                    </div>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th>Forma de pagamento </th>\n                                                <th>Valor (R$) </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>Dinheiro</td>\n                                                <td>R$ 50,00</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Voucher</td>\n                                                <td>R$ 10,00</td>\n                                            </tr>\n                                        </tbody>\n                                    </Table>\n                                    <div>\n                                        <div>\n                                            <Checkbox\n                                                name=\"possibilitaEncaixe\"\n                                                label=\"Gerar Nota Fiscal\"\n                                            />\n                                            <Checkbox\n                                                name=\"possibilitaEncaixe\"\n                                                label=\"Guardar troco como crédito\"\n                                            />\n                                        </div>\n                                        <div>\n                                            <CustomInput>\n                                                <label>Valor da comanda</label>\n                                                <Input\n                                                    textTransform=\"lowercase\"\n                                                    name=\"qtd\"\n                                                    value=\"50,00\"\n                                                    disabled\n                                                />\n                                            </CustomInput>\n                                            <CustomInput>\n                                                <label> (-) Desconto</label>\n                                                <div>\n                                                    <Select\n                                                        name=\"discountType\"\n                                                        classNamePrefix=\"react-select\"\n                                                        defaultValue={\n                                                            discountTypes[1]\n                                                        }\n                                                        options={discountTypes}\n                                                        blurInputOnSelect\n                                                        openMenuOnFocus\n                                                        onChange={option => {\n                                                            option &&\n                                                                setDiscountType(\n                                                                    option,\n                                                                );\n                                                        }}\n                                                    />\n                                                    <MaskedInput\n                                                        mask={\n                                                            discountType.value ===\n                                                            1\n                                                                ? 'R$ 9.99'\n                                                                : '%99'\n                                                        }\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                            </CustomInput>\n                                            <label>(=) Total a pagar</label>\n                                            <Input\n                                                textTransform=\"lowercase\"\n                                                name=\"qtd\"\n                                                value=\"50,00\"\n                                                disabled\n                                            />\n                                            <label>Troco</label>\n                                            <Input\n                                                textTransform=\"lowercase\"\n                                                name=\"qtd\"\n                                                value=\"50,00\"\n                                                disabled\n                                            />\n                                        </div>\n                                    </div>\n                                </ConfigurePaymentForm>\n                            </PaymentContainer>\n                        )}\n                    </div>\n                    {/* <TotalValue>\n                        <div>Valor da Comanda:</div>\n                        <div>R$ 60,00</div>\n                        <div>-</div>\n                        <div>Desconto:</div>\n                        <div>R$ 00,00</div>\n                        <div>=</div>\n                        <div>Total a pagar:</div>\n                        <div>R$ 60,00</div>\n                    </TotalValue> */}\n                </CreateComandaModal.Body>\n                <CreateComandaModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Voltar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Fechar comanda\n                    </button>\n                </CreateComandaModal.Footer>\n            </CreateComandaModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n\n            > tr > :last-child {\n                > div {\n                    display: flex;\n                    > svg {\n                        margin-left: 5px;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const ComandaHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        line-height: 22px !important;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n\nexport const CreateComandaForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding: 35px;\n`;\n\nexport const AddComandaMenu = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n`;\n","/* eslint-disable prettier/prettier */\nimport React, { useRef, useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport DatePicker from 'react-datepicker';\nimport { MdInsertDriveFile, MdDelete, MdRemoveRedEye } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport AddComandaModal, { IFormData } from './CreateComanda';\n\n/* import AddComandaModal from './CreateComanda';\n */ import Select from '../../../components/UnformFields/Select';\nimport Input from '../../../components/UnformFields/Input';\nimport {\n    Container,\n    ComandaHeaderContainer,\n    CreateComandaForm,\n    AddComandaMenu,\n} from './styles';\n\nconst professionalsList = [\n    { value: 1, label: 'Marcia' },\n    { value: 2, label: 'Sergio' },\n    { value: 3, label: 'Daniel' },\n];\n\nconst servicesList = [\n    { value: 1, label: 'Hidratação' },\n    { value: 2, label: 'Cabelo' },\n    { value: 3, label: 'Manícure e pedícure' },\n];\n\nconst Comandas: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [date, setDate] = useState(new Date());\n    const handleCreateComandaSubmit: SubmitHandler<IFormData> = async data =>\n        '';\n    const [comandasList, setComandasList] = useState<Array<IFormData> | null>(\n        null,\n    );\n\n    return (\n        <Container>\n            <ComandaHeaderContainer>\n                <h1>Comandas do dia</h1>\n                <div>\n                    <DatePicker\n                        selected={date}\n                        onChange={(selectedDate: Date) =>\n                            selectedDate && setDate(selectedDate)}\n                    />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar comanda\" />\n                    </div>\n                </div>\n            </ComandaHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Número da comanda</th>\n                        <th>Cliente</th>\n                        <th>Profissional</th>\n                        <th>Valor Pago</th>\n                        <th>Ação</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n\n            {/*        <CreateComandaForm onSubmit={() => ''} id=\"form\">\n                <AddComandaMenu>\n                    <Select\n                        label=\"Serviço\"\n                        name=\"servico\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={{\n                            label: 'Selecione',\n                            value: 0,\n                        }}\n                        options={professionalsList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Select\n                        label=\"Profissional\"\n                        name=\"profissional\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={{\n                            label: 'Selecione',\n                            value: 0,\n                        }}\n                        options={servicesList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Input name=\"valor\" label=\"Valor unitário\" />\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                    >\n                        Adicionar\n                    </button>\n                </AddComandaMenu>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Serviço/Produto</th>\n                            <th>Profissional</th>\n                            <th>Preço Unit.</th>\n                            <th>Desconto</th>\n                            <th>Preço total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Hidratação</td>\n                            <td>Marcia</td>\n                            <td>R$ 50,00</td>\n                            <th>R$ 25,00</th>\n                            <th>R$ 25,00</th>\n                        </tr>\n                        <tr>\n                            <td>Corte</td>\n                            <td>Helena</td>\n                            <td>R$ 50,00</td>\n                            <th>R$ 25,00</th>\n                            <th>R$ 25,00</th>\n                        </tr>\n                    </tbody>\n                </Table>\n            </CreateComandaForm> */}\n        </Container>\n    );\n};\nexport default Comandas;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n","import React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Novo pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"twoFieldsGroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <DatePicker\n                                label=\"Data de vencimento\"\n                                name=\"dataDeVencimento\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    display: flex;\n`;\n\nexport const CreateComandaModal = styled(Modal)`\n    .modal-body {\n        padding: 20px 20px 0px 20px;\n    }\n\n    .modal-90w {\n        max-width: 400px;\n    }\n`;\n","import React, { useState } from 'react';\nimport { MdDelete } from 'react-icons/md';\nimport { Container, CreateComandaModal } from './styles';\nimport '../../../../styles/customreactselect.css';\nimport '../../../../styles/customreactdatepicker.css';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <MdDelete onClick={handleShow} />\n            <CreateComandaModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <CreateComandaModal.Header>\n                    <CreateComandaModal.Title>\n                        <p>Confirmação de exclusão</p>\n                    </CreateComandaModal.Title>\n                </CreateComandaModal.Header>\n                <CreateComandaModal.Body>\n                    <strong>Tem certeza?</strong>\n                    <p>Essa ação não pode ser revertida.</p>\n                </CreateComandaModal.Body>\n                <CreateComandaModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Voltar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </CreateComandaModal.Footer>\n            </CreateComandaModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const SectionButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    background: none;\n    color: var(--primary-text-color);\n\n    &:hover {\n        color: var(--base-tertiary-color);\n        background: none;\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\nexport const PaymentContainer = styled.div`\n    > :nth-child(3) {\n        font-weight: bold;\n        margin-bottom: 10px;\n        margin-top: 10px;\n    }\n`;\n\nexport const ConfigurePaymentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    table {\n        color: var(--primary-text-color);\n    }\n\n    > :first-child {\n        display: flex;\n        align-items: center;\n\n        > div {\n            width: 50%;\n        }\n\n        > button {\n            width: 10%;\n            margin-bottom: -25px;\n        }\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport {\n    MdEdit,\n    MdKeyboardArrowDown,\n    MdKeyboardArrowRight,\n} from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    SectionButton,\n    PaymentContainer,\n    ConfigurePaymentForm,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n    const [showPaymentContainer, setShowPaymentContainer] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <MdEdit onClick={handleShow} />\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Editar pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"twoFieldsGroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <DatePicker\n                                label=\"Data de vencimento\"\n                                name=\"dataDeVencimento\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPaymentContainer(!showPaymentContainer)\n                            }\n                        >\n                            {showPaymentContainer\n                                ? 'Ocultar Quitação'\n                                : 'Mostrar Quitação'}\n                            {showPaymentContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPaymentContainer && (\n                            <PaymentContainer>\n                                <div className=\"twoFieldsGroup\">\n                                    <Input\n                                        label=\"Valor pago\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"50,00\"\n                                    />\n                                    <Input\n                                        label=\"Valor pendente\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"10,00\"\n                                    />\n                                    <Input\n                                        label=\"Juros\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"10,00\"\n                                    />\n                                </div>\n                                <div className=\"twoFieldsGroup\">\n                                    <Input\n                                        label=\"Desconto\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"50,00\"\n                                    />\n                                    <DatePicker\n                                        label=\"Data de quitação\"\n                                        name=\"dataDeVencimento\"\n                                        value=\"10/06/2021\"\n                                    />\n                                </div>\n                                <div>Inserir pagamento</div>\n                                <ConfigurePaymentForm\n                                    onSubmit={() => ''}\n                                    id=\"form2\"\n                                >\n                                    <div>\n                                        <Select\n                                            label=\"Forma de pagamento\"\n                                            name=\"type\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={paymentOptions[1]}\n                                            options={paymentOptions}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <MaskedInput\n                                            label=\"Valor (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                        <button type=\"button\">\n                                            <FaPlus />\n                                        </button>\n                                    </div>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th>Forma de pagamento </th>\n                                                <th>Valor (R$) </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>Dinheiro</td>\n                                                <td>R$ 50,00</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Voucher</td>\n                                                <td>R$ 10,00</td>\n                                            </tr>\n                                        </tbody>\n                                    </Table>\n                                </ConfigurePaymentForm>\n                            </PaymentContainer>\n                        )}\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n    display: flex;\n    flex-direction: column;\n\n    > :nth-child(3) {\n        margin-top: 20px;\n        > :first-child {\n            padding: 0px;\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n    }\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n\n            > tr > :last-child {\n                > div {\n                    display: flex;\n                    > svg {\n                        margin-left: 5px;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const PayableResume = styled.div`\n    border-top: 1px solid var(--primary-border-color);\n    background: var(--primary-border-color);\n    padding: 20px;\n    margin: -30px;\n`;\n\nexport const ResumeItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const PaymentHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > :nth-child(2) {\n        padding: 0px;\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            display: flex;\n\n            > :first-child {\n                margin-right: 20px;\n                display: flex;\n                align-items: center;\n\n                > strong {\n                    margin-right: 10px;\n                }\n\n                > div {\n                    width: 105px;\n                }\n            }\n\n            > :nth-child(2) {\n                display: flex;\n\n                > strong {\n                    margin-right: 10px;\n                    margin-left: 10px;\n                }\n            }\n\n            > :last-child {\n                position: relative;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n\n                > input {\n                    height: 35px;\n                    padding: 10px;\n                    border-radius: 15px;\n                    border: 1px solid #eeee;\n                    padding-left: 40px;\n\n                    &:focus {\n                        border-color: var(--base-tertiary-color);\n                    }\n                }\n\n                > svg {\n                    color: var(--base-tertiary-color);\n                    width: 13px;\n                    height: 13px;\n                    left: 15px;\n                    position: absolute;\n                    z-index: 1;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete, MdEdit } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport FieldSet from '../../../components/FieldSet';\nimport AddOutputs from './AddOutputs';\nimport PaymentDelete from './PaymentDelete';\nimport PaymentEdit from './EditOutputs';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    PayableResume,\n    ResumeItem,\n    PaymentHeaderContainer,\n} from './styles';\n\ninterface IPayment {\n    date: string;\n    credor: string;\n    valor: string;\n    descricao: string;\n    status: 'Pago' | 'Pendente' | 'Em atraso' | 'Parcial';\n}\n\nconst searchTypeOptions = [\n    { value: 1, label: 'Termo' },\n    { value: 2, label: 'Período' },\n];\n\nconst Inputs: React.FC = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [paymentSearchTerm, setPaymentSearchTerm] = useState<string | null>(\n        null,\n    );\n    const [searchType, setSearchType] = useState(searchTypeOptions[0]);\n    const [paymentsList, setPaymentsList] = useState<Array<IPayment>>([\n        {\n            date: '06/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Energia',\n            status: 'Pago',\n        },\n        {\n            date: '06/08/2021',\n            credor: 'SANEAGO',\n            valor: '250,00',\n            descricao: 'Água',\n            status: 'Pendente',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Em atraso',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Parcial',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Parcial',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PaymentHeaderContainer>\n                <h1>Contas a pagar</h1>\n                <div>\n                    <AddOutputs />\n                    <div>\n                        <div>\n                            <strong>Pesquisar por:</strong>\n                            <Select\n                                label=\"Tipo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={searchTypeOptions[0]}\n                                options={searchTypeOptions}\n                                onChange={value =>\n                                    value && setSearchType(value)\n                                }\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        {searchType.value === 1 ? (\n                            <div>\n                                <FaSearch />\n                                <input\n                                    placeholder=\"Data, descrição ou credor\"\n                                    onChange={event =>\n                                        setPaymentSearchTerm(event.target.value)\n                                    }\n                                />\n                            </div>\n                        ) : (\n                            <div>\n                                <strong>Inicio:</strong>\n                                <DatePicker\n                                    selected={startDate}\n                                    onChange={(selectedDate: Date) =>\n                                        selectedDate &&\n                                        setStartDate(selectedDate)\n                                    }\n                                />\n                                <strong>Fim:</strong>\n                                <DatePicker\n                                    selected={endDate}\n                                    onChange={(selectedDate: Date) =>\n                                        selectedDate && setEndDate(selectedDate)\n                                    }\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </PaymentHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data do vencimento</th>\n                        <th>Credor</th>\n                        <th>Valor (R$)</th>\n                        <th>Descrição</th>\n                        <th>Status</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {paymentSearchTerm !== null && paymentSearchTerm !== ''\n                        ? paymentsList\n                              .filter(payment => {\n                                  return Object.values(payment).some(value =>\n                                      value\n                                          .toLocaleUpperCase()\n                                          .startsWith(\n                                              paymentSearchTerm.toLocaleUpperCase(),\n                                          ),\n                                  );\n                              })\n                              .map((payment, index) => (\n                                  <tr>\n                                      <td>{payment.date}</td>\n                                      <td>{payment.credor}</td>\n                                      <td>{payment.valor}</td>\n                                      <td>{payment.descricao}</td>\n                                      <th>{payment.status}</th>\n                                      <td>\n                                          {/* <MdDelete\n                                                  onClick={() => {\n                                                      setPaymentsList(\n                                                          paymentsList.filter(\n                                                              (\n                                                                  _,\n                                                                  clientIndex,\n                                                              ) =>\n                                                                  clientIndex !==\n                                                                  index,\n                                                          ),\n                                                      );\n                                                  }}\n                                              /> */}\n                                      </td>\n                                  </tr>\n                              ))\n                        : paymentsList.map((payment, index) => (\n                              <tr>\n                                  <td>{payment.date}</td>\n                                  <td>{payment.credor}</td>\n                                  <td>{payment.valor}</td>\n                                  <td>{payment.descricao}</td>\n                                  <th>{payment.status}</th>\n                                  <td>\n                                      <div>\n                                          {' '}\n                                          {/*    <MdDelete\n                                              onClick={() => {\n                                                  setPaymentsList(\n                                                      paymentsList.filter(\n                                                          (_, clientIndex) =>\n                                                              clientIndex !==\n                                                              index,\n                                                      ),\n                                                  );\n                                              }}\n                                          /> */}\n                                          <PaymentDelete />\n                                          <PaymentEdit />\n                                      </div>\n                                  </td>\n                              </tr>\n                          ))}\n                </tbody>\n            </Table>\n            {/*  <PayableResume>\n                <ResumeItem>\n                    <strong>Pagas (R$):</strong>\n                    <p>2.502,95</p>\n                    <strong>A Pagar (R$):</strong>\n                    <p>1.500,00</p>\n                    <strong>Vencidas (R$):</strong>\n                    <p>500,00</p>\n                </ResumeItem>\n            </PayableResume> */}\n        </Container>\n    );\n};\n\nexport default Inputs;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 10%;\n            }\n        }\n\n        > tbody > tr {\n            > :first-child {\n                > form > div {\n                    margin: 0px;\n                }\n            }\n        }\n    }\n`;\n\nexport const CommissionHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n        color: var(--primary-text-color);\n\n        > :first-child {\n            > strong {\n                margin-right: 10px;\n            }\n        }\n\n        > :last-child {\n            display: flex;\n\n            > :first-child {\n                margin-right: 20px;\n                display: flex;\n                align-items: center;\n\n                > strong {\n                    margin-right: 10px;\n                }\n\n                > div {\n                    width: 105px;\n                }\n            }\n\n            > :last-child {\n                position: relative;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n\n                > input {\n                    height: 35px;\n                    padding: 10px;\n                    border-radius: 15px;\n                    border: 1px solid #eeee;\n                    padding-left: 40px;\n\n                    &:focus {\n                        border-color: var(--base-tertiary-color);\n                    }\n                }\n\n                > svg {\n                    color: var(--base-tertiary-color);\n                    width: 13px;\n                    height: 13px;\n                    left: 15px;\n                    position: absolute;\n                    z-index: 1;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n\nexport const GroupSelectContainer = styled.div`\n    > div {\n        width: 240px;\n    }\n`;\nexport const CheckBoxContainer = styled(Form)``;\n\nexport const CommissionPaymentForm = styled(Form)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    > :first-child {\n        color: var(--primary-text-color);\n        margin: 10px;\n        > strong {\n            margin-right: 10px;\n        }\n    }\n`;\n\nexport const CommissionPaymentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    > :first-child {\n        width: 230px;\n    }\n`;\n\nexport const RescissionPaymentForm = styled(Form)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    > :first-child {\n        color: var(--primary-text-color);\n        margin: 10px;\n        > strong {\n            margin-right: 10px;\n        }\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport compareAsc from 'date-fns/compareAsc';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    CommissionHeaderContainer,\n    GroupSelectContainer,\n    CheckBoxContainer,\n    CommissionPaymentContainer,\n    CommissionPaymentForm,\n    RescissionPaymentForm,\n} from './styles';\n\nconst filterOptions = [\n    { value: 1, label: 'individual' },\n    { value: 2, label: 'grupo' },\n];\n\nconst ComissionOptions = [\n    { value: 1, label: 'Processar Comissão' },\n    { value: 2, label: 'Processar Rescisão' },\n];\n\ninterface IArtistComission {\n    nome: string;\n    valorDisponivel: string;\n    valorBloqueado: string;\n    valorTotal: string;\n}\n\nconst artistsGroup = [\n    { value: 1, label: 'Diário' },\n    { value: 2, label: 'Semanal' },\n    { value: 3, label: 'Quinzenal' },\n    { value: 4, label: 'Mensal' },\n];\n\nconst Comissões: React.FC = () => {\n    const [endDate, setEndDate] = useState(new Date());\n    const [paymentDate, setPaymentDate] = useState(new Date());\n    const [showPaymentButton, setShowPaymentButton] = useState(false);\n    const [filterType, setFilterType] = useState(filterOptions[0]);\n    const [selectedArtists, setSelectedArtists] = useState<\n        Array<IArtistComission>\n    >([]);\n    const [currentForm, setCurrentForm] = useState<OptionTypeBase>(\n        ComissionOptions[0],\n    );\n    const [artistsList, setArtistsList] = useState<Array<IArtistComission>>([\n        {\n            nome: 'Fulano1',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano2',\n            valorDisponivel: '580',\n            valorBloqueado: '150',\n            valorTotal: '600',\n        },\n        {\n            nome: 'Fulano3',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano4',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano5',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n    ]);\n\n    return (\n        <Container>\n            <CommissionHeaderContainer>\n                <h1>Comissões</h1>\n                <div>\n                    <div>\n                        <strong>Data limite:</strong>\n                        <DatePicker\n                            selected={endDate}\n                            onChange={(selectedDate: Date) =>\n                                // eslint-disable-next-line prettier/prettier\n                                selectedDate && setEndDate(selectedDate)}\n                        />\n                    </div>\n                    <div>\n                        <div>\n                            <strong>Filtrar artistas por:</strong>\n                            <Select\n                                label=\"Tipo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={filterOptions[0]}\n                                options={filterOptions}\n                                onChange={value =>\n                                    value && setCurrentForm(value)\n                                }\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        {filterType.value === 1 ? (\n                            <div>\n                                <FaSearch />\n                                <input placeholder=\"Artista\" />\n                            </div>\n                        ) : (\n                            <GroupSelectContainer>\n                                <Select\n                                    label=\"Tipo\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={artistsGroup[0]}\n                                    options={artistsGroup}\n                                    /* onChange={value =>\n                                    value && setSearchType(value)\n                                } */\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                            </GroupSelectContainer>\n                        )}\n                    </div>\n                </div>\n            </CommissionHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>\n                            <div />\n                        </th>\n                        <th>Artista</th>\n                        <th>Valor Disponível (R$)</th>\n                        <th>Valor Bloqueado (R$)</th>\n                        <th>Valor Total (R$)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {artistsList.map((artist, index) => (\n                        <tr>\n                            <td>\n                                <CheckBoxContainer onSubmit={() => ''}>\n                                    <CheckBox\n                                        name=\"SS\"\n                                        onChangeCallback={() => {\n                                            if (\n                                                selectedArtists.includes(artist)\n                                            ) {\n                                                const updatedArtistList = selectedArtists.filter(\n                                                    (_, artistIndex) =>\n                                                        artistIndex !== index,\n                                                );\n\n                                                setSelectedArtists(\n                                                    updatedArtistList,\n                                                );\n                                            } else {\n                                                setSelectedArtists([\n                                                    ...selectedArtists,\n                                                    artist,\n                                                ]);\n                                            }\n                                        }}\n                                    />\n                                </CheckBoxContainer>\n                            </td>\n                            <td>{artist?.nome}</td>\n                            <td>{artist?.valorDisponivel}</td>\n                            <td>{artist?.valorBloqueado}</td>\n                            <th>{artist?.valorTotal}</th>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n            <CommissionPaymentContainer>\n                {selectedArtists.length > 0 && (\n                    <>\n                        <Select\n                            label=\"Tipo\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={ComissionOptions[0]}\n                            options={ComissionOptions}\n                            onChange={value => value && setCurrentForm(value)}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {currentForm.value === 1 ? (\n                            <CommissionPaymentForm onSubmit={() => ''}>\n                                <div>\n                                    <strong>Data de pagamento:</strong>\n                                    <DatePicker\n                                        selected={paymentDate}\n                                        onChange={(selectedDate: Date) =>\n                                            selectedDate &&\n                                            setPaymentDate(selectedDate)\n                                        }\n                                    />\n                                </div>\n                                {compareAsc(\n                                    new Date().setHours(0, 0, 0, 0),\n                                    paymentDate.setHours(0, 0, 0, 0),\n                                ) === 0 && (\n                                    <CheckBox\n                                        name=\"SS\"\n                                        label=\"Pagamento já realizado\"\n                                    />\n                                )}\n                                <button\n                                    className=\"fibre-button\"\n                                    type=\"submit\"\n                                    form=\"form\"\n                                >\n                                    Fechar comissões\n                                </button>\n                            </CommissionPaymentForm>\n                        ) : (\n                            <RescissionPaymentForm onSubmit={() => ''}>\n                                <div>\n                                    <strong>Processar até a data:</strong>\n                                    <DatePicker\n                                        selected={paymentDate}\n                                        onChange={(selectedDate: Date) =>\n                                            selectedDate &&\n                                            setPaymentDate(selectedDate)\n                                        }\n                                    />\n                                </div>\n                                <button\n                                    className=\"fibre-button\"\n                                    type=\"submit\"\n                                    form=\"form\"\n                                >\n                                    Confirmar rescisão\n                                </button>\n                            </RescissionPaymentForm>\n                        )}\n                    </>\n                )}\n                {console.log(selectedArtists)}\n            </CommissionPaymentContainer>\n        </Container>\n    );\n};\n\nexport default Comissões;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PageNotFound from '../Errors/PageNotFound';\nimport Inputs from './Inputs';\nimport Outputs from './Outputs';\nimport CashRegister from './CashRegister';\nimport Comandas from './Comandas';\nimport AcountsPayable from './Accounts Payable';\nimport Commissions from './Comissões';\n\nconst Financial: React.FC = () => {\n    return (\n        <Switch>\n            <Route path=\"/financial/inputs\" exact component={Inputs} />\n            <Route path=\"/financial/outputs\" exact component={Outputs} />\n            <Route path=\"/financial/comandas\" exact component={Comandas} />\n            <Route path=\"/financial/cash\" exact component={CashRegister} />\n            <Route\n                path=\"/financial/accounts_payable\"\n                exact\n                component={AcountsPayable}\n            />\n            <Route\n                path=\"/financial/commissions\"\n                exact\n                component={Commissions}\n            />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Financial;\n","import styled, { css, keyframes } from 'styled-components';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 10%;\n            }\n        }\n    }\n`;\n\ninterface IButtonProps {\n    loading: boolean;\n}\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const UploadXML = styled.button.attrs<IButtonProps>(props => ({\n    disabled: props.loading,\n}))<IButtonProps>`\n    > label {\n        cursor: pointer;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        > svg {\n            margin-right: 5px;\n        }\n\n        > input[type='file'] {\n            display: none;\n        }\n    }\n\n    ${props =>\n        props.loading &&\n        css`\n            svg {\n                margin-left: 10px;\n                animation: ${rotate} 2s linear infinite;\n            }\n\n            > label {\n                cursor: not-allowed;\n            }\n        `}\n`;\n\nexport const StockHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: space-between;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/jsx-curly-newline */\nimport { Table } from 'react-bootstrap';\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaSearch, FaSpinner } from 'react-icons/fa';\nimport { RiFileUploadLine } from 'react-icons/ri';\nimport parser from 'fast-xml-parser';\n\nimport { Container, StockHeaderContainer, UploadXML } from './styles';\n\nconst Management: React.FC = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const buttonRef = useRef(null);\n\n    const options = {\n        attributeNamePrefix: '',\n        ignoreAttributes: false,\n        ignoreNameSpace: false,\n        allowBooleanAttributes: false,\n        parseNodeValue: true,\n        parseAttributeValue: false,\n        trimValues: true,\n        cdataTagName: '__cdata',\n        cdataPositionChar: '\\\\c',\n        parseTrueNumberOnly: false,\n        arrayMode: false,\n        stopNodes: ['parse-me-as-string'],\n    };\n\n    function handleUploadXMLSubmit(event: React.ChangeEvent<HTMLInputElement>) {\n        setLoading(true);\n\n        if (event.target.files) {\n            const file = event.target.files[0];\n\n            fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(str => {\n                    setLoading(false);\n                    history.push({\n                        pathname: '/stock/new-auto-entry',\n                        state: parser.parse(str, options),\n                    });\n                })\n                .catch(error => console.log('error'));\n\n            /*  fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(response => {\n                    parseString(response, (err, result) => {\n                        console.log(response);\n                    });\n                })\n                .catch(err => {\n                    console.log('fetch', err);\n                }); */\n\n            /* const file = event.target.files[0];\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = () => {\n                parseString(reader.result as string, (err, result) => {\n                    console.log(result);\n                });\n            }; */\n            /*  axios\n                .get(URL.createObjectURL(event.target.files[0]), {\n                    headers: {\n                        'Content-Type': 'application/xml; charset=utf-8',\n                    },\n                })\n                .then(res => {\n                    console.log(res.data);\n                }); */\n        }\n    }\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Estoque</h1>\n                <div>\n                    <div>\n                        <UploadXML loading={loading}>\n                            <label htmlFor=\"selecao-arquivo\" ref={buttonRef}>\n                                {loading ? (\n                                    <FaSpinner color=\"#FFF\" size={16} />\n                                ) : (\n                                    <RiFileUploadLine size={16} />\n                                )}\n                                <div>Upload XML</div>\n                                <input\n                                    id=\"selecao-arquivo\"\n                                    type=\"file\"\n                                    disabled={loading}\n                                    accept=\"text/xml\"\n                                    onChange={event =>\n                                        handleUploadXMLSubmit(event)\n                                    }\n                                />\n                            </label>\n                        </UploadXML>\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                history.push('/stock/new-manual-entry')\n                            }\n                        >\n                            Entrada manual\n                        </button>\n                    </div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Busca por nome, fornecedor\" />\n                    </div>\n                </div>\n            </StockHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Fornecedor</th>\n                        <th>Und</th>\n                        <th>Qtd</th>\n                        <th>Valor unitário</th>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                </thead>\n                <tbody />\n            </Table>\n        </Container>\n    );\n};\n\nexport default Management;\n","import styled, { css, keyframes } from 'styled-components';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 10%;\n            }\n        }\n    }\n`;\n\ninterface IButtonProps {\n    loading: boolean;\n}\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const UploadXML = styled.button.attrs<IButtonProps>(props => ({\n    disabled: props.loading,\n}))<IButtonProps>`\n    > label {\n        cursor: pointer;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        > svg {\n            margin-right: 5px;\n        }\n\n        > input[type='file'] {\n            display: none;\n        }\n    }\n\n    ${props =>\n        props.loading &&\n        css`\n            svg {\n                margin-left: 10px;\n                animation: ${rotate} 2s linear infinite;\n            }\n\n            > label {\n                cursor: not-allowed;\n            }\n        `}\n`;\n\nexport const StockHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: space-between;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/jsx-curly-newline */\nimport { Table } from 'react-bootstrap';\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaSearch, FaSpinner } from 'react-icons/fa';\nimport { RiFileUploadLine } from 'react-icons/ri';\nimport parser from 'fast-xml-parser';\n\nimport { Container, StockHeaderContainer, UploadXML } from './styles';\n\nconst Management: React.FC = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const buttonRef = useRef(null);\n\n    const options = {\n        attributeNamePrefix: '',\n        ignoreAttributes: false,\n        ignoreNameSpace: false,\n        allowBooleanAttributes: false,\n        parseNodeValue: true,\n        parseAttributeValue: false,\n        trimValues: true,\n        cdataTagName: '__cdata',\n        cdataPositionChar: '\\\\c',\n        parseTrueNumberOnly: false,\n        arrayMode: false,\n        stopNodes: ['parse-me-as-string'],\n    };\n\n    function handleUploadXMLSubmit(event: React.ChangeEvent<HTMLInputElement>) {\n        setLoading(true);\n\n        if (event.target.files) {\n            const file = event.target.files[0];\n\n            fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(str => {\n                    setLoading(false);\n                    history.push({\n                        pathname: '/stock/new-auto-entry',\n                        state: parser.parse(str, options),\n                    });\n                })\n                .catch(error => console.log('error'));\n\n            /*  fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(response => {\n                    parseString(response, (err, result) => {\n                        console.log(response);\n                    });\n                })\n                .catch(err => {\n                    console.log('fetch', err);\n                }); */\n\n            /* const file = event.target.files[0];\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = () => {\n                parseString(reader.result as string, (err, result) => {\n                    console.log(result);\n                });\n            }; */\n            /*  axios\n                .get(URL.createObjectURL(event.target.files[0]), {\n                    headers: {\n                        'Content-Type': 'application/xml; charset=utf-8',\n                    },\n                })\n                .then(res => {\n                    console.log(res.data);\n                }); */\n        }\n    }\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Estoque</h1>\n                <div>\n                    <div>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/stock/exit')}\n                        >\n                            Saída no estoque\n                        </button>\n                    </div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Busca por nome, fornecedor\" />\n                    </div>\n                </div>\n            </StockHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Fornecedor</th>\n                        <th>Und</th>\n                        <th>Qtd</th>\n                        <th>Valor unitário</th>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                </thead>\n                <tbody />\n            </Table>\n        </Container>\n    );\n};\n\nexport default Management;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n        font-size: 12px;\n\n        > thead > tr {\n            > :last-child {\n                width: 10%;\n            }\n        }\n    }\n`;\n\nexport const CreateNoteForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    > :nth-child(2) {\n        display: flex;\n    }\n\n    > :last-child {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n    }\n`;\n\nexport const StockHeaderContainer = styled.div`\n    margin-bottom: 25px;\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    /* > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > button {\n            > svg {\n                display: none;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > button {\n                width: 15%;\n                > span {\n                    display: none;\n                }\n                > svg {\n                    display: block;\n                }\n            }\n\n            > div {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n */\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { FaPlus } from 'react-icons/fa';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport { cpfMask, cnpjMask } from '../../../../utils/masks';\nimport Input from '../../../../components/UnformFields/Input';\nimport FieldSet from '../../../../components/FieldSet';\nimport Select from '../../../../components/UnformFields/Select';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport brasilStatesAndCities from '../../../../utils/brazilianStates.json';\nimport { Container, StockHeaderContainer, CreateNoteForm } from './styles';\n\ninterface IStateProps {\n    sigla: string;\n    label: string;\n    value: string;\n}\n\nexport interface INFItem {\n    detalhes: string;\n}\n\ninterface INFProps {\n    dataEmissao: string;\n    numeroNF: string;\n    serie: string;\n    chaveAcesso: string;\n    natureza: string;\n    fornecedor: string;\n    cnpjFornecedor: string;\n    destinatario: string;\n    cnpjOrCpfDestinario: string;\n    entregador: string;\n    cnpjEntregador: string;\n    modFrete: number;\n    impostos: {\n        vTotTrib: string;\n        vTotNF: string;\n        vProd: string;\n        vFrete: string;\n        vBC: string;\n        vICMS: string;\n        vBCST: string;\n        vST: string;\n        vSeg: string;\n        vDesc: string;\n        vOutro: string;\n        vIPI: string;\n    };\n    items: INFItem[];\n}\n\nconst type = [\n    { value: 1, label: 'Entrada' },\n    { value: 2, label: 'Saída' },\n];\n\nconst providers = [\n    { value: 1, label: 'Fulano' },\n    { value: 2, label: 'Beltrano' },\n    { value: 3, label: 'Ciclano' },\n];\n\nconst naturezaOptions = [\n    { value: 1, label: 'Venda de mercardoria' },\n    { value: 2, label: 'Compra de mercadoria' },\n    { value: 3, label: 'Devolução' },\n];\n\nconst freteOptions = [\n    { value: 1, label: 'Remetente' },\n    { value: 2, label: 'Destinatário' },\n];\n\nconst ufsList = brasilStatesAndCities.estados.map(uf => ({\n    sigla: uf.sigla,\n    label: `${uf.sigla} - ${uf.nome}`,\n    value: uf.nome,\n}));\n\nconst StockEntryXML: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const location = useLocation();\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [currentState, setCurrentState] = useState<null | string>(null);\n    const [nfData, setNFData] = useState<INFProps>();\n\n    useEffect(() => {\n        const data = location.state as any;\n        console.log(data);\n        setNFData({\n            dataEmissao: data.nfeProc.NFe.infNFe.ide.dhEmi,\n            numeroNF: data.nfeProc.NFe.infNFe.ide.nNF,\n            serie: data.nfeProc.NFe.infNFe.ide.serie,\n            chaveAcesso: data.nfeProc.NFe.infNFe.Id,\n            natureza: data.nfeProc.NFe.infNFe.ide.natOp,\n            fornecedor: data.nfeProc.NFe.infNFe.emit.xNome,\n            cnpjFornecedor: data.nfeProc.NFe.infNFe.emit.CNPJ,\n            destinatario: data.nfeProc.NFe.infNFe.dest.xNome || '',\n            cnpjOrCpfDestinario:\n                data.nfeProc.NFe.infNFe.dest.CNPJ ||\n                data.nfeProc.NFe.infNFe.dest.CPF,\n            entregador:\n                (data.nfeProc.NFe.infNFe.transp.transporta &&\n                    data.nfeProc.NFe.infNFe.transp.transporta.xNome) ||\n                '',\n            cnpjEntregador:\n                (data.nfeProc.NFe.infNFe.transp.transporta &&\n                    data.nfeProc.NFe.infNFe.transp.transporta.CNPJ) ||\n                '',\n            modFrete: data.nfeProc.NFe.infNFe.transp.modFrete,\n            impostos: {\n                vTotTrib: data.nfeProc.NFe.infNFe.total.ICMSTot.vTotTrib,\n                vTotNF: data.nfeProc.NFe.infNFe.total.ICMSTot.vNF,\n                vProd: data.nfeProc.NFe.infNFe.total.ICMSTot.vProd,\n                vFrete: data.nfeProc.NFe.infNFe.total.ICMSTot.vFrete,\n                vBC: data.nfeProc.NFe.infNFe.total.ICMSTot.vBC,\n                vICMS: data.nfeProc.NFe.infNFe.total.ICMSTot.vICMS,\n                vBCST: data.nfeProc.NFe.infNFe.total.ICMSTot.vBCST,\n                vST: data.nfeProc.NFe.infNFe.total.ICMSTot.vST,\n                vSeg: data.nfeProc.NFe.infNFe.total.ICMSTot.vSeg,\n                vDesc: data.nfeProc.NFe.infNFe.total.ICMSTot.vDesc,\n                vOutro: data.nfeProc.NFe.infNFe.total.ICMSTot.vOutro,\n                vIPI: data.nfeProc.NFe.infNFe.total.ICMSTot.vIPI,\n            },\n            items: data.nfeProc.NFe.infNFe.det,\n        });\n    }, [location]);\n\n    const handleCreateNoteSubmit = () => {\n        return '';\n    };\n\n    const citiesList = brasilStatesAndCities.estados\n        .find(elem => elem.sigla === currentState)\n        ?.cidades.map(elem => ({\n            value: elem,\n            label: elem,\n        }));\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Entrada de nota</h1>\n            </StockHeaderContainer>\n            {nfData && (\n                <CreateNoteForm\n                    id=\"form\"\n                    onSubmit={handleCreateNoteSubmit}\n                    ref={formRef}\n                >\n                    <FieldSet title=\"Identificação da nota fiscal\">\n                        <div className=\"treeFieldsGroup\">\n                            {/*  <DatePicker\n                            label=\"Data de emissão\"\n                            name=\"dataDeEmissao\"\n                            initialDate={nfData}\n                        /> */}\n                            <Input\n                                name=\"data\"\n                                label=\"Data de emissão\"\n                                value={new Date(\n                                    nfData.dataEmissao,\n                                ).toLocaleDateString('pt-br')}\n                                disabled\n                            />\n                            <Input\n                                name=\"numero\"\n                                label=\"Número\"\n                                value={nfData.numeroNF}\n                                disabled\n                            />\n                            <Input\n                                name=\"serie\"\n                                label=\"Série\"\n                                value={nfData.serie}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Input\n                                name=\"chaveDeAcesso\"\n                                label=\"Chave de acesso\"\n                                value={nfData.chaveAcesso}\n                                disabled\n                            />\n                            <Input\n                                name=\"Natureza\"\n                                label=\"Natureza da operação\"\n                                value={nfData.natureza}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <div>\n                        <FieldSet title=\"Emitente\">\n                            <div className=\"twoFieldsGroup\">\n                                <Input\n                                    name=\"razao\"\n                                    label=\"Razão social\"\n                                    value={nfData.fornecedor}\n                                    disabled\n                                />\n                                <Input\n                                    name=\"CNPJ\"\n                                    label=\"CNPJ\"\n                                    value={nfData.cnpjFornecedor}\n                                    disabled\n                                />\n                            </div>\n                        </FieldSet>\n                        <FieldSet title=\"Destinatário\">\n                            <div className=\"twoFieldsGroup\">\n                                <Input\n                                    name=\"razao\"\n                                    label=\"Razão social\"\n                                    value={nfData.destinatario}\n                                    disabled\n                                />\n                                <Input\n                                    name=\"CNPJ\"\n                                    label=\"CNPJ/CPF\"\n                                    value={nfData.cnpjOrCpfDestinario}\n                                    disabled\n                                />\n                            </div>\n                        </FieldSet>\n                    </div>\n                    <FieldSet title=\"Transportador\">\n                        <div className=\"treeFieldsGroup\">\n                            <Input\n                                name=\"razao\"\n                                label=\"Razão social\"\n                                value={nfData.entregador}\n                                disabled\n                            />\n                            <Input name=\"endereco\" label=\"Endereço\" disabled />\n                            <Input\n                                name=\"CNPJ\"\n                                label=\"CNPJ/CPF\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"treeFieldsGroup\">\n                            <Input\n                                label=\"Estado\"\n                                name=\"estado\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                            <Input\n                                label=\"Cidade\"\n                                name=\"cidade\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                            <Input\n                                label=\"Frete por conta\"\n                                name=\"frete\"\n                                value={(() => {\n                                    switch (nfData.modFrete) {\n                                        case 0:\n                                            return 'Emitente';\n                                            break;\n                                        case 1:\n                                            return 'Destinatário';\n                                            break;\n                                        case 2:\n                                            return 'Terceiros';\n                                            break;\n                                        case 3:\n                                            return 'Transp. Próprio Remetente';\n                                            break;\n                                        case 4:\n                                            return 'Transp. Próprio Destinatário';\n                                            break;\n                                        case 9:\n                                            return 'Sem cobrança de Frete';\n                                            break;\n                                        default:\n                                            return '';\n                                    }\n                                })()}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <FieldSet title=\"Cálculo do imposto\">\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Base de cálculo do ICMS\"\n                                name=\"calcICMS\"\n                                value={nfData.impostos.vBC}\n                            />\n                            <Input\n                                label=\"Valor do ICMS\"\n                                name=\"valueICMS\"\n                                value={nfData.impostos.vICMS}\n                                disabled\n                            />\n                            <Input\n                                label=\"Base de cálculo do ICMS subst.\"\n                                name=\"baseCalcICMSSub\"\n                                value={nfData.impostos.vBCST}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do ICMS subst.\"\n                                name=\"valueICMSSub\"\n                                value={nfData.impostos.vST}\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Valor aprox. tributos\"\n                                name=\"aproxTributeValue\"\n                                value={nfData.impostos.vTotTrib}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor total dos produtos\"\n                                name=\"totalValue\"\n                                value={nfData.impostos.vProd}\n                                disabled\n                            />\n\n                            <Input\n                                label=\"Valor do frete\"\n                                name=\"freteValue\"\n                                value={nfData.impostos.vFrete}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do seguro\"\n                                name=\"insuranceValue\"\n                                value={nfData.impostos.vSeg}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Desconto\"\n                                name=\"discount\"\n                                value={nfData.impostos.vDesc}\n                                disabled\n                            />\n                            <Input\n                                label=\"Outras despesas acessórias\"\n                                name=\"otherExpenses\"\n                                value={nfData.impostos.vOutro}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do IPI\"\n                                name=\"IPIValue\"\n                                value={nfData.impostos.vIPI}\n                            />\n                            <Input\n                                label=\"Valor total da nota\"\n                                name=\"totalNoteValue\"\n                                value={nfData.impostos.vTotNF}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <FieldSet title=\"Dados do produtos\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Código produto</th>\n                                    <th>Descrição do produto</th>\n                                    <th>NCM/SH</th>\n                                    <th>CSOSN</th>\n                                    <th>CFOP</th>\n                                    <th>UNID</th>\n                                    <th>QTDE</th>\n                                    <th>Valor unitário</th>\n                                    <th>Valor desconto</th>\n                                    <th>Valor líquido</th>\n                                    <th>Base de cálc. ICMS</th>\n                                    <th>Valor ICMS</th>\n                                    <th>Valor IPI</th>\n                                    <th>Alíq. %</th>\n                                    <th>Alíq.% ICMS</th>\n                                    <th>Alíq.% IPI</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {nfData.items.map(item => (\n                                    <tr>\n                                        <td>1401</td>\n                                        <td>\n                                            GPU NV RTX3070TI 8GB PHOENIX G6X\n                                            256BITS GAINWARD NED307T019P2-1046X\n                                            NS: B5210113736\n                                        </td>\n                                        <th>84733043</th>\n                                        <td>0103</td>\n                                        <td>5102</td>\n                                        <td>UN</td>\n                                        <td>1</td>\n                                        <th>6.500,00</th>\n                                        <td>0,00</td>\n                                        <td>6.500,00</td>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                        <th>0,00</th>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                    </tr>\n                                ))}\n                                {/* <tr>\n                                    <td>1401</td>\n                                    <td>\n                                        GPU NV RTX3070TI 8GB PHOENIX G6X 256BITS\n                                        GAINWARD NED307T019P2-1046X NS:\n                                        B5210113736\n                                    </td>\n                                    <th>84733043</th>\n                                    <td>0103</td>\n                                    <td>5102</td>\n                                    <td>UN</td>\n                                    <td>1</td>\n                                    <th>6.500,00</th>\n                                    <td>0,00</td>\n                                    <td>6.500,00</td>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                    <th>0,00</th>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                </tr> */}\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                    <div>\n                        <button type=\"submit\">Confirmar entrada</button>\n                    </div>\n                </CreateNoteForm>\n            )}\n        </Container>\n    );\n};\n\nexport default StockEntryXML;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    margin: 5px;\n    flex-direction: column;\n    justify-content: center;\n\n    > div {\n        > label {\n            margin-left: 15px;\n            margin-bottom: 5px;\n            font-size: 13px;\n            font-weight: bold;\n            color: var(--primary-text-color);\n        }\n    }\n\n    /*  > span {\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        color: #db3b21;\n\n        > svg {\n            width: 16px;\n            height: 16px;\n        }\n    } */\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n\n    > :first-child {\n        border-top-left-radius: 20px;\n        border-bottom-left-radius: 20px;\n    }\n\n    > :last-child {\n        border-top-right-radius: 20px;\n        border-bottom-right-radius: 20px;\n    }\n\n    > button {\n        width: 40%;\n        border-radius: 0px;\n    }\n\n    > input {\n        width: 70%;\n        text-align: center;\n        padding: 0px 5px;\n        color: var(--primary-text-color);\n        border: 1px solid var(--primary-border-color);\n\n        &[disabled] {\n            background-color: var(--base-quaternary-color);\n            cursor: not-allowed;\n        }\n    }\n`;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container, ButtonContainer } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst NumericInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [value, setValue] = useState(1);\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n\n    const handleIncrement = () => {\n        setValue(value + 1);\n    };\n\n    const handleDecrement = () => {\n        value > 1 && setValue(value - 1);\n    };\n\n    return (\n        <Container>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                </div>\n            )}\n            <ButtonContainer>\n                <button type=\"button\" onClick={handleDecrement}>\n                    -\n                </button>\n                <input\n                    id={fieldName}\n                    ref={inputRef}\n                    value={value || ''}\n                    onBlur={event => {\n                        event.target.value === '' && setValue(1);\n                    }}\n                    onChange={event =>\n                        new RegExp('^[0-9]*$').test(event.target.value) &&\n                        setValue(Number(event.target.value))\n                    }\n                    style={{ borderColor: error ? '#db3b21' : '' }}\n                    defaultValue={defaultValue}\n                    {...rest}\n                />\n                <button type=\"button\" onClick={handleIncrement}>\n                    +\n                </button>\n            </ButtonContainer>\n            {/*   {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )} */}\n        </Container>\n    );\n};\nexport default NumericInput;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const ConfigurePaymentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    > :last-child {\n        margin-top: 20px;\n    }\n\n    > :nth-child(2) {\n        display: flex;\n        align-items: center;\n\n        > :last-child {\n            margin-top: 20px;\n        }\n\n        /*  > :last-child {\n            align-items: center;\n            > button {\n                margin-bottom: -22px;\n            }\n        } */\n\n        /*  > div {\n            width: 50%;\n        }\n\n         */\n    }\n\n    table {\n        color: var(--primary-text-color);\n\n        > tbody > tr > td {\n            text-align: right;\n        }\n\n        > tbody > tr > :first-child {\n            text-align: left;\n        }\n\n        > thead > tr {\n            > :nth-child(1) {\n                width: 83%;\n            }\n\n            > :nth-child(1) {\n                width: 83%;\n            }\n            > :nth-child(4) {\n                width: 17%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const Total = styled.div`\n    font-weight: bold;\n    color: var(--primary-text-color);\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const Title = styled.div``;\n\nexport const PaymentConfig = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--primary-text-color);\n\n    > label {\n        margin-right: 5px;\n        font-weight: bold;\n    }\n\n    > div {\n        width: 50%;\n    }\n`;\n\nexport const StockHeaderContainer = styled.div`\n    margin-bottom: 25px;\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit, MdDelete } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport FieldSet from '../../../../components/FieldSet';\nimport NumericInput from '../../../../components/UnformFields/NumericInput';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    ConfigurePaymentForm,\n    Total,\n    Title,\n    PaymentConfig,\n    StockHeaderContainer,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../../components/UnformFields/CheckBox';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const unityOptions = [\n        { value: 1, label: 'ml' },\n        { value: 2, label: 'lt' },\n        { value: 3, label: 'mg' },\n        { value: 4, label: 'kg' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Entrada de nota</h1>\n            </StockHeaderContainer>\n            <CreateInputForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <div className=\"twoFieldsGroup\">\n                    <Select\n                        label=\"Fornecedor\"\n                        name=\"fornecedor\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={fornecedorOptions[1]}\n                        options={fornecedorOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <DatePicker label=\"Data da nota\" name=\"data\" />\n                </div>\n                <ConfigurePaymentForm onSubmit={() => ''} id=\"form2\">\n                    <Select\n                        textTransform=\"lowercase\"\n                        name=\"descricao\"\n                        label=\"Descrição\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={unityOptions[1]}\n                        options={unityOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <div className=\"treeFieldsGroup \">\n                        <Select\n                            label=\"Unidade\"\n                            name=\"unidade\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {/*   <Input\n                            textTransform=\"lowercase\"\n                            name=\"qtd\"\n                            label=\"Qtd\"\n                        /> */}\n\n                        <NumericInput name=\"qtd\" label=\"Qtd\" />\n                        <MaskedInput\n                            label=\"Valor\"\n                            mask=\"R$ 99.999\"\n                            name=\"value\"\n                        />\n                        <button type=\"button\">\n                            <FaPlus />\n                        </button>\n                    </div>\n                    <FieldSet title=\"Lista de itens\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Descrição</th>\n                                    <th>Und</th>\n                                    <th>Qtd</th>\n                                    <th>Valor unitário</th>\n                                    <th> </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                </ConfigurePaymentForm>\n                <Total>\n                    <div>Total da nota:</div>\n                    <div>R$ 5000,00</div>\n                </Total>\n                <PaymentConfig>\n                    <CheckBox\n                        name=\"retiradoCaixa\"\n                        label=\"Valor retirado da caixa\"\n                    />\n                    <label>Finalizadora</label>\n                    <Select\n                        id=\"finalizadora\"\n                        name=\"finalizadora\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={finalizadoraOptions[0]}\n                        options={finalizadoraOptions}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocuss\n                    />\n                </PaymentConfig>\n            </CreateInputForm>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    > :last-child {\n        margin-top: 20px;\n        display: flex;\n        justify-content: flex-end;\n        > :first-child {\n            margin-right: 10px;\n        }\n    }\n`;\n\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            form > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n\nexport const CreateInputForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const ConfigurePaymentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    > :nth-child(2) > :nth-child(2) {\n        width: 7%;\n    }\n\n    > :last-child {\n        margin-top: 20px;\n    }\n\n    > :nth-child(2) {\n        display: flex;\n        align-items: center;\n\n        > :last-child {\n            margin-top: 20px;\n        }\n\n        /*  > :last-child {\n            align-items: center;\n            > button {\n                margin-bottom: -22px;\n            }\n        } */\n\n        /*  > div {\n            width: 50%;\n        }\n\n         */\n    }\n\n    table {\n        color: var(--primary-text-color);\n\n        > tbody > tr > td {\n            text-align: right;\n        }\n\n        > tbody > tr > :first-child {\n            text-align: left;\n        }\n\n        > thead > tr {\n            > :nth-child(1) {\n                width: 83%;\n            }\n\n            > :nth-child(1) {\n                width: 83%;\n            }\n            > :nth-child(4) {\n                width: 17%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const Total = styled.div`\n    font-weight: bold;\n    color: var(--primary-text-color);\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const Title = styled.div``;\n\nexport const PaymentConfig = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--primary-text-color);\n\n    > label {\n        margin-right: 5px;\n        font-weight: bold;\n    }\n\n    > div {\n        width: 50%;\n    }\n`;\n\nexport const StockHeaderContainer = styled.div`\n    margin-bottom: 25px;\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit, MdDelete } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport FieldSet from '../../../../components/FieldSet';\nimport NumericInput from '../../../../components/UnformFields/NumericInput';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    ConfigurePaymentForm,\n    Total,\n    Title,\n    PaymentConfig,\n    StockHeaderContainer,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../../components/UnformFields/CheckBox';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const operationOptions = [\n        { value: 1, label: 'Consumo' },\n        { value: 2, label: 'Perda/roubo/avaria' },\n        { value: 3, label: 'Fora da validade' },\n        { value: 4, label: 'Ajuste de estoque' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const unityOptions = [\n        { value: 1, label: 'ml' },\n        { value: 2, label: 'lt' },\n        { value: 3, label: 'mg' },\n        { value: 4, label: 'kg' },\n    ];\n\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Saída de nota</h1>\n            </StockHeaderContainer>\n            <CreateInputForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <div className=\"twoFieldsGroup\">\n                    <Select\n                        label=\"Cliente\"\n                        name=\"cliente\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={fornecedorOptions[1]}\n                        options={fornecedorOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <DatePicker label=\"Data da nota\" name=\"data\" />\n                </div>\n                <ConfigurePaymentForm onSubmit={() => ''} id=\"form2\">\n                    <div className=\"twoFieldsGroup \">\n                        <Select\n                            textTransform=\"lowercase\"\n                            name=\"descricao\"\n                            label=\"Descrição\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={operationOptions[1]}\n                            options={operationOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup \">\n                        <Select\n                            label=\"Unidade\"\n                            name=\"unidade\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {/*   <Input\n                            textTransform=\"lowercase\"\n                            name=\"qtd\"\n                            label=\"Qtd\"\n                        /> */}\n\n                        <NumericInput name=\"qtd\" label=\"Qtd\" />\n                        <MaskedInput\n                            label=\"Valor\"\n                            mask=\"R$ 99.999\"\n                            name=\"value\"\n                        />\n                        <button type=\"button\">\n                            <FaPlus />\n                        </button>\n                    </div>\n                    <FieldSet title=\"Lista de itens\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Descrição</th>\n                                    <th>Und</th>\n                                    <th>Qtd</th>\n                                    <th>Valor unitário</th>\n                                    <th> </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                </ConfigurePaymentForm>\n                <Total>\n                    <div>Total da nota:</div>\n                    <div>R$ 5000,00</div>\n                </Total>\n                <PaymentConfig>\n                    <CheckBox\n                        name=\"retiradoCaixa\"\n                        label=\"Valor retirado da caixa\"\n                    />\n                    <label>Finalizadora</label>\n                    <Select\n                        id=\"finalizadora\"\n                        name=\"finalizadora\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={finalizadoraOptions[0]}\n                        options={finalizadoraOptions}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocuss\n                    />\n                </PaymentConfig>\n            </CreateInputForm>\n            <div>\n                <button type=\"button\">Cancelar</button>\n                <button type=\"button\">Confirmar saída</button>\n            </div>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","import styled, { css, keyframes } from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 5%;\n            }\n        }\n\n        > tbody > tr {\n            > :first-child {\n                > form > div {\n                    margin: 0px;\n                }\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const CheckBoxContainer = styled(Form)``;\n\nexport const PromotionHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 150px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: flex-end;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport { MdDelete } from 'react-icons/md';\nimport FieldSet from '../../../components/FieldSet';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport {\n    Container,\n    PromotionHeaderContainer,\n    CheckBoxContainer,\n    ButtonContainer,\n} from './styles';\n\ninterface IProductComission {\n    descricao: string;\n    qtd: string;\n    precoCusto: string;\n    valorVenda: string;\n    sugestaoVenda: string;\n    novoValor: string;\n}\n\nconst PromotionOptions = [\n    { value: 1, label: '5%' },\n    { value: 2, label: '10%' },\n    { value: 2, label: '15%' },\n    { value: 2, label: '20%' },\n    { value: 2, label: '25%' },\n    { value: 2, label: '30%' },\n    { value: 2, label: '35%' },\n    { value: 2, label: '40%' },\n];\nconst Promotions: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n    const [selectedProducts, setSelectedProducts] = useState<\n        Array<IProductComission>\n    >([]);\n    const [productsList, setProductsList] = useState<Array<IProductComission>>([\n        {\n            descricao: 'Produto1',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n        {\n            descricao: 'Produto2',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n        {\n            descricao: 'Produto3',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PromotionHeaderContainer>\n                <h1>Sugestão de promoção</h1>\n                <div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </PromotionHeaderContainer>\n            <FieldSet title=\"Produtos parados no estoque\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>\n                                <div />\n                            </th>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Preço de custo (R$)</th>\n                            <th>Valor de venda (R$)</th>\n                            <th>Sugestão de venda (%)</th>\n                            <th>Novo valor de venda (R$)</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>\n                                    <CheckBoxContainer onSubmit={() => ''}>\n                                        <CheckBox\n                                            name=\"SS\"\n                                            onChangeCallback={() => {\n                                                if (\n                                                    selectedProducts.includes(\n                                                        product,\n                                                    )\n                                                ) {\n                                                    const updatedProductsList = selectedProducts.filter(\n                                                        (_, productIndex) =>\n                                                            productIndex !==\n                                                            index,\n                                                    );\n\n                                                    setSelectedProducts(\n                                                        updatedProductsList,\n                                                    );\n                                                } else {\n                                                    setSelectedProducts([\n                                                        ...selectedProducts,\n                                                        product,\n                                                    ]);\n                                                }\n                                            }}\n                                        />\n                                    </CheckBoxContainer>\n                                </td>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.precoCusto}</td>\n                                <th>{product?.valorVenda}</th>\n                                <th>{product?.sugestaoVenda}</th>\n                                <th>{product?.novoValor}</th>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            <FieldSet title=\"Próximos a data de vencimento\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>\n                                <div />\n                            </th>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Preço de custo (R$)</th>\n                            <th>Valor de venda (R$)</th>\n                            <th>Sugestão de venda (%)</th>\n                            <th>Novo valor de venda (R$)</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>\n                                    <CheckBoxContainer onSubmit={() => ''}>\n                                        <CheckBox\n                                            name=\"SS\"\n                                            onChangeCallback={() => {\n                                                if (\n                                                    selectedProducts.includes(\n                                                        product,\n                                                    )\n                                                ) {\n                                                    const updatedProductsList = selectedProducts.filter(\n                                                        (_, productIndex) =>\n                                                            productIndex !==\n                                                            index,\n                                                    );\n\n                                                    setSelectedProducts(\n                                                        updatedProductsList,\n                                                    );\n                                                } else {\n                                                    setSelectedProducts([\n                                                        ...selectedProducts,\n                                                        product,\n                                                    ]);\n                                                }\n                                            }}\n                                        />\n                                    </CheckBoxContainer>\n                                </td>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.precoCusto}</td>\n                                <th>{product?.valorVenda}</th>\n                                <th contentEditable>\n                                    {product?.sugestaoVenda}\n                                </th>\n                                <th>{product?.novoValor}</th>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            {selectedProducts.length > 0 ? (\n                <ButtonContainer>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Aplicar desconto\n                    </button>\n                </ButtonContainer>\n            ) : (\n                <div />\n            )}\n        </Container>\n    );\n};\n\nexport default Promotions;\n","import styled, { css, keyframes } from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr > th {\n            width: 25%;\n        }\n\n        > thead > tr {\n            > :last-child {\n                width: 5%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n\n        > tbody > tr {\n            > :first-child {\n                > form > div {\n                    margin: 0px;\n                }\n            }\n        }\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const CheckBoxContainer = styled(Form)``;\n\nexport const PromotionHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 150px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: flex-end;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport { MdDelete } from 'react-icons/md';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport FieldSet from '../../../components/FieldSet';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport {\n    Container,\n    PromotionHeaderContainer,\n    CheckBoxContainer,\n    ButtonContainer,\n} from './styles';\n\ninterface IProductComission {\n    descricao: string;\n    qtd: string;\n    qtdIdeal: string;\n}\n\nconst Promotions: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n    const [selectedProducts, setSelectedProducts] = useState<\n        Array<IProductComission>\n    >([]);\n    const [productsList, setProductsList] = useState<Array<IProductComission>>([\n        {\n            descricao: 'Produto1',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n        {\n            descricao: 'Produto2',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n        {\n            descricao: 'Produto3',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PromotionHeaderContainer>\n                <h1>Sugestão de compras</h1>\n                <div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </PromotionHeaderContainer>\n            <FieldSet title=\"Produtos em estoque mínimo\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Qtd ideal</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.qtdIdeal}</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            <FieldSet title=\"Próximos de alta rotatividade em baixa quantidade\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Qtd ideal</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.qtdIdeal}</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            {selectedProducts.length > 0 ? (\n                <ButtonContainer>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Aplicar desconto\n                    </button>\n                </ButtonContainer>\n            ) : (\n                <div />\n            )}\n        </Container>\n    );\n};\n\nexport default Promotions;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PageNotFound from '../Errors/PageNotFound';\n\nimport Input from './StockInput';\nimport Output from './StockOutput';\n\nimport StockEntryXML from './StockInput/StockEntryXML';\nimport StockEntryManual from './StockInput/StockEntryManual';\nimport StockExit from './StockOutput/StockExit';\nimport Promotions from './Promotions';\nimport Purchases from './Purchases';\n\nconst Stock: React.FC = () => {\n    return (\n        <Switch>\n            <Route\n                path=\"/stock/new-auto-entry\"\n                exact\n                component={StockEntryXML}\n            />\n            <Route\n                path=\"/stock/new-manual-entry\"\n                exact\n                component={StockEntryManual}\n            />\n            <Route path=\"/stock/management/input\" exact component={Input} />\n            <Route path=\"/stock/management/output\" exact component={Output} />\n            <Route path=\"/stock/exit\" exact component={StockExit} />\n            <Route path=\"/stock/promotions\" exact component={Promotions} />\n            <Route path=\"/stock/purchases\" exact component={Purchases} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Stock;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const QuestionsHeaderContainer = styled.div`\n    margin-bottom: 21px;\n\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 150px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","import React from 'react';\n\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport { QuestionsHeaderContainer, Container } from './styles';\n\nconst Questions: React.FC = () => {\n    return (\n        <Container>\n            <QuestionsHeaderContainer>\n                <h1>Dúvidas Frequentes</h1>\n            </QuestionsHeaderContainer>\n            <Accordion defaultActiveKey=\"0\">\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Pergunta 1</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Pergunta 2</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header>Pergunta 3</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"3\">\n                    <Accordion.Header>Pergunta 4</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"4\">\n                    <Accordion.Header>Pergunta 5</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"5\">\n                    <Accordion.Header>Pergunta 6</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"6\">\n                    <Accordion.Header>Pergunta 7</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"7\">\n                    <Accordion.Header>Pergunta 8</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </Container>\n    );\n};\n\nexport default Questions;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport PageNotFound from '../Errors/PageNotFound';\nimport Questions from './Questions';\n\nconst Help: React.FC = () => {\n    return (\n        <Switch>\n            <Route path=\"/help/questions\" component={Questions} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Help;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ArtistHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > button {\n            > svg {\n                display: none;\n            }\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        > :last-child {\n            > button {\n                width: 15%;\n                > span {\n                    display: none;\n                }\n                > svg {\n                    display: block;\n                }\n            }\n\n            > div {\n                width: 60%;\n\n                > svg {\n                    display: block;\n                }\n                > input {\n                    width: 100%;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { MdDelete, MdPerson } from 'react-icons/md';\n\nimport { useHistory } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\n\nimport ProviderCard from '../../../components/ProviderCard';\nimport AddArtistModal from '../CreateArtist';\n\nimport { Container, ArtistHeaderContainer } from './styles';\n\nconst Providers: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <ArtistHeaderContainer>\n                <h1>Artistas</h1>\n                <div>\n                    <button\n                        type=\"button\"\n                        onClick={() => history.push('/artists/create')}\n                    >\n                        <span>Adicionar</span>\n                        <FaPlus />\n                    </button>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar artista\" />\n                    </div>\n                </div>\n            </ArtistHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Nome</th>\n                        <th>Email</th>\n                        <th>Celular</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Ana</td>\n                        <td>analucia@gmail.com</td>\n                        <td>(62) 9 98297558</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Maria</td>\n                        <td>mariasouza@gmail.com</td>\n                        <td>(62) 9 98297953</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Marcos</td>\n                        <td>marcos158@gmail.com</td>\n                        <td>(62) 9 98297258</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Providers;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    > button {\n        width: 25%;\n    }\n`;\nexport const AddSkillModal = styled(Modal)`\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport { Container, AddSkillModal } from './styles';\n\nconst AddSkills: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Repetir horários de outro profissional\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Profissionais</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <Input name=\"pesquisarHabilidade\" label=\"Pesquisar\" />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddSkills;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    border-radius: 10px;\n\n    > form > :nth-child(4) {\n        justify-content: center;\n        align-items: center;\n\n        > :nth-child(2) {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 100%;\n        }\n    }\n`;\n\nexport const PageFooter = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    border-top: 0px;\n    margin-top: 40px;\n\n    > :first-child {\n        border: 2px solid var(--primary-border-color);\n        background: none;\n        margin-right: 10px;\n        color: var(--primary-text-color);\n\n        &:hover {\n            color: var(--base-tertiary-color);\n        }\n    }\n\n    button {\n        width: 150px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nexport const PageTitle = styled.div`\n    margin-bottom: 45px;\n\n    > p {\n        font-weight: bold;\n        font-size: 20px;\n        color: var(--base-tertiary-color);\n        width: max-content;\n    }\n\n    > p::after {\n        content: '';\n        display: block;\n        width: 95%;\n        border-bottom: 3px solid #fd854b;\n    }\n`;\n\nexport const SectionButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    color: var(--base-tertiary-color);\n\n    &:hover {\n        background: none;\n        color: var(--base-tertiary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n`;\n\nexport const WeekScheduleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const DayScheduleItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 15px;\n    border-radius: 10px;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 5px;\n    color: var(--primary-text-color);\n    border: 1px solid var(--primary-border-color);\n    height: max-content;\n    width: 140px;\n\n    > p {\n        margin-bottom: 0px;\n        font-weight: bold;\n        margin-top: -8px;\n    }\n\n    > :nth-child(3) {\n        display: flex;\n        align-items: center;\n\n        > div > div > input {\n            width: 68px;\n        }\n    }\n`;\n\nexport const CreateArtistForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 1100px) {\n        > :first-child {\n            flex-direction: column-reverse !important;\n            > div {\n                width: 100% !important;\n                > div {\n                    flex-direction: column !important;\n                    > div {\n                        width: 100% !important;\n                    }\n                }\n            }\n        }\n\n        > :nth-child(2) {\n            > div {\n                width: 100% !important;\n                display: flex;\n                flex-direction: column !important;\n\n                > div {\n                    display: flex;\n                    width: 100% !important;\n                }\n            }\n        }\n\n        > :nth-child(3) {\n            > div {\n                display: flex;\n                flex-direction: column !important;\n\n                > div {\n                    width: 100% !important;\n                }\n            }\n        }\n\n        > :nth-child(4) {\n            > :first-child {\n                > button {\n                    width: 100%;\n                }\n            }\n\n            > div {\n                display: flex;\n                flex-direction: column !important;\n            }\n        }\n\n        /* > :first-child {\n            display: flex;\n\n            > :first-child {\n                width: 100% !important;\n\n                > div {\n                    flex-direction: column !important;\n                    > div {\n                        width: 100% !important;\n                        > div {\n                            width: 100% !important;\n                        }\n                    }\n                }\n            }\n        } */\n    }\n\n    > :first-child {\n        display: flex;\n        flex-direction: row;\n\n        > :first-child {\n            width: 78%;\n        }\n\n        > :last-child {\n            width: 22%;\n        }\n    }\n\n    > :last-child {\n        > :first-child {\n            margin-bottom: 30px;\n        }\n        > :last-child {\n            > div {\n                background-color: red;\n            }\n\n            > table {\n                color: var(--primary-text-color);\n            }\n        }\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-bitwise */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport { MdKeyboardArrowDown, MdKeyboardArrowRight } from 'react-icons/md';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport Select from '../../../components/UnformFields/Select';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport AddSkill from './AddSkills';\nimport WebCam from '../../../components/WebcamCapture';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport { Container, CreateArtistForm, WeekScheduleContainer, DayScheduleItem, PageTitle, PageFooter, SectionButton } from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\nimport { AddSkillModal } from './AddSkills/styles';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nconst artistsGroup = [\n    { value: 1, label: 'Diário' },\n    { value: 2, label: 'Semanal' },\n    { value: 3, label: 'Quinzenal' },\n    { value: 4, label: 'Mensal' },\n];\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [banks, setBanks] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [showEndOfWorkDate, setShowEndOfWorkDate] = useState(false);\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>> ([]);\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n\n    const genderOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const typeOfBond = [\n        { value: 1, label: 'Eventual' },\n        { value: 2, label: 'Regime CLT' },\n        { value: 3, label: 'Salão parceiro' },\n    ];\n\n      const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    const comissionTypeOptions = [\n        {value: 1, label: 'Percentual (%)'},\n        {value: 2, label: 'Valor (R$)'}\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxShowInschedule: CheckboxOption[] = [\n        {\n            id: 'mostrarNaAgenda',\n            value: 'true',\n            label: 'Mostrar na agenda',\n        },\n    ];\n\n    const checkboxFiredProfessional: CheckboxOption[] = [\n        {\n            id: 'profissionalDemitido',\n            value: 'true',\n            label: 'Profissional desligado',\n        },\n    ];\n\n    useEffect(() => {\n        console.log(currentUf);\n        /* setCurrentCities(brasilStatesAndCities.estados.filter(uf => uf.sigla === currentUf).map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n    }))) */\n    }, [currentUf]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n     function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        console.log(data);\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Cadastro de artista</p>\n            </PageTitle>\n            <CreateArtistForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input name=\"nome\" label=\"Nome*\" />\n                            <Input name=\"apelido\" label=\"Apelido\" />\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF\"\n                                value={cpfMask(tipoPessoa)}\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Select\n                                label=\"Sexo\"\n                                name=\"sexo\"\n                                classNamePrefix=\"react-select\"\n                                placeholder=\"Selecione o sexo\"\n                                defaultValue={{\n                                label: 'Selecione o sexo',\n                                value: 0,\n                            }}\n                                options={genderOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"(99) 9999-9999\"\n                                name=\"telefone\"\n                                label=\"Telefone\"\n                            />\n                            <MaskedInput\n                                mask=\"(99) 9 9999-9999\"\n                                name=\"celular\"\n                                label=\"Celular\"\n                            />\n                            <Input name=\"email\" label=\"E-mail\" textTransform=\"lowercase\" />\n                            <DatePicker\n                                label=\"Data de nascimento\"\n                                name=\"dataDeNascimento\"\n                            />\n                        </div>\n                        <Select\n                            name=\"tipoDeVinculo\"\n                            label=\"Tipo de vínculo\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                            label: 'Selecione o tipo de vínculo',\n                            value: 0,\n                        }}\n                            options={typeOfBond}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div>\n                        <AvatarInput\n                            name=\"avatarImage\"\n                            label=\"Foto do artista\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Informações Complementares\">\n                    <div className=\"fourFieldsGroup\">\n                        <DatePicker\n                            label=\"Início do trabalho\"\n                            name=\"dataDeNascimento\"\n                        />\n                        <Select\n                            name=\"group\"\n                            label=\"Grupo de rateio\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={artistsGroup[2]}\n                            options={artistsGroup}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <DatePicker\n                            label=\"Término do trabalho\"\n                            name=\"dataTerminoTrabalho\"\n                            disabled={!showEndOfWorkDate}\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Função\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Escolha uma função',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Perfil de permissões\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <MaskedInput\n                            label=\"Remuneração combinada\"\n                            mask=\"R$ 9.999,99\"\n                            name=\"value\"\n                        />\n\n                    </div>\n                    <div className=\"checkboxGroup\">\n                        <CheckBox\n                            name=\"profissionalDesligado\"\n                            label=\"Profissional desligado\"\n                            onChangeCallback={() => {\n                            formRef.current?.clearField('dataTerminoTrabalho');\n                            setShowEndOfWorkDate(!showEndOfWorkDate)\n                        }}\n                        />\n                        <CheckBox\n                            name=\"possibilitaEncaixe\"\n                            label=\"Possibilita encaixe\"\n                        />\n                        <CheckBox\n                            name=\"mostrarNaAgenda\"\n                            label=\"Mostrar na agenda\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                                    if (\n                                                        RegExp(\n                                                            /^\\d{5}-\\d{3}$/g,\n                                                        ).test(event.target.value)\n                                                    ) {\n                                                        getAddressInfo(\n                                                            event.target.value,\n                                                        );\n                                                    }\n                                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input\n                                name=\"complemento\"\n                                label=\"Complemento\"\n                            />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                onChange={value => {\n                                                    setCurrentUf(value?.value);\n                                                   /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Horário de trabalho\">\n                    <AddSkill />\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Marcar todos os dias\"\n                        />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"domingo\"\n                                label=\"Domingo\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"segunda\"\n                                label=\"Segunda\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"terca\"\n                                label=\"Terça\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quarta\"\n                                label=\"Quarta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quinta\"\n                                label=\"Quinta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sexta\"\n                                label=\"Sexta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sabado\"\n                                label=\"Sábado\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Habilidades\">\n                    <Select\n                        label=\"Filtrar por categoria\"\n                        name=\"categoria\"\n                        classNamePrefix=\"react-select\"\n                        placeholder=\"Selecione uma categoria\"\n                        defaultValue={{\n                                label: 'Selecione uma categoria',\n                                value: 0,\n                            }}\n                        options={skillsList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th> </th>\n                                <th>Nome do serviço</th>\n                                <th>Tempo de serviço</th>\n                                <th>Tipo de comissão</th>\n                                <th>\n                                    Margem de comissão\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba com pezinho</td>\n                                <td>45min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba completa</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba desenhada</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </CreateArtistForm>\n            <PageFooter>\n\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={handleClose}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n\n\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch, useParams } from 'react-router-dom';\n\nimport Home from './Home';\nimport CreateArtist from './CreateArtist';\n\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/artists\" exact component={Home} />\n            <Route path=\"/artists/create\" exact component={CreateArtist} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n\n    @media only screen and (max-width: 1100px) {\n        > button {\n            width: 42%;\n        }\n    }\n\n    margin-top: -15px;\n    margin-bottom: 10px;\n`;\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst CardOperator: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const admOptions = [\n        { value: 1, label: 'Cielo' },\n        { value: 2, label: 'Stone' },\n        { value: 3, label: 'Pagseguro' },\n        { value: 4, label: 'GetNet' },\n        { value: 5, label: 'Rede' },\n        { value: 6, label: 'Safra' },\n    ];\n\n    const brandOptions = [\n        { value: 1, label: 'Amex' },\n        { value: 2, label: 'Elo' },\n        { value: 3, label: 'Hiper' },\n        { value: 4, label: 'Mastercard' },\n        { value: 5, label: 'Safra' },\n        { value: 6, label: 'Visa' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar operadora\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de taxas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Select\n                            label=\"Administradora\"\n                            name=\"administradora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={admOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Bandeira\"\n                            name=\"bandeira\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={brandOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={cardTransactions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa da operação\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa de antecipação de crédito\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Qtde dias a compensar\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n\n    @media only screen and (max-width: 1100px) {\n        > button {\n            width: 42%;\n        }\n    }\n\n    margin-top: -15px;\n    margin-bottom: 10px;\n`;\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport { OptionTypeBase } from 'react-select';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport { Container, AddSkillModal } from './styles';\nimport Exceptions from './Exceptions';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nconst CardOperator: React.FC = () => {\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    const [show, setShow] = useState(false);\n    const [\n        currentPaymentForm,\n        setCurrentPaymentForm,\n    ] = useState<OptionTypeBase>(finalizadoraOptions[0]);\n\n    const cardPaymentOptions = [\n        { value: 1, label: '1x (á vista)' },\n        { value: 2, label: '2x' },\n        { value: 3, label: '3x' },\n        { value: 4, label: '4x' },\n        { value: 5, label: '5x' },\n        { value: 6, label: '6x' },\n        { value: 1, label: '7x' },\n        { value: 2, label: '8x' },\n        { value: 3, label: '9x' },\n        { value: 4, label: '10x' },\n        { value: 5, label: '11x' },\n        { value: 6, label: '12x' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar forma de pag.\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de forma de pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"twoFieldsGroup\">\n                        <Select\n                            label=\"Finalizadora\"\n                            name=\"finalizadora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={finalizadoraOptions[0]}\n                            options={finalizadoraOptions}\n                            onChange={option => {\n                                option && setCurrentPaymentForm(option);\n                            }}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocuss\n                        />\n                        {currentPaymentForm.value === 5 && (\n                            <Select\n                                label=\"Parcelamento\"\n                                name=\"Parcelamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={cardPaymentOptions[0]}\n                                options={cardPaymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        )}\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"descricao\"\n                            label=\"Descrição\"\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"acrescimo\"\n                            label=\"Acréscimo\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"desconto\"\n                            label=\"Desconto\"\n                        />\n                    </div>\n                    {currentPaymentForm.value === 5 && (\n                        <>\n                            <CheckBox\n                                label=\"Bloquear rateio baseado na carência do cartão\"\n                                name=\"SS\"\n                            />\n                            <CheckBox\n                                label=\"Bloquear pagamento do rateio aos artistas\"\n                                name=\"SS\"\n                            />\n                            <CheckBox\n                                label=\"Adicionar exceções ao bloqueio de pagamento do rateio\"\n                                name=\"SS\"\n                            />\n                            <Table responsive>\n                                <thead>\n                                    <tr>\n                                        <th>Artista</th>\n                                    </tr>\n                                </thead>\n                                <tbody />\n                            </Table>\n                        </>\n                    )}\n                    {(currentPaymentForm.value === 6 ||\n                        currentPaymentForm.value === 7) && (\n                        <CheckBox label=\"Bloquear por senha\" name=\"SS\" />\n                    )}\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n\n    @media only screen and (max-width: 1100px) {\n        > button {\n            width: 42%;\n        }\n    }\n\n    margin-top: -15px;\n    margin-bottom: 10px;\n`;\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst Expenses: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar despesa\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de despesas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Nome da despesa\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Valor\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Dia do vencimento\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default Expenses;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 5px;\n    padding: 10px;\n\n    label {\n        font-weight: bold;\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        justify-content: center;\n        align-items: center;\n        color: var(--primary-text-color);\n\n        > video {\n            width: 70%;\n            height: 270px;\n            border: 1px solid var(--primary-border-color);\n            background: #eee;\n            margin-bottom: 10px;\n        }\n\n        &:hover {\n            opacity: 0.7;\n        }\n\n        > img {\n            object-fit: cover;\n            width: 70%;\n            height: 270px;\n            border: 1px solid var(--primary-border-color);\n            background: #eee;\n            aspect-ratio: auto 300 / 169;\n            margin-bottom: 10px;\n        }\n\n        input {\n            display: none;\n        }\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst FileInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n     const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue(ref: HTMLInputElement) {\n                ref.value = '';\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                {label && <p>{label}</p>}\n                {selectedFile && (selectedFile.type.includes('image') ? (\n                    <img\n                        src={URL.createObjectURL(selectedFile)}\n                        alt=\"imagem\"\n                    />\n                ) : (\n                    <video\n                        id=\"video\"\n                        src={URL.createObjectURL(selectedFile)}\n                        controls\n                    />\n                ))}\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*, video/*\"\n                    {...rest}\n                />\n            </label>\n        </Container>\n    );\n};\n\nexport default FileInput;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n\n    @media only screen and (max-width: 1100px) {\n        > button {\n            width: 42%;\n        }\n    }\n    margin-top: -15px;\n    margin-bottom: 10px;\n`;\nexport const AddSkillModal = styled(Modal)`\n    @media only screen and (max-width: 1100px) {\n        .modal-body {\n            padding: 35px;\n\n            > div {\n                flex-direction: column;\n                > div {\n                    width: 100%;\n                }\n            }\n        }\n    }\n    .modal-body {\n        padding: 35px;\n    }\n\n    .searchMenu {\n        display: flex;\n        align-items: center;\n        > :first-child {\n            width: 70%;\n        }\n\n        > :last-child {\n            width: 30%;\n        }\n    }\n`;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport FileInput from '../../../components/UnformFields/VideoInput';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport { Container, AddSkillModal } from './styles';\n\nconst Expenses: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    function handleCreateSSHKeySubmitWithKey(\n        uploadedSSHKey: React.ChangeEvent<HTMLInputElement>,\n    ) {\n        const formData = new FormData();\n\n        /*  setLoading({ uploadSSHKey: true });\n        refButton.current.style.background = '#65c754';\n        const formData = new FormData();\n        formData.append('File', uploadedSSHKey);\n\n        apiClient\n            .post(`/members/${memberUrn}/keys`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then(response => {\n                refreshPage();\n            })\n            .catch(error => {\n                toast.error(error.message);\n                refButton.current.style.background = '#d9534f';\n            })\n            .finally(() => setLoading({ uploadSSHKey: false })); */\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar Campanha\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de Campanha</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <Input\n                        textTransform=\"capitalize\"\n                        name=\"nomeDaCampanha\"\n                        label=\"Nome da campanha*\"\n                    />\n                    <div className=\"twoFieldsGroup\">\n                        <DatePicker label=\"Data inicial*\" name=\"dataInicial\" />\n                        <DatePicker label=\"Data final*\" name=\"dataFinal\" />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <CheckBox\n                            name=\"enviarNoWhatsapp\"\n                            label=\"Enviar via Whatsapp\"\n                        />\n                        <CheckBox\n                            name=\"enviarNoFacebook\"\n                            label=\"Enviar via Facebook\"\n                        />\n                        <CheckBox\n                            name=\"enviarNoInstagram\"\n                            label=\"Enviar via Instagram\"\n                        />\n                    </div>\n                    <FileInput\n                        name=\"midia\"\n                        label=\"Adicionar imagem ou vídeo da campanha (opcional)\"\n                    />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default Expenses;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div``;\n\nexport const PageTitle = styled.div`\n    margin-bottom: 45px;\n\n    > p {\n        font-weight: bold;\n        font-size: 20px;\n        color: var(--base-tertiary-color);\n        width: max-content;\n    }\n\n    > p::after {\n        content: '';\n        display: block;\n        width: 95%;\n        border-bottom: 3px solid #fd854b;\n    }\n`;\n\nexport const CreateEstablismentForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 1100px) {\n        > :first-child {\n            > div {\n                display: flex;\n                flex-direction: column !important;\n                width: 100% !important;\n\n                > div {\n                    display: flex;\n                    width: 100% !important;\n                }\n            }\n        }\n\n        > :nth-child(3) {\n            > div {\n                display: flex;\n                flex-direction: column !important;\n\n                > div {\n                    width: 100% !important;\n                }\n            }\n        }\n\n        > :nth-child(4),\n        > :nth-child(5) {\n            > :first-child {\n                > button {\n                    width: 45%;\n                }\n            }\n        }\n    }\n\n    > :first-child {\n        > :last-child {\n            > :first-child {\n                > textarea {\n                    height: 82%;\n                }\n            }\n        }\n    }\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n\n    > :nth-child(2) {\n        justify-content: center;\n        align-items: center;\n\n        > :nth-child(1) {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 100%;\n        }\n    }\n`;\n\nexport const CustomFieldSet = styled.div`\n    position: relative;\n    border: 1px solid var(--primary-border-color);\n    padding: 25px 15px;\n    background-color: #ffff;\n    display: flex;\n    flex-direction: column;\n    margin: 6px;\n    margin-top: 15px;\n    border-radius: 15px;\n    flex: 1;\n\n    > span {\n        color: var(--primary-text-color);\n        font-size: 12px;\n        margin-left: 15px;\n        margin-top: -4px;\n    }\n\n    &:before {\n        content: 'Taxa administrativa';\n        position: absolute;\n        top: -14px;\n        left: 3px;\n        padding: 0px 10px;\n        background: #fff;\n        font-size: 13px;\n        font-weight: bold;\n        color: var(--primary-text-color);\n    }\n`;\nexport const PageFooter = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    border-top: 0px;\n    margin-top: 40px;\n\n    > :first-child {\n        border: 2px solid var(--primary-border-color);\n        background: none;\n        margin-right: 10px;\n        color: var(--primary-text-color);\n\n        &:hover {\n            color: var(--base-tertiary-color);\n        }\n    }\n\n    button {\n        width: 150px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nexport const WeekScheduleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const DayScheduleItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 15px;\n    border-radius: 10px;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 5px;\n    color: var(--primary-text-color);\n    border: 1px solid var(--primary-border-color);\n    height: max-content;\n    width: 140px;\n\n    > p {\n        margin-bottom: 0px;\n        font-weight: bold;\n        margin-top: -8px;\n    }\n\n    > :nth-child(3) {\n        display: flex;\n        align-items: center;\n\n        > div > div > input {\n            width: 68px;\n        }\n    }\n`;\n","import React, { useRef, useState } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport brasilStatesAndCities from '../../utils/brazilianStates.json';\nimport FieldSet from '../../components/FieldSet';\nimport MaskedInput from '../../components/UnformFields/InputMaskd';\nimport Select from '../../components/UnformFields/Select';\nimport apiClient from '../../services/apiClient';\nimport { cpfMask, cnpjMask } from '../../utils/masks';\nimport CardOperator from './CardOperator';\nimport PaymentOptions from './PaymentOptions';\nimport Expenses from './Expenses';\nimport Campaign from './Campaign';\nimport Input from '../../components/UnformFields/Input';\nimport CheckBox from '../../components/UnformFields/CheckBox';\nimport TextArea from '../../components/UnformFields/TextArea';\n\nimport {\n    Container,\n    PageTitle,\n    PageFooter,\n    CreateEstablismentForm,\n    CustomFieldSet,\n    WeekScheduleContainer,\n    DayScheduleItem,\n} from './styles';\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\nconst Establishment: React.FC = () => {\n    const handleCreateEstablishmentSubmit: SubmitHandler<IFormData> = async data => {\n        console.log(data);\n    };\n\n    const formRef = useRef<FormHandles>(null);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>>([]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    const data = [{ id: 1, nome: 'Aluguel', ano: '1982', vencimento: 'Dia 5' }];\n    const columns = [\n        {\n            name: 'Nome',\n            selector: 'nome',\n            sortable: true,\n        },\n        {\n            name: 'Ano',\n            selector: 'ano',\n            sortable: true,\n            right: true,\n        },\n        {\n            name: 'Vencimento',\n            selector: 'vencimento',\n            sortable: true,\n            right: true,\n        },\n        {\n            name: 'Vencimento',\n            selector: 'vencimento',\n            sortable: true,\n            right: true,\n        },\n    ];\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Estabelecimento</p>\n            </PageTitle>\n            <CreateEstablismentForm\n                id=\"form\"\n                onSubmit={handleCreateEstablishmentSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                    <div className=\"twoFieldsGroup\">\n                        <Input\n                            name=\"numeroCPFouCNPJ\"\n                            label=\"CPF/CNPJ*\"\n                            value={\n                                tipoPessoa.length > 14\n                                    ? cnpjMask(tipoPessoa)\n                                    : cpfMask(tipoPessoa)\n                            }\n                            onChange={e => setTipoPessoa(e.target.value)}\n                        />\n                        <Input name=\"email\" label=\"E-mail\" />\n                    </div>\n\n                    <div className=\"treeFieldsgroup\">\n                        <Input name=\"contato\" label=\"Contato\" />\n                        <MaskedInput\n                            mask=\"(99) 9999-9999\"\n                            name=\"telefone\"\n                            label=\"Telefone\"\n                        />\n                        <MaskedInput\n                            mask=\"(99) 9 9999-9999\"\n                            name=\"celular\"\n                            label=\"Celular\"\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup\">\n                        <TextArea\n                            name=\"descricao\"\n                            label=\"Descrição do estabelecimento\"\n                        />\n                        <CustomFieldSet>\n                            <MaskedInput\n                                mask=\"999%\"\n                                name=\"celular\"\n                                label=\"Valor em percentual\"\n                            />\n                            <span>\n                                É a remuneração paga pela prestação de serviços\n                                de gestão administrativa.\n                            </span>\n                        </CustomFieldSet>\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Horário de funcionamento\">\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"unico\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox name=\"sabado\" label=\"Marcar todos os dias\" />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox name=\"domingo\" label=\"Domingo\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"segunda\" label=\"Segunda\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"terca\" label=\"Terça\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quarta\" label=\"Quarta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quinta\" label=\"Quinta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sexta\" label=\"Sexta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sabado\" label=\"Sábado\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                    if (\n                                        RegExp(/^\\d{5}-\\d{3}$/g).test(\n                                            event.target.value,\n                                        )\n                                    ) {\n                                        getAddressInfo(event.target.value);\n                                    }\n                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input name=\"complemento\" label=\"Complemento\" />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                onChange={value => {\n                                    setCurrentUf(value?.value);\n                                    /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Operação com cartão\">\n                    <CardOperator />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Administradora</th>\n                                <th>Bandeira</th>\n                                <th>Operação</th>\n                                <th>Taxa (%) </th>\n                                <th>Taxa de antecipação (%)</th>\n                                <th>Qtd dias a compensar</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Opções de pagamento\">\n                    <PaymentOptions />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor (R$)</th>\n                                <th>Vencimento</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Aluguel</td>\n                                <td>800,00</td>\n                                <td>Dia 5</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Energia</td>\n                                <td>350,00</td>\n                                <td>Dia 12</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Água</td>\n                                <td>200,00</td>\n                                <td>Dia 10</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Despesas fixas\">\n                    <Expenses />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor (R$)</th>\n                                <th>Vencimento</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Aluguel</td>\n                                <td>800,00</td>\n                                <td>Dia 5</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Energia</td>\n                                <td>350,00</td>\n                                <td>Dia 12</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Água</td>\n                                <td>200,00</td>\n                                <td>Dia 10</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Campanhas ativas\">\n                    <Campaign />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Data inicial</th>\n                                <th>Data final</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Combo cabelo e unhas</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo barba e cabelo</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo esfoliação</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <DataTable\n                    title=\"Despesas Fixas\"\n                    columns={columns}\n                    data={data}\n                    pagination\n                />\n            </CreateEstablismentForm>\n            <PageFooter>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={() => ''}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default Establishment;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport Dashboard from '../pages/Dashboard';\nimport Client from '../pages/Client';\nimport List from '../pages/List';\nimport SignIn from '../pages/SignIn';\nimport Providers from '../pages/Providers';\nimport Products from '../pages/Products';\nimport Services from '../pages/Services';\nimport Schedule from '../pages/Schedule';\nimport Financial from '../pages/Financial';\nimport Stock from '../pages/Stock';\nimport Help from '../pages/Help';\nimport Artist from '../pages/Artist';\nimport Establishment from '../pages/Establishment';\n\nconst Routes: React.FC = () => (\n    <Layout>\n        <Switch>\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/clients\" component={Client} />\n            <Route path=\"/providers\" component={Providers} />\n            <Route path=\"/establishment\" component={Establishment} />\n            <Route path=\"/products\" component={Products} />\n            <Route path=\"/services\" component={Services} />\n            <Route path=\"/list/:type\" component={List} />\n            <Route path=\"/financial\" component={Financial} />\n            <Route path=\"/stock\" component={Stock} />\n            <Route path=\"/schedule\" component={Schedule} />\n            <Route path=\"/artists\" component={Artist} />\n            <Route path=\"/help\" component={Help} />\n        </Switch>\n    </Layout>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport AppRoutes from './app.routes';\n\nconst Routes: React.FC = () => (\n    <BrowserRouter>\n        <AppRoutes />\n    </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/global';\nimport dark from './styles/themes/dark';\nimport ligth from './styles/themes/ligth';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <ThemeProvider theme={ligth}>\n        <Routes />\n        <GlobalStyle />\n    </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}