{"version":3,"sources":["styles/global.ts","styles/themes/ligth.ts","components/Layout/styles.ts","components/Aside/styles.ts","assets/images/logo.png","components/Aside/index.tsx","components/Content/styles.ts","components/Content/index.tsx","components/MainHeader/styles.ts","components/Dropdown/styles.ts","components/Dropdown/index.tsx","components/MainHeader/index.tsx","components/Layout/index.tsx","components/ContentHeader/styles.ts","components/ContentHeader/index.tsx","components/SelectInput/styles.ts","components/SelectInput/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","components/ClientCard/styles.ts","components/ClientCard/index.tsx","components/UnformFields/Input/styles.ts","components/UnformFields/Input/index.tsx","components/UnformFields/Select/styles.ts","components/UnformFields/Select/index.tsx","components/UnformFields/DatePicker/styles.ts","components/UnformFields/DatePicker/index.tsx","utils/masks.ts","pages/Clients/CreateClient/styles.ts","pages/Clients/CreateClient/index.tsx","pages/Clients/styles.ts","pages/Clients/index.tsx","components/HistoryFinanceCard/styles.ts","components/HistoryFinanceCard/index.tsx","pages/List/styles.ts","pages/List/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","components/ProviderCard/styles.ts","components/ProviderCard/index.tsx","pages/Providers/CreateProvider/styles.ts","pages/Providers/CreateProvider/index.tsx","pages/Providers/styles.ts","pages/Providers/index.tsx","pages/Services/CreateService/styles.ts","pages/Services/CreateService/index.tsx","pages/Services/styles.ts","pages/Services/index.tsx","routes/app.routes.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","title","color","primary","secondary","tertiary","white","black","gray","success","info","warning","Container","styled","div","props","theme","Header","header","LogImg","img","MenuContainer","nav","darken","MenuItemLink","Link","h3","Aside","useEffect","$","click","event","target","addClass","siblings","removeClass","src","Logo","alt","id","to","Content","children","Profile","Dropdown","options","className","type","size","map","option","externalLink","href","link","onClick","clickEvent","MainHeader","Layout","TitleContainer","lineColor","Controllers","ContentHeader","SelectInput","value","label","Dashboard","li","ClientCard","nome","telefone","ultimoServico","ticketMedio","Input","name","rest","inputRef","useRef","useField","fieldName","defaultValue","registerField","error","path","ref","current","htmlFor","Select","selectRef","getValue","isMulti","state","classNamePrefix","DatePicker","datepickerRef","useState","date","setDate","clearValue","clear","selected","onChange","customInput","mask","cpfMask","replace","cnpjMask","phoneMask","cepMask","CreateClientForm","Form","CreateClientModal","Modal","CreateClient","show","setShow","formRef","showAddressContainer","setShowAddressContainer","tipoPessoa","setTipoPessoa","phoneNumber","setPhoneNumber","cepNumber","setCepNumber","affiliationOptions","handleClose","onHide","backdrop","Title","Body","onSubmit","data","console","log","dateFormat","length","e","isSearchable","blurInputOnSelect","openMenuOnFocus","Footer","form","ClientList","ClientListHeader","ClientSearchContainer","Clients","searchTerm","setSearchTerm","clientsList","client","Object","values","some","key","toLocaleUpperCase","startsWith","Tag","HistoryFinanceCard","tagColor","subtitle","amount","Filters","List","match","params","useMemo","text","SignIn","ProviderCard","cpfoucnpj","nomeContato","cellPhoneNumber","setCellPhoneNumber","Providers","Routes","component","exact","Clientes","Services","App","ligth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ec60065.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default createGlobalStyle`\n    :root {\n        --base-primary-color: #313130;\n        --base-secondary-color: #FA5B0F;\n        --base-tertiary-color: #ffd449;\n        --base-quaternary-color: #FFFF;\n        --primary-border-color: #ddd;\n        --primary-text-color: #667;\n        --secondary-text-color: #7e7e7e;\n        --tertiary-text-color: #848D95;\n\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        outline: 0;\n    }\n\n    a {\n        text-decoration:none !important;\n    }\n\n    body {\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button {\n        font-family: 'Roboto Slab',  serif;\n        color: var(--primary-text-color);\n        font-size: 14px;\n    }\n\n    html, body, #root {\n        width: 100vw;\n        height: 100vh;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n        font-weight: 500;\n    }\n\n    button {\n        cursor: pointer;\n\n         &:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n        }\n\n            background: none;\n            border: none;\n            border-radius: 20px;\n            font-weight: bold;\n            text-transform: uppercase;\n            font-size: 12px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 200px;\n            height: 35px;\n            transition: background 0.3s;\n\n            color: #fff;\n            background: var(--base-secondary-color);\n\n    }\n\n`;\n","export default {\n    title: 'ligth',\n    color: {\n        primary: '#DCDCDC',\n        secondary: '#FFF',\n        tertiary: '#F5F5F5',\n\n        white: '#000',\n        black: '#FFF',\n        gray: '#BFBFBF',\n\n        success: '#03BB85',\n        info: '#3B5998',\n        warning: '#FF6961',\n    },\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: 250px auto;\n    grid-template-rows: 50px auto;\n    height: 100vh;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n    grid-column: 1;\n    grid-row: 1 / span 2;\n    /*     background-color: ${props => props.theme.color.secondary};\n */\n    /*     border-right: 1px solid ${props => props.theme.color.gray};\n */\n    background: var(--base-primary-color);\n`;\n\nexport const Header = styled.header`\n    padding: 70px;\n    height: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const LogImg = styled.img`\n    width: 150px;\n    height: 60px;\n`;\nexport const MenuContainer = styled.nav`\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n\n    .highlight {\n        background-color: ${darken(0.03, '#313130')};\n        color: #fff;\n    }\n`;\nexport const MenuItemLink = styled(Link)`\n    /*     color: ${props => props.theme.color.info};\n */\n    color: var(--base-quaternary-color);\n    text-decoration: none;\n    padding: 15px;\n    display: flex;\n    align-items: center;\n\n    &:hover {\n        background-color: ${darken(0.03, '#313130')};\n        color: #fff;\n    }\n\n    > svg {\n        width: 20px;\n        height: 20px;\n        margin-right: 10px;\n    }\n`;\n\nexport const Title = styled.h3`\n    display: flex;\n    margin-left: 10px;\n    color: ${props => props.theme.color.white};\n`;\n","export default __webpack_public_path__ + \"static/media/logo.ab10b1a3.png\";","import React, { useEffect } from 'react';\nimport $ from 'jquery';\n\nimport {\n    MdDashboard,\n    MdArrowDownward,\n    MdArrowUpward,\n    MdExitToApp,\n    MdPerson,\n    MdWork,\n} from 'react-icons/md';\n\nimport { AiOutlineCodeSandbox } from 'react-icons/ai';\nimport {\n    Container,\n    Header,\n    MenuContainer,\n    MenuItemLink,\n    LogImg,\n    Title,\n} from './styles';\nimport Logo from '../../assets/images/logo.png';\n\nconst Aside: React.FC = () => {\n    useEffect(() => {\n        $('#menu a').click(event => {\n            $(event.target)\n                .addClass('highlight')\n                .siblings('a')\n                .removeClass('highlight');\n        });\n    }, []);\n\n    return (\n        <Container>\n            <Header>\n                <LogImg src={Logo} alt=\"Logo\" />\n                {/*                 <Title>Beauty Business</Title>\n                 */}\n            </Header>\n            <MenuContainer id=\"menu\">\n                <MenuItemLink to=\"/dashboard\">\n                    <MdDashboard />\n                    Dashboard\n                </MenuItemLink>\n                <MenuItemLink to=\"/clients\">\n                    <MdPerson />\n                    Clientes\n                </MenuItemLink>\n                <MenuItemLink to=\"/providers\">\n                    <AiOutlineCodeSandbox />\n                    Fornecedores\n                </MenuItemLink>\n                <MenuItemLink to=\"/services\">\n                    <MdWork />\n                    Serviços\n                </MenuItemLink>\n                <MenuItemLink to=\"/list/entry-balance\">\n                    <MdArrowUpward />\n                    Entradas\n                </MenuItemLink>\n                <MenuItemLink to=\"/list/exit-balance\">\n                    <MdArrowDownward />\n                    Saidas\n                </MenuItemLink>\n                <MenuItemLink to=\"#\">\n                    <MdExitToApp />\n                    Sair\n                </MenuItemLink>\n            </MenuContainer>\n        </Container>\n    );\n};\n\nexport default Aside;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    /*     background-color: ${props => props.theme.color.primary};\n */\n    color: ${props => props.theme.color.white};\n    grid-column: 2;\n    grid-row: 2;\n    padding: 25px;\n    background: #f8f8f8;\n\n    height: calc(100vh - 70px);\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.color.secondary};\n        border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background-color: ${props => props.theme.color.tertiary};\n    }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst Content: React.FC = ({ children }) => {\n    return <Container>{children}</Container>;\n};\n\nexport default Content;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    /*     background-color: ${props => props.theme.color.secondary};\n */\n    background-color: var(--base-secondary-color);\n    grid-column: 2;\n    grid-row: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0px 10px 0px 20px;\n    /*     border-bottom: 1px solid ${props => props.theme.color.gray};\n */\n`;\n\nexport const Profile = styled.div`\n    > svg {\n        margin-right: -10px;\n    }\n\n    display: flex;\n    align-items: center;\n    color: #fff;\n    /*     color: ${props => props.theme.color.white};\n */\n`;\nexport const Welcome = styled.h3`\n    font-size: 16px;\n    margin-right: 5px;\n    height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    .dropbtn {\n        border: none;\n        background: none;\n        font-weight: bold;\n        color: var(--base-quaternary-color);\n        box-sizing: border-box;\n\n        svg {\n            margin-left: 5px;\n        }\n    }\n\n    .dropdown-content {\n        width: 100%;\n        display: none;\n        position: absolute;\n        background-color: #fff;\n        min-width: 160px;\n        box-shadow: rgba(0, 0, 0, 0.08) 0px 4px 16px 0px,\n            rgba(0, 0, 0, 0.06) 0px 2px 4px 0px;\n    }\n\n    .dropdown-content a {\n        padding: 14px;\n        position: relative;\n        color: var(--base-primary-color);\n        text-decoration: none;\n        display: block;\n    }\n\n    .dropdown-content a:hover {\n        color: var(--base-secondary-color);\n        background: #f8f8f8;\n    }\n\n    .dropdown:hover .dropdown-content {\n        display: block;\n    }\n\n    /* .dropbtn {\n        &:hover {\n            color: var(--base-fibre-color);\n        }\n    } */\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Container } from './styles';\n\ninterface IDropdownProps {\n    options: {\n        title: string;\n        link: string;\n        externalLink: boolean;\n        clickEvent?: () => void;\n    }[];\n    title: string;\n}\n\nconst Dropdown: React.FC<IDropdownProps> = ({ options, title }) => {\n    return (\n        <Container>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" type=\"button\">\n                    {title}\n                    <MdKeyboardArrowDown size={16} />\n                </button>\n                <div className=\"dropdown-content\">\n                    {options.map(option =>\n                        option.externalLink ? (\n                            <a key={option.title} href={option.link}>\n                                {option.title}\n                            </a>\n                        ) : (\n                            <Link\n                                key={option.title}\n                                to={option.link}\n                                onClick={option.clickEvent}\n                            >\n                                {option.title}\n                            </Link>\n                        ),\n                    )}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dropdown;\n\n/*\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n            externalLink: PropTypes.bool.isRequired,\n            clickEvent: PropTypes.func,\n        }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}; */\n","import React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport Toggle from '../Toggle';\nimport { Container, Profile, Welcome } from './styles';\nimport Dropdown from '../Dropdown';\n\nconst MainHeader: React.FC = () => {\n    const profileMenu = [\n        {\n            title: 'Perfil',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste1',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste2',\n            link: '',\n            externalLink: false,\n        },\n    ];\n\n    return (\n        <Container>\n            {/*             <Toggle />\n             */}\n            <div />\n            <Profile>\n                <BsPeopleCircle size={25} />\n                <Dropdown title=\"Anderson Tartari\" options={profileMenu} />\n            </Profile>\n            {/* <Profile>\n                <Welcome>Olá, Anderson.</Welcome>\n            </Profile> */}\n        </Container>\n    );\n};\n\nexport default MainHeader;\n","import React from 'react';\nimport { Container } from './styles';\n\nimport Aside from '../Aside';\nimport Content from '../Content';\nimport MainHeader from '../MainHeader';\n\nconst Layout: React.FC = ({ children }) => {\n    return (\n        <Container>\n            <MainHeader />\n            <Aside />\n            <Content>{children}</Content>\n        </Container>\n    );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\ninterface ITitleContainerProps {\n    lineColor: string;\n}\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n\n    margin-bottom: 25px;\n`;\nexport const TitleContainer = styled.div<ITitleContainerProps>`\n    > h1 {\n        color: ${props => props.theme.color.white};\n\n        &::after {\n            content: '';\n            display: block;\n            width: 55px;\n            border-bottom: 10px solid ${props => props.lineColor};\n        }\n    }\n`;\nexport const Controllers = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import React from 'react';\n\nimport { Container, TitleContainer, Controllers } from './styles';\n\ninterface IContentHeaderProps {\n    title: string;\n    lineColor: string;\n    children: React.ReactNode;\n}\n\nconst ContentHeader: React.FC<IContentHeaderProps> = ({\n    title,\n    lineColor,\n    children,\n}) => {\n    return (\n        <Container>\n            <TitleContainer lineColor={lineColor}>\n                <h1>{title}</h1>\n            </TitleContainer>\n            <Controllers>{children}</Controllers>\n        </Container>\n    );\n};\n\nexport default ContentHeader;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    > select {\n        padding: 7px 10px;\n        border-radius: 5px;\n        margin-left: 7px;\n    }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface ISelectInputProps {\n    options: {\n        value: string | number;\n        label: string | number;\n    }[];\n}\n\nconst SelectInput: React.FC<ISelectInputProps> = ({ options }) => {\n    return (\n        <Container>\n            <select>\n                {options.map(option => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </Container>\n    );\n};\n\nexport default SelectInput;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport { Container } from './styles';\n\nconst Dashboard: React.FC = () => {\n    const options = [\n        {\n            value: 'teste',\n            label: 'teste',\n        },\n        {\n            value: 'teste2',\n            label: 'teste2',\n        },\n        {\n            value: 'teste3',\n            label: 'teste3',\n        },\n    ];\n\n    return (\n        <Container>\n            <ContentHeader title=\"Dashboard\" lineColor=\"#fff\">\n                <SelectInput options={options} />\n            </ContentHeader>\n        </Container>\n    );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\ninterface ITagProps {\n    color: string;\n}\n\nexport const Container = styled.li`\n    background-color: ${props => props.theme.color.tertiary};\n    list-style: none;\n    border-radius: 5px;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.3s;\n\n    position: relative;\n\n    &:hover {\n        opacity: 0.7;\n        transform: translateX(10px);\n    }\n\n    cursor: pointer;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding-left: 10px;\n    }\n`;\n\nexport const Tag = styled.div<ITagProps>`\n    width: 10px;\n    height: 60%;\n    position: absolute;\n    left: 0;\n    background-color: ${props => props.color};\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface IClientCardProps {\n    nome: string;\n    telefone: string;\n    ultimoServico: string;\n    ticketMedio: string;\n}\n\nconst ClientCard: React.FC<IClientCardProps> = ({\n    nome,\n    telefone,\n    ultimoServico,\n    ticketMedio,\n}) => {\n    return (\n        <Container>\n            <span>{nome}</span>\n            <span>{telefone}</span>\n            <span>{ultimoServico}</span>\n            <span>{ticketMedio}</span>\n        </Container>\n    );\n};\n\nexport default ClientCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > input {\n        padding: 10px;\n        margin-bottom: 10px;\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n\n        &:focus {\n            border-color: var(--base-fibre-color);\n        }\n    }\n\n    > label {\n        display: inline;\n        font-weight: bold;\n    }\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\nconst Input: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, defaultValue, registerField, error } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <input\n                id={fieldName}\n                ref={inputRef}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && <span>{error}</span>}\n        </Container>\n    );\n};\nexport default Input;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > input {\n        padding: 10px;\n        margin-bottom: 10px;\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n\n        &:focus {\n            border-color: var(--base-fibre-color);\n        }\n    }\n\n    > label {\n        display: inline;\n        font-weight: bold;\n    }\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useEffect } from 'react';\nimport ReactSelect, {\n    OptionTypeBase,\n    Props as SelectProps,\n} from 'react-select';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props extends SelectProps<OptionTypeBase> {\n    name: string;\n    label?: string;\n}\n\nconst Select: React.FC<Props> = ({ name, label, ...rest }) => {\n    const selectRef = useRef(null);\n    const { fieldName, defaultValue, registerField } = useField(name);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: selectRef.current,\n            getValue: ref => {\n                if (rest.isMulti) {\n                    if (!ref.state.value) {\n                        return [];\n                    }\n                    return ref.state.value.map(\n                        (option: OptionTypeBase) => option.value,\n                    );\n                }\n                if (!ref.state.value) {\n                    return '';\n                }\n                return ref.state.value.label;\n            },\n        });\n    }, [fieldName, registerField, rest.isMulti]);\n\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n\n            <ReactSelect\n                defaultValue={defaultValue}\n                ref={selectRef}\n                classNamePrefix=\"react-select\"\n                {...rest}\n            />\n        </Container>\n    );\n};\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    > input {\n        padding: 10px;\n        margin-bottom: 10px;\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n\n        /*  &:focus {\n            border-color: var(--base-fibre-color);\n        } */\n    }\n    > label {\n        display: inline;\n        font-weight: bold;\n    }\n`;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\nimport MaskedTextInput from 'react-text-mask';\nimport { useField } from '@unform/core';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container } from './styles';\n\ninterface Props extends Omit<ReactDatePickerProps, 'onChange'> {\n    name: string;\n    label?: string;\n}\nconst DatePicker: React.FC<Props> = ({ name, label, ...rest }) => {\n    const datepickerRef = useRef(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [date, setDate] = useState(defaultValue || null);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: datepickerRef.current,\n            path: 'props.selected',\n            clearValue: (ref: any) => {\n                ref.clear();\n            },\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <ReactDatePicker\n                ref={datepickerRef}\n                selected={date}\n                onChange={setDate}\n                customInput={\n                    <MaskedTextInput\n                        type=\"text\"\n                        mask={[\n                            /\\d/,\n                            /\\d/,\n                            '/',\n                            /\\d/,\n                            /\\d/,\n                            '/',\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                        ]}\n                    />\n                }\n                {...rest}\n            />\n        </Container>\n    );\n};\nexport default DatePicker;\n","function cpfMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1');\n}\n\nfunction cnpjMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1/$2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1');\n}\n\nfunction phoneMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(\\d{4})-(\\d)(\\d{4})/, '$1$2-$3')\n        .replace(/(-\\d{4})\\d+?$/, '$1');\n}\n\nfunction cepMask(value: string): string {\n    return value\n        .replace(/\\D/g, '')\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\n        .replace(/(-\\d{3})\\d+?$/, '$1');\n}\n\nexport { cpfMask, cnpjMask, phoneMask, cepMask };\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    button svg {\n        margin-right: 10px;\n    }\n`;\n\nexport const CreateClientForm = styled(Form)`\n    > button {\n        background: none;\n        color: var(--primary-text-color);\n        width: 150px;\n    }\n\n    #rowOne,\n    #rowTwo,\n    #rowTree,\n    #rowFour {\n        display: flex;\n        flex-direction: row;\n    }\n\n    #rowOne,\n    #rowFour {\n        > div {\n            width: 33%;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :nth-child(2) {\n            margin: 0px 20px 0px 20px;\n        }\n    }\n\n    #rowTwo {\n        > div {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :first-child {\n            margin-right: 20px;\n        }\n    }\n\n    #rowTree {\n        > div {\n            width: auto;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :nth-child(2) {\n            width: 50%;\n        }\n\n        > :nth-child(1),\n        > :nth-child(2),\n        > :nth-child(3) {\n            margin: 0px 20px 0px 0px;\n        }\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-title {\n        h5 {\n            padding: 5px;\n            color: var(--base-quaternary-color);\n        }\n\n        /* #plus {\n            margin-left: -12px;\n            margin-bottom: 15px;\n            background: #fff;\n            border: 3px solid var(--base-fibre-color);\n            border-radius: 50%;\n            padding: 2px;\n            color: var(--base-fibre-color);\n        } */\n    }\n\n    .modal-footer {\n        justify-content: flex-end;\n    }\n\n    .modal-header {\n        padding: 5px;\n        background: var(--base-secondary-color);\n    }\n`;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { cpfMask, cnpjMask, phoneMask, cepMask } from '../../../utils/masks';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const states = [\n        { value: 'AL', label: 'Alagoas' },\n        { value: 'AC', label: 'Acre' },\n        { value: 'AP', label: 'Amapá' },\n        { value: 'AM', label: 'Amazonas' },\n        { value: 'BA', label: 'Bahia' },\n        { value: 'CE', label: 'Ceará' },\n        { value: 'DF', label: 'Distrito Federal' },\n        { value: 'ES', label: 'Espírito Santo' },\n        { value: 'GO', label: 'Goías' },\n        { value: 'MA', label: 'Maranhão' },\n        { value: 'MT', label: 'Mato Grosso' },\n        { value: 'MS', label: 'Mato Grosso do Sul' },\n        { value: 'MG', label: 'Minas Gerais' },\n        { value: 'PA', label: 'Pará' },\n        { value: 'PB', label: 'Paraíba' },\n        { value: 'PR', label: 'Paraná' },\n        { value: 'PE', label: 'Pernambuco' },\n        { value: 'PI', label: 'Piauí' },\n        { value: 'RJ', label: 'Rio de Janeiro' },\n        { value: 'RN', label: 'Rio Grande do Norte' },\n        { value: 'RS', label: 'Rio Grande do Sul' },\n        { value: 'RO', label: 'Rondônia' },\n        { value: 'RR', label: 'Roraíma' },\n        { value: 'SC', label: 'Santa Catarina' },\n        { value: 'SP', label: 'São Paulo' },\n        { value: 'SE', label: 'Sergipe' },\n        { value: 'TO', label: 'Tocantins' },\n    ];\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        nome: string;\n        dataDeNascimento: string;\n        numeroCPFouCNPJ: string;\n        email: string;\n        celular: string;\n        sexo: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Cliente\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo cliente</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"nome\" label=\"Nome Completo\" />\n                        <div id=\"rowOne\">\n                            <DatePicker\n                                label=\"Data de nascimento\"\n                                name=\"dataDeNascimento\"\n                                dateFormat=\"dd/MM/yyyy\"\n                            />\n                            {/* <Input\n                                name=\"dataDeNascimento\"\n                                label=\"Data de nascimento\"\n                            /> */}\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF/CNPJ\"\n                                value={\n                                    tipoPessoa.length > 14\n                                        ? cnpjMask(tipoPessoa)\n                                        : cpfMask(tipoPessoa)\n                                }\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Input\n                                name=\"celular\"\n                                label=\"Celular\"\n                                onChange={e => setPhoneNumber(e.target.value)}\n                                value={phoneMask(phoneNumber)}\n                            />\n                        </div>\n                        <div id=\"rowTwo\">\n                            <Input name=\"email\" label=\"E-mail\" />\n                            <Select\n                                label=\"Sexo\"\n                                name=\"sexo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={affiliationOptions[0]}\n                                options={affiliationOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input\n                                        name=\"cep\"\n                                        label=\"CEP\"\n                                        onChange={e =>\n                                            setCepNumber(e.target.value)\n                                        }\n                                        value={cepMask(cepNumber)}\n                                    />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Select\n                                        label=\"Estado\"\n                                        name=\"estado\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={states}\n                                        isSearchable={false}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 15px;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n`;\n\nexport const ClientList = styled.div``;\n\nexport const ClientListHeader = styled.li`\n    > h3 {\n        font-size: 16px;\n    }\n\n    border-bottom: 3px solid var(--primary-border-color);\n\n    list-style: none;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ClientSearchContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > div {\n        margin-top: 20px;\n        padding: 30px;\n        display: flex;\n        justify-content: space-between;\n\n        > div {\n            margin-left: 10px;\n            display: flex;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                margin-bottom: 10px;\n                border: 1px solid #eeee;\n                border-radius: 5px;\n            }\n\n            .searchButton {\n                border-top-left-radius: 0px;\n                border-bottom-left-radius: 0px;\n            }\n        }\n    }\n`;\n","/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport ClientCard from '../../components/ClientCard';\nimport AddClientModal from './CreateClient';\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Clients: React.FC = () => {\n    const clients = [\n        {\n            nome: 'Kamillah',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Gabriel',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Marcos',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Manuela',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '150',\n        },\n        {\n            nome: 'Camila',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Paulo',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Joana',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Maria',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Kleber',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Marta',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Leonardo',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n    ];\n    const [searchTerm, setSearchTerm] = useState('');\n    const [clientsList, setClientsList] = useState(clients);\n\n    function searchClient(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Clientes</h1>\n                <div>\n                    <AddClientModal />\n                    <div>\n                        <input onChange={searchClient} />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            <ClientList>\n                <ClientListHeader>\n                    <h3>Nome</h3>\n                    <h3>Telefone</h3>\n                    <h3>Último Serviço</h3>\n                    <h3>Ticket Médio</h3>\n                </ClientListHeader>\n                {clientsList.map(client =>\n                    Object.values(client).some(key =>\n                        key\n                            .toLocaleUpperCase()\n                            .startsWith(searchTerm.toLocaleUpperCase()),\n                    ) ? (\n                        <ClientCard\n                            key={client.nome}\n                            nome={client.nome}\n                            telefone={client.telefone}\n                            ultimoServico={client.ultimoServico}\n                            ticketMedio={`R$ ${client.ticketMedio}`}\n                        />\n                    ) : (\n                        []\n                    ),\n                )}\n            </ClientList>\n        </Container>\n    );\n};\n\nexport default Clients;\n","import styled from 'styled-components';\n\ninterface ITagProps {\n    color: string;\n}\n\nexport const Container = styled.li`\n    background-color: ${props => props.theme.color.tertiary};\n    list-style: none;\n    border-radius: 5px;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.3s;\n\n    position: relative;\n\n    &:hover {\n        opacity: 0.7;\n        transform: translateX(10px);\n    }\n\n    cursor: pointer;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding-left: 10px;\n    }\n`;\n\nexport const Tag = styled.div<ITagProps>`\n    width: 10px;\n    height: 60%;\n    position: absolute;\n    left: 0;\n    background-color: ${props => props.color};\n`;\n","import React from 'react';\n\nimport { Container, Tag } from './styles';\n\ninterface IHistoryFinanceCardProps {\n    tagColor: string;\n    title: string;\n    subtitle: string;\n    amount: string;\n}\n\nconst HistoryFinanceCard: React.FC<IHistoryFinanceCardProps> = ({\n    tagColor,\n    title,\n    subtitle,\n    amount,\n}) => {\n    return (\n        <Container>\n            <Tag color={tagColor} />\n            <div>\n                <span>{title}</span>\n                <small>{subtitle}</small>\n            </div>\n            <h3>{amount}</h3>\n        </Container>\n    );\n};\n\nexport default HistoryFinanceCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Content = styled.div``;\n\nexport const Filters = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 30px;\n\n    > button {\n        font-size: 18px;\n        font-weight: 500;\n        background: none;\n        border: none;\n        color: ${props => props.theme.color.white};\n        margin: 0 10px;\n        transition: opacity 0.3s;\n\n        &:hover {\n            opacity: 0.7;\n        }\n    }\n\n    .tag-filter-recurrent::after {\n        content: '';\n        margin: auto;\n        display: block;\n        width: 55px;\n        border-bottom: 10px solid ${props => props.theme.color.warning};\n    }\n\n    .tag-filter-eventual::after {\n        content: '';\n        margin: auto;\n        display: block;\n        width: 55px;\n        border-bottom: 10px solid ${props => props.theme.color.success};\n    }\n`;\n","import React, { useMemo } from 'react';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\n\nimport { Container, Content, Filters } from './styles';\n\ninterface IRouteParams {\n    match: {\n        params: {\n            type: string;\n        };\n    };\n}\n\nconst List: React.FC<IRouteParams> = ({ match }) => {\n    const { type } = match.params;\n\n    const title = useMemo(() => {\n        return type === 'entry-balance'\n            ? { text: 'Entradas', lineColor: '#F7931B' }\n            : { text: 'Saídas', lineColor: '#E44C4E' };\n    }, [type]);\n\n    const months = [\n        {\n            value: 7,\n            label: 'Julho',\n        },\n        {\n            value: 8,\n            label: 'Agosto',\n        },\n        {\n            value: 9,\n            label: 'Setembro',\n        },\n    ];\n\n    const years = [\n        {\n            value: 2020,\n            label: 2020,\n        },\n        {\n            value: 2019,\n            label: 2019,\n        },\n        {\n            value: 2018,\n            label: 2018,\n        },\n    ];\n\n    return (\n        <Container>\n            <ContentHeader title={title.text} lineColor={title.lineColor}>\n                <SelectInput options={months} />\n                <SelectInput options={years} />\n            </ContentHeader>\n\n            <Filters>\n                <button className=\"tag-filter-recurrent\" type=\"button\">\n                    Recorrentes\n                </button>\n                <button className=\"tag-filter-eventual\" type=\"button\">\n                    Eventuais\n                </button>\n            </Filters>\n\n            <Content>\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n                <HistoryFinanceCard\n                    tagColor=\"#E44C4E\"\n                    title=\"Conta de Luz\"\n                    subtitle=\"27/07/2020\"\n                    amount=\"R$ 150,00\"\n                />\n            </Content>\n        </Container>\n    );\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst SignIn: React.FC = () => {\n    return <Container>SignIn</Container>;\n};\n\nexport default SignIn;\n","import styled from 'styled-components';\n\ninterface ITagProps {\n    color: string;\n}\n\nexport const Container = styled.li`\n    background-color: ${props => props.theme.color.tertiary};\n    list-style: none;\n    border-radius: 5px;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.3s;\n\n    position: relative;\n\n    &:hover {\n        opacity: 0.7;\n        transform: translateX(10px);\n    }\n\n    cursor: pointer;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding-left: 10px;\n    }\n`;\n\nexport const Tag = styled.div<ITagProps>`\n    width: 10px;\n    height: 60%;\n    position: absolute;\n    left: 0;\n    background-color: ${props => props.color};\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface IProviderCardProps {\n    nome: string;\n    cpfoucnpj: string;\n    nomeContato: string;\n    telefone: string;\n}\n\nconst ProviderCard: React.FC<IProviderCardProps> = ({\n    nome,\n    cpfoucnpj,\n    nomeContato,\n    telefone,\n}) => {\n    return (\n        <Container>\n            <span>{nome}</span>\n            <span>{cpfoucnpj}</span>\n            <span>{nomeContato}</span>\n            <span>{telefone}</span>\n        </Container>\n    );\n};\n\nexport default ProviderCard;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    button svg {\n        margin-right: 10px;\n    }\n`;\n\nexport const CreateClientForm = styled(Form)`\n    > button {\n        background: none;\n        color: var(--primary-text-color);\n        width: 150px;\n    }\n\n    #rowOne,\n    #rowTwo,\n    #rowTree,\n    #rowFour {\n        display: flex;\n        flex-direction: row;\n    }\n\n    #rowOne,\n    #rowFour {\n        > div {\n            width: 33%;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :nth-child(2) {\n            margin: 0px 20px 0px 20px;\n        }\n    }\n\n    #rowTwo {\n        > div {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :first-child {\n            margin-right: 20px;\n        }\n    }\n\n    #rowTree {\n        > div {\n            width: auto;\n            display: flex;\n            flex-direction: column;\n        }\n\n        > :nth-child(2) {\n            width: 50%;\n        }\n\n        > :nth-child(1),\n        > :nth-child(2),\n        > :nth-child(3) {\n            margin: 0px 20px 0px 0px;\n        }\n    }\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-title {\n        h5 {\n            padding: 5px;\n            color: var(--base-quaternary-color);\n        }\n\n        /* #plus {\n            margin-left: -12px;\n            margin-bottom: 15px;\n            background: #fff;\n            border: 3px solid var(--base-fibre-color);\n            border-radius: 50%;\n            padding: 2px;\n            color: var(--base-fibre-color);\n        } */\n    }\n\n    .modal-footer {\n        justify-content: flex-end;\n    }\n\n    .modal-header {\n        padding: 5px;\n        background: var(--base-secondary-color);\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Select from '../../../components/UnformFields/Select';\nimport Input from '../../../components/UnformFields/Input';\nimport { cpfMask, cnpjMask, phoneMask, cepMask } from '../../../utils/masks';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cellPhoneNumber, setCellPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n\n    const states = [\n        { value: 'AL', label: 'Alagoas' },\n        { value: 'AC', label: 'Acre' },\n        { value: 'AP', label: 'Amapá' },\n        { value: 'AM', label: 'Amazonas' },\n        { value: 'BA', label: 'Bahia' },\n        { value: 'CE', label: 'Ceará' },\n        { value: 'DF', label: 'Distrito Federal' },\n        { value: 'ES', label: 'Espírito Santo' },\n        { value: 'GO', label: 'Goías' },\n        { value: 'MA', label: 'Maranhão' },\n        { value: 'MT', label: 'Mato Grosso' },\n        { value: 'MS', label: 'Mato Grosso do Sul' },\n        { value: 'MG', label: 'Minas Gerais' },\n        { value: 'PA', label: 'Pará' },\n        { value: 'PB', label: 'Paraíba' },\n        { value: 'PR', label: 'Paraná' },\n        { value: 'PE', label: 'Pernambuco' },\n        { value: 'PI', label: 'Piauí' },\n        { value: 'RJ', label: 'Rio de Janeiro' },\n        { value: 'RN', label: 'Rio Grande do Norte' },\n        { value: 'RS', label: 'Rio Grande do Sul' },\n        { value: 'RO', label: 'Rondônia' },\n        { value: 'RR', label: 'Roraíma' },\n        { value: 'SC', label: 'Santa Catarina' },\n        { value: 'SP', label: 'São Paulo' },\n        { value: 'SE', label: 'Sergipe' },\n        { value: 'TO', label: 'Tocantins' },\n    ];\n\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Fornecedor\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo fornecedor</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"razaoSocial\" label=\"Razão social\" />\n\n                        <div id=\"rowTwo\">\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF/CNPJ\"\n                                value={\n                                    tipoPessoa.length > 14\n                                        ? cnpjMask(tipoPessoa)\n                                        : cpfMask(tipoPessoa)\n                                }\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Input name=\"email\" label=\"E-mail\" />\n                        </div>\n\n                        <div id=\"rowOne\">\n                            <Input name=\"contato\" label=\"Contato\" />\n                            <Input\n                                name=\"telefone\"\n                                label=\"Telefone\"\n                                onChange={e => setPhoneNumber(e.target.value)}\n                                value={phoneMask(phoneNumber)}\n                            />\n                            <Input\n                                name=\"celular\"\n                                label=\"Celular\"\n                                onChange={e =>\n                                    setCellPhoneNumber(e.target.value)\n                                }\n                                value={phoneMask(cellPhoneNumber)}\n                            />\n                        </div>\n                        <Input name=\"observacoes\" label=\"Observações\" />\n\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input\n                                        name=\"cep\"\n                                        label=\"CEP\"\n                                        onChange={e =>\n                                            setCepNumber(e.target.value)\n                                        }\n                                        value={cepMask(cepNumber)}\n                                    />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Select\n                                        label=\"Estado\"\n                                        name=\"estado\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={states}\n                                        isSearchable={false}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 15px;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n`;\n\nexport const ClientList = styled.div``;\n\nexport const ClientListHeader = styled.li`\n    > h3 {\n        font-size: 16px;\n    }\n\n    border-bottom: 3px solid var(--primary-border-color);\n\n    list-style: none;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ClientSearchContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > div {\n        margin-top: 20px;\n        padding: 30px;\n        display: flex;\n        justify-content: space-between;\n\n        > div {\n            margin-left: 10px;\n            display: flex;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                margin-bottom: 10px;\n                border: 1px solid #eeee;\n                border-radius: 5px;\n            }\n\n            .searchButton {\n                border-top-left-radius: 0px;\n                border-bottom-left-radius: 0px;\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport ProviderCard from '../../components/ProviderCard';\nimport AddProviderModal from './CreateProvider';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Fornecedores</h1>\n                <div>\n                    <AddProviderModal />\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            <ClientList>\n                <ClientListHeader>\n                    <h3>Fornecedor</h3>\n                    <h3>CPF/CNPJ</h3>\n                    <h3>Contato</h3>\n                    <h3>Telefone</h3>\n                </ClientListHeader>\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n            </ClientList>\n        </Container>\n    );\n};\n\nexport default Providers;\n","import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    button svg {\n        margin-right: 10px;\n    }\n`;\n\nexport const CreateClientForm = styled(Form)`\n    > button {\n        background: none;\n        color: var(--primary-text-color);\n        width: 150px;\n    }\n\n    #rowOne,\n    #rowFour {\n        display: flex;\n        flex-direction: row;\n\n        > div {\n            width: 33%;\n        }\n\n        > :nth-child(2) {\n            margin: 0px 20px 0px 20px;\n        }\n    }\n\n    #rowTwo {\n        display: flex;\n        flex-direction: row;\n\n        > div {\n            width: 50%;\n        }\n\n        > :first-child {\n            margin-right: 20px;\n        }\n    }\n\n    #rowTree {\n        display: flex;\n        flex-direction: row;\n\n        > div {\n            width: auto;\n        }\n\n        > :nth-child(2) {\n            width: 50%;\n        }\n\n        > :nth-child(1),\n        > :nth-child(2),\n        > :nth-child(3) {\n            margin: 0px 20px 0px 0px;\n        }\n    }\n\n    div {\n        display: flex;\n        flex-direction: column;\n    }\n\n    /* > input,\n    textarea {\n        padding: 10px;\n        margin-bottom: 10px;\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n\n        &:focus {\n            border-color: var(--base-fibre-color);\n        }\n    }\n\n    > label {\n        display: inline;\n        font-weight: bold;\n    }\n\n    > textarea {\n        resize: none;\n        min-height: 80px;\n    }\n\n    > h5 {\n        margin-top: -6px;\n        color: var(--tertiary-text-color);\n        font-size: 11px;\n    }\n\n    > span {\n        margin-top: -6px;\n        margin-right: 10px;\n        margin-bottom: 10px;\n    }\n\n    input[type='checkbox'] {\n        border: 1px solid var(--primary-border-color);\n        border-radius: 5px;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        appearance: none;\n        cursor: pointer;\n\n        &::before {\n            position: absolute;\n            content: '';\n            top: 2px;\n            left: 6px;\n            width: 8px;\n            height: 14px;\n            border-style: solid;\n            border-color: white;\n            border-width: 0 2px 2px 0;\n            transform: rotate(45deg);\n        }\n\n        &:checked {\n            border: none;\n            background: var(--base-fibre-color);\n        }\n    }\n\n    button {\n        width: 200px;\n    }\n\n    .react-select__control {\n        margin-bottom: 10px;\n    } */\n`;\n\nexport const CreateClientModal = styled(Modal)`\n    .modal-title {\n        h5 {\n            padding: 5px;\n            color: var(--base-quaternary-color);\n        }\n\n        /* #plus {\n            margin-left: -12px;\n            margin-bottom: 15px;\n            background: #fff;\n            border: 3px solid var(--base-fibre-color);\n            border-radius: 50%;\n            padding: 2px;\n            color: var(--base-fibre-color);\n        } */\n    }\n\n    .modal-footer {\n        justify-content: flex-end;\n    }\n\n    .modal-header {\n        padding: 5px;\n        background: var(--base-secondary-color);\n    }\n`;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Input from '../../../components/UnformFields/Input';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Serviço\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo serviço</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    {/*  <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"numeroCPFouCNPJ\" label=\"CNPJ/CPF\" />\n                        <Input name=\"razaoSocial\" label=\"Razão social\" />\n                        <Input name=\"email\" label=\"E-mail\" />\n\n                        <div id=\"rowOne\">\n                            <Input name=\"contato\" label=\"Contato\" />\n                            <Input name=\"telefone\" label=\"Telefone\" />\n                            <Input name=\"celular\" label=\"Celular\" />\n                        </div>\n                        <Input name=\"observacoes\" label=\"Observações\" />\n\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input name=\"cep\" label=\"CEP\" />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Input name=\"estado\" label=\"Estado\" />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm> */}\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 15px;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n`;\n\nexport const ClientList = styled.div``;\n\nexport const ClientListHeader = styled.li`\n    > h3 {\n        font-size: 16px;\n    }\n\n    border-bottom: 3px solid var(--primary-border-color);\n\n    list-style: none;\n    margin: 10px;\n    padding: 12px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ClientSearchContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-secondary-color);\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-secondary-color);\n    }\n\n    > div {\n        margin-top: 20px;\n        padding: 30px;\n        display: flex;\n        justify-content: space-between;\n\n        > div {\n            margin-left: 10px;\n            display: flex;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                margin-bottom: 10px;\n                border: 1px solid #eeee;\n                border-radius: 5px;\n            }\n\n            .searchButton {\n                border-top-left-radius: 0px;\n                border-bottom-left-radius: 0px;\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport ProviderCard from '../../components/ProviderCard';\nimport AddProviderModal from './CreateService';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Serviços</h1>\n                <div>\n                    <AddProviderModal />\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            {/*  <ClientList>\n                <ClientListHeader>\n                    <h3>Fornecedor</h3>\n                    <h3>CPF/CNPJ</h3>\n                    <h3>Contato</h3>\n                    <h3>Telefone</h3>\n                </ClientListHeader>\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n            </ClientList> */}\n        </Container>\n    );\n};\n\nexport default Providers;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport Dashboard from '../pages/Dashboard';\nimport Clientes from '../pages/Clients';\nimport List from '../pages/List';\nimport SignIn from '../pages/SignIn';\nimport Providers from '../pages/Providers';\nimport Services from '../pages/Services';\n\nconst Routes: React.FC = () => (\n    <Layout>\n        <Switch>\n            <Route path=\"/dashboard\" component={Dashboard} exact />\n            <Route path=\"/signin\" component={SignIn} exact />\n            <Route path=\"/clients\" component={Clientes} exact />\n            <Route path=\"/providers\" component={Providers} exact />\n            <Route path=\"/services\" component={Services} exact />\n            <Route path=\"/list/:type\" component={List} exact />\n        </Switch>\n    </Layout>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport AppRoutes from './app.routes';\n\nconst Routes: React.FC = () => (\n    <BrowserRouter>\n        <AppRoutes />\n    </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/global';\nimport dark from './styles/themes/dark';\nimport ligth from './styles/themes/ligth';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <ThemeProvider theme={ligth}>\n        <Routes />\n        <GlobalStyle />\n    </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}