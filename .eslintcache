[{"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts":"1","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx":"2","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx":"3","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts":"4","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts":"5","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx":"6","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts":"7","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx":"8","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx":"9","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx":"10","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx":"11","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx":"12","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts":"13","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts":"14","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts":"15","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx":"16","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts":"17","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx":"18","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx":"19","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx":"20","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts":"21","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx":"22","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx":"23","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts":"24","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx":"25","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx":"26","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts":"27","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts":"28","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts":"29","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts":"30","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx":"31","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx":"32","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx":"33","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx":"34","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx":"35","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx":"36","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx":"37","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts":"38","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts":"39","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts":"40","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts":"41","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts":"42","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx":"43","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts":"44","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts":"45","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/index.tsx":"46","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/styles.ts":"47","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/index.tsx":"48","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/styles.ts":"49","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/dateUtils.ts":"50","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/services/apiClient.ts":"51","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/dark.ts":"52","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/index.tsx":"53","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/index.tsx":"54","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/styles.ts":"55","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/index.tsx":"56","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/styles.ts":"57","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/index.tsx":"58","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/styles.ts":"59","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/index.tsx":"60","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/styles.ts":"61","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/index.tsx":"62","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/styles.ts":"63","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/index.tsx":"64","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/styles.ts":"65","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/index.tsx":"66","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/styles.ts":"67","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/index.tsx":"68","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/index.tsx":"69","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/styles.ts":"70","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/index.tsx":"71","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/styles.ts":"72","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/index.tsx":"73","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/styles.ts":"74","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/index.tsx":"75","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/index.tsx":"76","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/index.tsx":"77","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/styles.ts":"78","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/styles.ts":"79","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/index.tsx":"80","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/styles.ts":"81","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/index.tsx":"82","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/styles.ts":"83","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/index.tsx":"84","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/styles.ts":"85","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/index.tsx":"86","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/styles.ts":"87","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/index.tsx":"88","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/styles.ts":"89","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/index.tsx":"90","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/styles.ts":"91","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/index.tsx":"92","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/styles.ts":"93","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/index.tsx":"94","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/styles.ts":"95","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/index.tsx":"96","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/styles.ts":"97","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/index.tsx":"98","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/index.tsx":"99","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/index.tsx":"100","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/styles.ts":"101","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/styles.ts":"102","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/AddInputs/index.tsx":"103","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/AddInputs/styles.ts":"104","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/AddOutputs/index.tsx":"105","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/AddOutputs/styles.ts":"106","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/WebcamCapture/index.tsx":"107","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/WebcamCapture/styles.ts":"108","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/EmptyList/index.tsx":"109","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/EmptyList/styles.ts":"110","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/Home/index.tsx":"111","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/Home/styles.ts":"112","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/Home/index.tsx":"113","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/Home/styles.ts":"114","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Schedule/index.tsx":"115","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Schedule/styles.ts":"116","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/Home/index.tsx":"117","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/Home/styles.ts":"118","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/index.tsx":"119","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/styles.ts":"120","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/CreateComanda/index.tsx":"121","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/CreateComanda/styles.ts":"122","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/index.tsx":"123","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/styles.ts":"124","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/ViewComanda/index.tsx":"125","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/ViewComanda/styles.ts":"126","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/index.tsx":"127","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/styles.ts":"128","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/AddOutputs/index.tsx":"129","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/AddOutputs/styles.ts":"130","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/PaymentDelete/index.tsx":"131","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/PaymentDelete/styles.ts":"132","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/EditOutputs/index.tsx":"133","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/EditOutputs/styles.ts":"134","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comissões/index.tsx":"135","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comissões/styles.ts":"136","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/index.tsx":"137","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/styles.ts":"138","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/Exceptions/index.tsx":"139","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/Exceptions/styles.ts":"140","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/index.tsx":"141","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/index.tsx":"142","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/styles.ts":"143","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/NumericInput/index.tsx":"144","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/NumericInput/styles.ts":"145","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/index.tsx":"146","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/styles.ts":"147","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/index.tsx":"148","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/styles.ts":"149","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryXML/index.tsx":"150","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryXML/styles.ts":"151","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryManual/index.tsx":"152","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryManual/styles.ts":"153","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/StockExit/index.tsx":"154","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/StockExit/styles.ts":"155","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Promotions/index.tsx":"156","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Promotions/styles.ts":"157","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Purchases/index.tsx":"158","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Purchases/styles.ts":"159","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/index.tsx":"160","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/Questions/index.tsx":"161","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/Questions/styles.ts":"162"},{"size":298,"mtime":1611074008512,"results":"163","hashOfConfig":"164"},{"size":240,"mtime":1636640283048,"results":"165","hashOfConfig":"164"},{"size":186,"mtime":1611091145399,"results":"166","hashOfConfig":"164"},{"size":559,"mtime":1618422055734,"results":"167","hashOfConfig":"164"},{"size":1697,"mtime":1615347225641,"results":"168","hashOfConfig":"164"},{"size":2352,"mtime":1631823894270,"results":"169","hashOfConfig":"164"},{"size":418,"mtime":1617919036432,"results":"170","hashOfConfig":"164"},{"size":147,"mtime":1613050326534,"results":"171","hashOfConfig":"164"},{"size":1541,"mtime":1633669562565,"results":"172","hashOfConfig":"164"},{"size":3533,"mtime":1611115585188,"results":"173","hashOfConfig":"164"},{"size":449,"mtime":1630029391839,"results":"174","hashOfConfig":"164"},{"size":12944,"mtime":1634219377310,"results":"175","hashOfConfig":"164"},{"size":1453,"mtime":1617146195822,"results":"176","hashOfConfig":"177"},{"size":635,"mtime":1611094032908,"results":"178","hashOfConfig":"164"},{"size":1560,"mtime":1615378942896,"results":"179","hashOfConfig":"164"},{"size":2719,"mtime":1630628448785,"results":"180","hashOfConfig":"164"},{"size":386,"mtime":1616560370953,"results":"181","hashOfConfig":"164"},{"size":1347,"mtime":1619110284769,"results":"182","hashOfConfig":"164"},{"size":450,"mtime":1621476151230,"results":"183","hashOfConfig":"164"},{"size":19324,"mtime":1631823706687,"results":"184","hashOfConfig":"164"},{"size":2526,"mtime":1622150312991,"results":"185","hashOfConfig":"164"},{"size":1815,"mtime":1611709794311,"results":"186","hashOfConfig":"164"},{"size":389,"mtime":1636145827267,"results":"187","hashOfConfig":"164"},{"size":5574,"mtime":1637861232732,"results":"188","hashOfConfig":"164"},{"size":6309,"mtime":1620244470668,"results":"189","hashOfConfig":"164"},{"size":169,"mtime":1611062486761,"results":"190","hashOfConfig":"164"},{"size":3432,"mtime":1621274858821,"results":"191","hashOfConfig":"164"},{"size":80,"mtime":1611060067350,"results":"192","hashOfConfig":"164"},{"size":938,"mtime":1611112477862,"results":"193","hashOfConfig":"164"},{"size":1516,"mtime":1621429909774,"results":"194","hashOfConfig":"164"},{"size":567,"mtime":1618195316965,"results":"195","hashOfConfig":"164"},{"size":591,"mtime":1611115168078,"results":"196","hashOfConfig":"164"},{"size":1161,"mtime":1617149443280,"results":"197","hashOfConfig":"177"},{"size":603,"mtime":1612221397110,"results":"198","hashOfConfig":"164"},{"size":545,"mtime":1611124910415,"results":"199","hashOfConfig":"177"},{"size":16565,"mtime":1631823706687,"results":"200","hashOfConfig":"164"},{"size":1350,"mtime":1618529841182,"results":"201","hashOfConfig":"164"},{"size":183,"mtime":1611089866713,"results":"202","hashOfConfig":"164"},{"size":813,"mtime":1611110368258,"results":"203","hashOfConfig":"164"},{"size":813,"mtime":1611124692513,"results":"204","hashOfConfig":"177"},{"size":1203,"mtime":1618529206453,"results":"205","hashOfConfig":"164"},{"size":1908,"mtime":1615300548624,"results":"206","hashOfConfig":"164"},{"size":1937,"mtime":1631241333503,"results":"207","hashOfConfig":"164"},{"size":1083,"mtime":1617111231209,"results":"208","hashOfConfig":"164"},{"size":1558,"mtime":1619146955282,"results":"209","hashOfConfig":"164"},{"size":1881,"mtime":1633667233254,"results":"210","hashOfConfig":"164"},{"size":2328,"mtime":1629417821986,"results":"211","hashOfConfig":"164"},{"size":1978,"mtime":1619629607509,"results":"212","hashOfConfig":"164"},{"size":766,"mtime":1616566401215,"results":"213","hashOfConfig":"164"},{"size":717,"mtime":1612929460577,"results":"214","hashOfConfig":"164"},{"size":638,"mtime":1613601722637,"results":"215","hashOfConfig":"164"},{"size":436,"mtime":1613624011713,"results":"216","hashOfConfig":"217"},{"size":447,"mtime":1621597647941,"results":"218","hashOfConfig":"164"},{"size":14487,"mtime":1631370201872,"results":"219","hashOfConfig":"164"},{"size":1582,"mtime":1615340883489,"results":"220","hashOfConfig":"164"},{"size":312,"mtime":1615223014856,"results":"221","hashOfConfig":"164"},{"size":615,"mtime":1622782162530,"results":"222","hashOfConfig":"164"},{"size":2078,"mtime":1628222553342,"results":"223","hashOfConfig":"164"},{"size":930,"mtime":1616560849300,"results":"224","hashOfConfig":"164"},{"size":238,"mtime":1614123532896,"results":"225","hashOfConfig":"217"},{"size":464,"mtime":1614134130500,"results":"226","hashOfConfig":"217"},{"size":2009,"mtime":1614742889849,"results":"227","hashOfConfig":"164"},{"size":1588,"mtime":1619147026618,"results":"228","hashOfConfig":"164"},{"size":500,"mtime":1611078872116,"results":"229","hashOfConfig":"230"},{"size":493,"mtime":1613149633360,"results":"231","hashOfConfig":"230"},{"size":184,"mtime":1616445783318,"results":"232","hashOfConfig":"164"},{"size":80,"mtime":1616441334100,"results":"233","hashOfConfig":"164"},{"size":574,"mtime":1621471175900,"results":"234","hashOfConfig":"164"},{"size":2450,"mtime":1634218292938,"results":"235","hashOfConfig":"164"},{"size":2329,"mtime":1621445057838,"results":"236","hashOfConfig":"164"},{"size":28260,"mtime":1631823706687,"results":"237","hashOfConfig":"164"},{"size":4686,"mtime":1619182083052,"results":"238","hashOfConfig":"164"},{"size":2118,"mtime":1622810199232,"results":"239","hashOfConfig":"164"},{"size":519,"mtime":1617138729272,"results":"240","hashOfConfig":"164"},{"size":773,"mtime":1621471196456,"results":"241","hashOfConfig":"164"},{"size":7581,"mtime":1621455663349,"results":"242","hashOfConfig":"164"},{"size":26912,"mtime":1631823706687,"results":"243","hashOfConfig":"164"},{"size":2452,"mtime":1621455697741,"results":"244","hashOfConfig":"164"},{"size":2857,"mtime":1622782893229,"results":"245","hashOfConfig":"164"},{"size":4794,"mtime":1619754595865,"results":"246","hashOfConfig":"164"},{"size":2256,"mtime":1619754637837,"results":"247","hashOfConfig":"164"},{"size":2270,"mtime":1617161252112,"results":"248","hashOfConfig":"164"},{"size":519,"mtime":1617161285020,"results":"249","hashOfConfig":"164"},{"size":1022,"mtime":1617195660831,"results":"250","hashOfConfig":"164"},{"size":578,"mtime":1617195010391,"results":"251","hashOfConfig":"164"},{"size":1846,"mtime":1617195500994,"results":"252","hashOfConfig":"164"},{"size":803,"mtime":1617195605159,"results":"253","hashOfConfig":"164"},{"size":21824,"mtime":1631823706687,"results":"254","hashOfConfig":"164"},{"size":4194,"mtime":1620309232951,"results":"255","hashOfConfig":"164"},{"size":5104,"mtime":1619156502164,"results":"256","hashOfConfig":"164"},{"size":902,"mtime":1619714344337,"results":"257","hashOfConfig":"164"},{"size":2618,"mtime":1619161109457,"results":"258","hashOfConfig":"164"},{"size":902,"mtime":1619714355661,"results":"259","hashOfConfig":"164"},{"size":4115,"mtime":1619714441950,"results":"260","hashOfConfig":"164"},{"size":901,"mtime":1619714363633,"results":"261","hashOfConfig":"164"},{"size":2293,"mtime":1631102891569,"results":"262","hashOfConfig":"164"},{"size":978,"mtime":1619705602348,"results":"263","hashOfConfig":"164"},{"size":1127,"mtime":1630029347932,"results":"264","hashOfConfig":"164"},{"size":2427,"mtime":1630029347928,"results":"265","hashOfConfig":"164"},{"size":2415,"mtime":1630029347932,"results":"266","hashOfConfig":"164"},{"size":3461,"mtime":1630029347928,"results":"267","hashOfConfig":"164"},{"size":3461,"mtime":1630029347932,"results":"268","hashOfConfig":"164"},{"size":8040,"mtime":1631823706687,"results":"269","hashOfConfig":"164"},{"size":816,"mtime":1630029347928,"results":"270","hashOfConfig":"164"},{"size":7097,"mtime":1631823706687,"results":"271","hashOfConfig":"164"},{"size":814,"mtime":1630029347932,"results":"272","hashOfConfig":"164"},{"size":912,"mtime":1621434839150,"results":"273","hashOfConfig":"177"},{"size":80,"mtime":1621433617615,"results":"274","hashOfConfig":"177"},{"size":451,"mtime":1621455492180,"results":"275","hashOfConfig":"164"},{"size":397,"mtime":1621455574900,"results":"276","hashOfConfig":"164"},{"size":7491,"mtime":1621476008277,"results":"277","hashOfConfig":"164"},{"size":2454,"mtime":1621458098863,"results":"278","hashOfConfig":"164"},{"size":3638,"mtime":1621597436725,"results":"279","hashOfConfig":"164"},{"size":2454,"mtime":1621476963503,"results":"280","hashOfConfig":"164"},{"size":35451,"mtime":1631823706687,"results":"281","hashOfConfig":"164"},{"size":8637,"mtime":1643370062206,"results":"282","hashOfConfig":"164"},{"size":3616,"mtime":1621599130467,"results":"283","hashOfConfig":"164"},{"size":2454,"mtime":1621597435193,"results":"284","hashOfConfig":"164"},{"size":7515,"mtime":1630029347928,"results":"285","hashOfConfig":"164"},{"size":2241,"mtime":1631851818765,"results":"286","hashOfConfig":"164"},{"size":21891,"mtime":1643931315923,"results":"287","hashOfConfig":"164"},{"size":5393,"mtime":1643931572846,"results":"288","hashOfConfig":"164"},{"size":15805,"mtime":1630029347924,"results":"289","hashOfConfig":"164"},{"size":6691,"mtime":1630029347924,"results":"290","hashOfConfig":"164"},{"size":8209,"mtime":1631823706687,"results":"291","hashOfConfig":"164"},{"size":4361,"mtime":1630029347924,"results":"292","hashOfConfig":"164"},{"size":9172,"mtime":1630029347924,"results":"293","hashOfConfig":"164"},{"size":3360,"mtime":1630029347924,"results":"294","hashOfConfig":"164"},{"size":6879,"mtime":1631823706687,"results":"295","hashOfConfig":"164"},{"size":814,"mtime":1630029347924,"results":"296","hashOfConfig":"164"},{"size":1937,"mtime":1630029347924,"results":"297","hashOfConfig":"164"},{"size":343,"mtime":1630029347924,"results":"298","hashOfConfig":"164"},{"size":11967,"mtime":1631823706687,"results":"299","hashOfConfig":"164"},{"size":1753,"mtime":1630029347924,"results":"300","hashOfConfig":"164"},{"size":10469,"mtime":1630029347928,"results":"301","hashOfConfig":"164"},{"size":3114,"mtime":1631851834882,"results":"302","hashOfConfig":"164"},{"size":6473,"mtime":1629439306736,"results":"303","hashOfConfig":"164"},{"size":902,"mtime":1629434756982,"results":"304","hashOfConfig":"164"},{"size":5105,"mtime":1629438901469,"results":"305","hashOfConfig":"306"},{"size":952,"mtime":1629438734252,"results":"307","hashOfConfig":"306"},{"size":1279,"mtime":1633656004847,"results":"308","hashOfConfig":"164"},{"size":2842,"mtime":1631823664031,"results":"309","hashOfConfig":"164"},{"size":2201,"mtime":1616510308971,"results":"310","hashOfConfig":"164"},{"size":2758,"mtime":1631835700685,"results":"311","hashOfConfig":"164"},{"size":1265,"mtime":1632489648035,"results":"312","hashOfConfig":"164"},{"size":6061,"mtime":1631842981488,"results":"313","hashOfConfig":"164"},{"size":2440,"mtime":1631843368435,"results":"314","hashOfConfig":"164"},{"size":5023,"mtime":1631845041691,"results":"315","hashOfConfig":"164"},{"size":2440,"mtime":1631843737429,"results":"316","hashOfConfig":"164"},{"size":19202,"mtime":1631842529423,"results":"317","hashOfConfig":"164"},{"size":2369,"mtime":1631278497598,"results":"318","hashOfConfig":"164"},{"size":10042,"mtime":1631854306980,"results":"319","hashOfConfig":"164"},{"size":2819,"mtime":1631821426393,"results":"320","hashOfConfig":"164"},{"size":10173,"mtime":1632490033773,"results":"321","hashOfConfig":"164"},{"size":3061,"mtime":1632489938392,"results":"322","hashOfConfig":"164"},{"size":9352,"mtime":1633658404816,"results":"323","hashOfConfig":"164"},{"size":2167,"mtime":1633658476391,"results":"324","hashOfConfig":"164"},{"size":4166,"mtime":1633659670262,"results":"325","hashOfConfig":"164"},{"size":2230,"mtime":1633659207373,"results":"326","hashOfConfig":"164"},{"size":415,"mtime":1633669515101,"results":"327","hashOfConfig":"164"},{"size":7553,"mtime":1633672779123,"results":"328","hashOfConfig":"164"},{"size":429,"mtime":1633673272783,"results":"329","hashOfConfig":"164"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"8hrtkm",{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"332"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"332"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"332"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"xb5dog",{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"332"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"332"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"332"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"332"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"332"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"332"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"332"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"332"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"332"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"332"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"332"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"332"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"332"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},"hliahr",{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"332"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"332"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"332"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1d9ly5v",{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"332"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"332"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"332"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"332"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"332"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"332"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"332"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"332"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"332"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"332"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"332"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"332"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"332"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"332"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"332"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"332"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"332"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"332"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"332"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"332"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"587"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"587"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"332"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"332"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"332"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"332"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"332"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"332"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"332"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"332"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"332"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"332"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"332"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"332"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"332"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"332"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"667"},"1yqdauu",{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"667"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"332"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"332"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"332"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"332"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"332"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"332"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"332"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"332"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"332"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"332"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"332"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"332"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts",[],["726","727","728","729","730"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx",["731","732","733","734"],"/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label?: string;\n    customMask?: (value: string) => string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    customMask,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [value, setValue] = useState('');\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <input\n                id={fieldName}\n                ref={inputRef}\n                /*   value={customMask ? customMask(value) : undefined}\n                onChange={event =>\n                    customMask ? setValue(event.target.value) : undefined\n                } */\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx",["735"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Providers: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/services\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx",["736","737","738","739"],"/* eslint-disable no-alert */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/named */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {\n    MdDashboard,\n    MdArrowDownward,\n    MdArrowUpward,\n    MdExitToApp,\n    MdEventNote,\n    MdWork,\n    MdBorderColor,\n    MdAttachMoney,\n    MdLiveHelp,\n    MdStore,\n    MdGroup,\n    MdPerson,\n    MdClear,\n    MdInsertDriveFile,\n    MdLocalGroceryStore,\n    MdChat,\n} from 'react-icons/md';\nimport { BsQuestionCircle } from 'react-icons/bs';\nimport { IoMdCalculator, IoMdPricetags } from 'react-icons/io';\nimport {\n    RiTruckFill,\n    RiHandSanitizerFill,\n    RiInboxArchiveLine,\n    RiInboxUnarchiveLine,\n} from 'react-icons/ri';\nimport { FiYoutube } from 'react-icons/fi';\nimport { AiOutlineCodeSandbox, AiOutlineYoutube } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { FaCashRegister, FaMoneyCheckAlt } from 'react-icons/fa';\nimport MenuItemLink, { IMenuItemProps } from './MenuItem';\n\nimport { Container, Header, MenuContainer, LogImg, Footer } from './styles';\nimport Logo from '../../assets/images/logo.png';\n\nconst Aside: React.FC = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const MenuItens = [\n        {\n            title: 'Agenda',\n            icon: MdEventNote,\n            link: '/schedule',\n            subItens: [],\n        },\n        {\n            title: 'Dashboard',\n            icon: MdDashboard,\n            link: '/dashboard',\n            subItens: [\n                { title: 'Vendas', icon: MdPerson, link: '/' },\n                { title: 'Previsões', icon: MdPerson, link: '/' },\n                { title: 'Pendências', icon: MdPerson, link: '/' },\n                { title: 'Despesas', icon: MdPerson, link: '/' },\n                { title: 'Lucro', icon: MdPerson, link: '/' },\n                { title: 'Comissões', icon: MdPerson, link: '/' },\n                { title: 'Rateio', icon: MdPerson, link: '/' },\n                { title: 'Vales', icon: MdPerson, link: '/' },\n                { title: 'Débitos', icon: MdPerson, link: '/' },\n                { title: 'Compras', icon: MdPerson, link: '/' },\n                { title: 'Fixo', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Artistas', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Clientes', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Produtos', icon: MdPerson, link: '/' },\n                { title: 'Top 10 Serviços', icon: MdPerson, link: '/' },\n            ],\n        },\n        {\n            title: 'Cadastros',\n            icon: MdBorderColor,\n            link: '/off',\n            subItens: [\n                { title: 'Artistas', icon: MdPerson, link: '/artists' },\n                {\n                    title: 'Clientes',\n                    icon: MdGroup,\n                    link: '/clients',\n                    subItens: [\n                        {\n                            title: 'teste2',\n                            icon: MdEventNote,\n                            link: '#',\n                            subItens: [\n                                {\n                                    title: 'teste',\n                                    icon: RiTruckFill,\n                                    link: '#',\n                                },\n                            ],\n                        },\n                        {\n                            title: 'teste',\n                            icon: MdEventNote,\n                            link: '#',\n                        },\n                    ],\n                },\n                {\n                    title: 'Fornecedores',\n                    icon: RiTruckFill,\n                    link: '/providers',\n                },\n                {\n                    title: 'Produtos',\n                    icon: RiHandSanitizerFill,\n                    link: '/products',\n                },\n                { title: 'Serviços', icon: MdWork, link: '/services' },\n            ],\n        },\n        {\n            title: 'Financeiro',\n            icon: MdAttachMoney,\n            link: '/off',\n            subItens: [\n                {\n                    title: 'Entradas, recebimentos e vouchers',\n                    icon: MdArrowUpward,\n                    link: '/financial/inputs',\n                },\n                {\n                    title: 'Saídas, retiradas e vales',\n                    icon: MdArrowDownward,\n                    link: '/financial/outputs',\n                },\n                {\n                    title: 'Comandas',\n                    icon: MdInsertDriveFile,\n                    link: '/financial/comandas',\n                },\n                {\n                    title: 'Caixa',\n                    icon: FaCashRegister,\n                    link: '/financial/cash',\n                },\n                {\n                    title: 'Contas a pagar',\n                    icon: FaMoneyCheckAlt,\n                    link: '/financial/accounts_payable',\n                },\n                {\n                    title: 'Comissões',\n                    icon: IoMdCalculator,\n                    link: '/financial/commissions',\n                },\n            ],\n        },\n        {\n            title: 'Estoque',\n            icon: AiOutlineCodeSandbox,\n            link: '/off',\n            subItens: [\n                {\n                    title: 'Entrada',\n                    icon: RiInboxArchiveLine,\n                    link: '/stock/management/input',\n                },\n                {\n                    title: 'Saída',\n                    icon: RiInboxUnarchiveLine,\n                    link: '/stock/management/output',\n                },\n                {\n                    title: 'Sugestão de promoção',\n                    icon: IoMdPricetags,\n                    link: '/stock/promotions',\n                },\n                {\n                    title: 'Sugestão de compras',\n                    icon: MdLocalGroceryStore,\n                    link: '/stock/purchases',\n                },\n            ],\n        },\n        {\n            title: 'Estabelecimento',\n            icon: MdStore,\n            link: '/establishment',\n            subItens: [],\n        },\n        {\n            title: 'Ajuda',\n            icon: MdLiveHelp,\n            link: '/ajuda',\n            subItens: [\n                {\n                    title: 'Chat suporte',\n                    icon: MdChat,\n                    link: '/',\n                },\n                {\n                    title: 'Perguntas Frequentes',\n                    icon: BsQuestionCircle,\n                    link: '/help/questions',\n                },\n                {\n                    title: 'Canal Youtube',\n                    icon: FiYoutube,\n                    link:\n                        'https://www.youtube.com/channel/UCxX8CSPae6OZIJf8uDc7dMg',\n                    externalLink: true,\n                },\n            ],\n        },\n        /*  { title: 'Entradas', icon: MdArrowUpward, link: '/list/entry-balance' },\n        // eslint-disable-next-line prettier/prettier\n        { title: 'Saídas', icon: MdArrowDownward, link:'/list/exit-balance' }, */\n        // eslint-disable-next-line prettier/prettier\n    ];\n\n    function searchItem(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value.toLocaleUpperCase());\n    }\n\n    function searchSubItens(currentItem: IMenuItemProps) {\n        currentItem.subItens?.some(\n            subItem =>\n                subItem.title.toLocaleUpperCase().startsWith(searchTerm) ||\n                subItem.subItens?.some(sub =>\n                    sub.title.toLocaleUpperCase().startsWith(searchTerm),\n                ),\n        );\n    }\n\n    useEffect(() => {\n        const menuItemList = Array.from(\n            document.getElementsByClassName(\n                'item',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const subMenuItemList = Array.from(\n            document.getElementsByClassName(\n                'subItem',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        subMenuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n\n        menuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                menuItemList.forEach(ele => {\n                    const panel = ele.nextElementSibling as Element;\n\n                    if (ele !== item && ele.classList.contains('active')) {\n                        panel.removeAttribute('style');\n                        ele.classList.remove('active');\n                        ele.classList.remove('openAnimation');\n                        ele.classList.add('closeAnimation');\n                    }\n                });\n\n                const panel = item.nextElementSibling as Element;\n\n                if (item.classList.contains('active')) {\n                    panel.removeAttribute('style');\n                    item.classList.remove('active');\n                    item.classList.remove('openAnimation');\n                    item.classList.add('closeAnimation');\n                } else {\n                    panel.setAttribute('style', 'max-height:500px');\n                    item.classList.add('active');\n                    item.classList.remove('closeAnimation');\n                    item.classList.add('openAnimation');\n                }\n\n                // Close sidemenu on click\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n    }, []);\n\n    return (\n        <Container id=\"sideMenu\">\n            <div id=\"close-icon\">\n                <MdClear size={22} />\n            </div>\n            <div>\n                <Header>\n                    <LogImg src={Logo} alt=\"Logo\" />\n                    {/*                     <input onChange={searchItem} />\n                     */}\n                </Header>\n                <PerfectScrollbar>\n                    {/*  <MenuContainer>\n                        {MenuItens.map(item => (\n                            <MenuItemLink\n                                key={item.title}\n                                title={item.title}\n                                icon={item.icon}\n                                link={item.link}\n                                grouppedItem\n                                subItens={item.subItens}\n                            />\n                    ))}\n                    </MenuContainer> */}\n                    <MenuContainer id=\"menuContainer\">\n                        {MenuItens.map(item => (\n                            /*  item.title\n                                .toLocaleUpperCase()\n                                .startsWith(searchTerm) ||\n                            (item.subItens &&\n                                item.subItens.some(subItem =>\n                                    subItem.title\n                                        .toLocaleUpperCase()\n                                        .startsWith(searchTerm),\n                                )) ? ( */\n                            <MenuItemLink\n                                key={item.title}\n                                title={item.title}\n                                icon={item.icon}\n                                link={item.link}\n                                grouppedItem\n                                subItens={item.subItens}\n                            />\n                            /* ) : (\n                                []\n                            ), */\n                        ))}\n                    </MenuContainer>\n                </PerfectScrollbar>\n            </div>\n            <Footer>\n                <MdExitToApp />\n                Sair\n            </Footer>\n        </Container>\n    );\n};\n\nexport default Aside;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts",[],["740","741","742","743","744"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx",["745"],"/* eslint-disable no-shadow */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactSelect, {\n    OptionTypeBase,\n    Props as SelectProps,\n} from 'react-select';\nimport { useField } from '@unform/core';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props extends SelectProps<OptionTypeBase> {\n    name: string;\n    label?: string;\n}\n\nconst Select: React.FC<Props> = ({ name, label, placeholder, ...rest }) => {\n    const selectRef = useRef(null);\n    const { fieldName, defaultValue, registerField, error } = useField(name);\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: selectRef.current,\n            setValue: (ref, value) => {\n                /*                 ref.state.value = value;\n                 */ setValue(value);\n            },\n            clearValue: ref => {\n                /*                 ref.state.value = '';\n                 */ setValue('');\n            },\n            getValue: ref => {\n                if (rest.isMulti) {\n                    if (!ref.state.value) {\n                        return [];\n                    }\n                    return ref.state.value.map(\n                        (option: OptionTypeBase) => option.value,\n                    );\n                }\n                if (!ref.state.value) {\n                    return '';\n                }\n                return ref.state.value;\n            },\n        });\n    }, [fieldName, registerField, rest.isMulti]);\n\n    return (\n        <Container>\n            {label && (\n                <label\n                    style={{ color: error ? '#db3b21' : '' }}\n                    htmlFor={fieldName}\n                >\n                    {label}\n                </label>\n            )}\n\n            <ReactSelect\n                escapeClearsValue\n                id={fieldName}\n                className={error ? 'react-select__value-container--error' : ''}\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                value={value}\n                placeholder={placeholder}\n                ref={selectRef}\n                onChange={value => setValue(value)}\n                classNamePrefix=\"react-select\"\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\n\nexport default Select;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx",["746"],"import React, { ClassType, useEffect } from 'react';\nimport { MdMenu } from 'react-icons/md';\nimport { Container } from './styles';\n\nimport Aside from '../Aside';\nimport Content from '../Content';\nimport MainHeader from '../MainHeader';\n\nconst Layout: React.FC = ({ children }) => {\n    useEffect(() => {\n        const menuIconEl = document.getElementById('menu-icon') as HTMLElement;\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        const sidenavCloseEl = document.getElementById(\n            'close-icon',\n        ) as HTMLElement;\n\n        function toggleClassName(el: Element, className: string) {\n            if (el.classList.contains(className)) {\n                el.classList.remove(className);\n            } else {\n                el.classList.add(className);\n            }\n        }\n\n        menuIconEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n\n        sidenavCloseEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n    }, []);\n\n    return (\n        <Container>\n            <div id=\"menu-icon\">\n                <MdMenu size={22} />\n            </div>\n            <MainHeader />\n            <Aside />\n            <Content>{children}</Content>\n        </Container>\n    );\n};\n\nexport default Layout;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx",["747"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Providers: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/providers\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx",["748","749","750","751","752","753"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../components/UnformFields/Input';\nimport TextArea from '../../../components/UnformFields/TextArea';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n    WeekSchedule,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    valor: string;\n    categoria: string;\n    tempoDeExecucao: string;\n    contato: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [\n        showDiferentPriceContainer,\n        setShowDiferentPriceContainer,\n    ] = useState(false);\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Assessoria de Noivas' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Cabelo' },\n        { value: 4, label: 'Depilação' },\n        { value: 5, label: 'Estética corporal' },\n        { value: 6, label: 'Estética facial' },\n        { value: 7, label: 'Manícure e pedícure' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Massagem' },\n        { value: 5, label: 'Podologia' },\n        { value: 6, label: 'Sobrancelha' },\n        { value: 7, label: 'Tatuagem' },\n    ];\n\n    const checkboxOnlineScheduleptions: CheckboxOption[] = [\n        { id: 'agendamentoOnline', value: 'true', label: 'Agendamento online' },\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxDiferentPrice: CheckboxOption[] = [\n        {\n            id: 'precoDiferenciado',\n            value: 'true',\n            label: 'Preço Diferenciado',\n        },\n    ];\n\n    function handleClose() {\n        setShowDiferentPriceContainer(false);\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button type=\"button\" onClick={handleShow}>\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Cadastro de Serviço</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <FieldSet title=\"Dados do Serviço\">\n                                <div id=\"group1\">\n                                    <Select\n                                        name=\"grupoServico\"\n                                        label=\"Grupo de serviço\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={groupOptions}\n                                        isSearchable\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                    <Input name=\"servico\" label=\"Serviço\" />\n                                </div>\n                                <Select\n                                    name=\"referenciaTributacao\"\n                                    label=\"Referência para tributação\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={{\n                                        label: 'Selecione',\n                                        value: 0,\n                                    }}\n                                    options={groupOptions}\n                                    isSearchable\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                                <TextArea\n                                    name=\"descricaoServico\"\n                                    label=\"Descrição do serviço\"\n                                />\n                                <div id=\"group2\">\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Preço serviço\"\n                                    />\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Custo serviço\"\n                                    />\n                                    <Input name=\"servico\" label=\"Duração\" />\n                                </div>\n                                {/*  <CheckBox\n                                    options={checkboxOnlineScheduleptions}\n                                    name=\"agendamentoOnline\"\n                                />\n                                <CheckBox\n                                    options={checkboxCanFitIn}\n                                    name=\"possibilitaEncaixe\"\n                                />\n                                <CheckBox\n                                    options={checkboxDiferentPrice}\n                                    name=\"precoDiferenciado\"\n                                    onChange={() =>\n                                        setShowDiferentPriceContainer(\n                                            !showDiferentPriceContainer,\n                                        )\n                                    }\n                                /> */}\n                                {showDiferentPriceContainer && (\n                                    <>\n                                        <WeekSchedule>\n                                            <div>\n                                                <label>Dia da semana</label>\n                                                <button type=\"button\">\n                                                    Domingo\n                                                </button>\n                                                <button type=\"button\">\n                                                    Segunda\n                                                </button>\n                                                <button type=\"button\">\n                                                    Terça\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quarta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quinta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sexta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sábado\n                                                </button>\n                                            </div>\n                                            <div>\n                                                <label>\n                                                    Valor diferenciado\n                                                </label>\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                            </div>\n                                            <div>\n                                                <label>Definir horário</label>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </WeekSchedule>\n                                    </>\n                                )}\n                            </FieldSet>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowCommissionContainer(\n                                    !showCommissionContainer,\n                                )\n                            }\n                        >\n                            {showCommissionContainer\n                                ? 'Ocultar comissões'\n                                : 'Mostrar comissões'}\n                            {showCommissionContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showCommissionContainer && (\n                            <FieldSet title=\"Comissões\">\n                                <Select\n                                    name=\"formaDeComissao\"\n                                    label=\"Forma de comissão\"\n                                />\n                                <div> Quando Profissional</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                                <div>Quando Assistente</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx",["754"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Container } from './styles';\n\ninterface IDropdownProps {\n    options: {\n        title: string;\n        link: string;\n        externalLink: boolean;\n        clickEvent?: () => void;\n    }[];\n    title: string;\n}\n\nconst Dropdown: React.FC<IDropdownProps> = ({ options, title }) => {\n    return (\n        <Container>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" type=\"button\">\n                    {title}\n                    <MdKeyboardArrowDown size={16} />\n                </button>\n                <div className=\"dropdown-content\">\n                    {options.map(option =>\n                        option.externalLink ? (\n                            <a key={option.title} href={option.link}>\n                                {option.title}\n                            </a>\n                        ) : (\n                            <Link\n                                key={option.title}\n                                to={option.link}\n                                onClick={option.clickEvent}\n                            >\n                                {option.title}\n                            </Link>\n                        ),\n                    )}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dropdown;\n\n/*\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n            externalLink: PropTypes.bool.isRequired,\n            clickEvent: PropTypes.func,\n        }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}; */\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx",["755"],"import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/global';\nimport dark from './styles/themes/dark';\nimport ligth from './styles/themes/ligth';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <ThemeProvider theme={ligth}>\n        <Routes />\n        <GlobalStyle />\n    </ThemeProvider>\n);\n\nexport default App;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx",["756","757","758","759"],"import React from 'react';\nimport { Chart, Pie, Bar, Doughnut } from 'react-chartjs-2';\nimport { MdAttachMoney, MdTimeline } from 'react-icons/md';\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\nimport {\n    Container,\n    PieChart,\n    BarChart,\n    ChartsContainer,\n    CardsContainer,\n    CardsContainer2,\n    Card,\n} from './styles';\n\nconst Dashboard: React.FC = () => {\n    const pieData = {\n        labels: ['Despesas fixas', 'Despesas eventuais'],\n        datasets: [\n            {\n                label: '# of Votes',\n                data: [800, 1250],\n                backgroundColor: ['#fd5c0e', '#fd7d3e'],\n                borderColor: ['#fff', '#fff'],\n            },\n        ],\n    };\n\n    const barData = {\n        labels: [\n            'Jan',\n            'Fev',\n            'Mar',\n            'Abr',\n            'Mai',\n            'Jun',\n            'Jul',\n            'Ago',\n            'Set',\n            'Out',\n            'Nov',\n            'Dez',\n        ],\n        /*  datasets: [\n            {\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n                barOptions: {},\n            },\n        ], */\n        datasets: [\n            {\n                label: 'Receita',\n                data: [800, 1250, 1300, 1200],\n                backgroundColor: '#fd5c0e',\n            },\n            {\n                label: 'Despesa',\n                data: [350, 780, 850, 900],\n                backgroundColor: '#fd7d3e',\n            },\n        ],\n    };\n\n    const barOptions = {\n        scales: {\n            y: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n                ticks: {\n                    callback(value: string) {\n                        return `R$ ${value}`;\n                    },\n                    beginAtZero: true,\n                },\n            },\n            x: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n            },\n        },\n        responsive: true,\n    };\n\n    const pieOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            /*  title: {\n                display: true,\n                text: 'Chart.js Horizontal Bar Chart',\n            }, */\n        },\n    };\n\n    return (\n        <Container>\n            <h1>Dashboard</h1>\n            <span>Indicadores financeiros</span>\n            <CardsContainer>\n                <Card>\n                    <p>Total de receita no mês</p>\n                    <div>\n                        <p>R$ 1650,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Total de comissões no mês</p>\n                    <div>\n                        <p>R$ 350,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Total de despesas no mês</p>\n                    <div>\n                        <p>R$ 550,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Resultados do mês</p>\n                    <div>\n                        <p>R$ 650,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n                <Card>\n                    <p>Receita anual</p>\n                    <div>\n                        <p>R$ 4550,00</p>\n                        <MdAttachMoney />\n                    </div>\n                </Card>\n            </CardsContainer>\n            <ChartsContainer>\n                <BarChart>\n                    <div className=\"header\">\n                        <span className=\"title\">\n                            Análise anual (receita x despesa)\n                        </span>\n                    </div>\n                    <Bar type=\"\" data={barData} options={barOptions} />\n                </BarChart>\n                <PieChart>\n                    <div className=\"header\">\n                        <span className=\"title\">Despesas do mês</span>\n                    </div>\n                    <Doughnut\n                        height={100}\n                        width={100}\n                        type=\"\"\n                        data={pieData}\n                        options={pieOptions}\n                    />\n                </PieChart>\n                <CardsContainer2>\n                    <span>Previsão de ganhos</span>\n                    <Card>\n                        <p>Hoje</p>\n                        <div>\n                            <p>R$ 250,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                    <Card>\n                        <p>Semana</p>\n                        <div>\n                            <p>R$ 1250,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                    <Card>\n                        <p>Mês</p>\n                        <div>\n                            <p>R$ 5000,00</p>\n                            <MdTimeline />\n                        </div>\n                    </Card>\n                </CardsContainer2>\n            </ChartsContainer>\n        </Container>\n    );\n};\n\nexport default Dashboard;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx",["760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776"],"/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport FieldSet from '../../../components/FieldSet';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    contato: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IBankapi {\n    ispb: string;\n    name: string;\n    code: number;\n    fullName: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const [loading, setLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [rgNumber, setRgNumber] = useState('');\n    const [banks, setBanks] = useState('');\n\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    const cities = brasilStatesAndCities.estados\n        .find(elem => elem.nome === currentState)\n        ?.cidades.map(elem => ({\n            value: elem,\n            label: elem,\n        }));\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    useState(() => {\n        /* apiClient\n            .get<IBankapi>(`https://brasilapi.com.br/api/banks/v1/`)\n            .then(response => {})\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n            }); */\n    });\n\n    function getAddressInfo(cep: string) {\n        setLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: states.filter(\n                            estado => estado.sigla === response.data.state,\n                        ),\n                        cidade: cities?.filter(\n                            cidade => cidade.label === response.data.city,\n                        ),\n                    },\n                });\n                setCurrentState(\n                    formRef.current?.getFieldValue('address.estado')[0].label,\n                );\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Fornecedor</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                            <div id=\"group1\">\n                                <Input\n                                    name=\"numeroCPFouCNPJ\"\n                                    label=\"CPF/CNPJ*\"\n                                    value={\n                                        tipoPessoa.length > 14\n                                            ? cnpjMask(tipoPessoa)\n                                            : cpfMask(tipoPessoa)\n                                    }\n                                    onChange={e =>\n                                        setTipoPessoa(e.target.value)\n                                    }\n                                />\n                                <Input name=\"email\" label=\"E-mail\" />\n                            </div>\n\n                            <div id=\"group3\">\n                                <Input name=\"contato\" label=\"Contato\" />\n                                <MaskedInput\n                                    mask=\"(99) 9999-9999\"\n                                    name=\"telefone\"\n                                    label=\"Telefone\"\n                                />\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"celular\"\n                                    label=\"Celular\"\n                                />\n                            </div>\n                            <Input name=\"observacoes\" label=\"Observações\" />\n                        </FieldSet>\n                        <FieldSet title=\"Informações Bancárias\">\n                            <div id=\"group2\">\n                                <Input name=\"pix\" label=\"Chave PIX\" />\n                                <Input name=\"banco\" label=\"Banco\" />\n                                <Input name=\"agencia\" label=\"Agência\" />\n                                <Input\n                                    name=\"contaCorrente\"\n                                    label=\"Conta Corrente\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={loading}\n                                            label=\"CEP\"\n                                            disabled={loading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={loading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={loading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            onChange={value => {\n                                                setCurrentState(value?.value);\n                                                formRef.current?.clearField(\n                                                    'address.cidade',\n                                                );\n                                            }}\n                                            options={states}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            isDisabled={currentState === ''}\n                                            options={cities}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx",["777","778","779","780"],"import React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport { MdMenu } from 'react-icons/md';\nimport Toggle from '../Toggle';\nimport { Container, Profile, Welcome } from './styles';\nimport Dropdown from '../Dropdown';\nimport ProfilePhoto from '../../assets/images/profile.jpg';\n\nconst MainHeader: React.FC = () => {\n    const profileMenu = [\n        {\n            title: 'Perfil',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste1',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste2',\n            link: '',\n            externalLink: false,\n        },\n    ];\n\n    return (\n        <Container>\n            {/*             <Toggle />\n             */}\n            {/*  <button className=\"toggleMenu\" type=\"button\">\n                <MdMenu size={22} />\n            </button> */}\n            <div />\n            <Profile>\n                {/*                 <BsPeopleCircle size={25} />\n                 */}\n                <Dropdown title=\"Anderson Tartari\" options={profileMenu} />\n                <img src={ProfilePhoto} alt=\"profile\" />\n            </Profile>\n            {/* <Profile>\n                <Welcome>Olá, Anderson.</Welcome>\n            </Profile> */}\n        </Container>\n    );\n};\n\nexport default MainHeader;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx",["781","782","783","784","785"],"/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDatePicker, {\n    ReactDatePickerProps,\n    registerLocale,\n} from 'react-datepicker';\nimport MaskedTextInput from 'react-text-mask';\nimport ReactInputMask, { Props as ReactInputProps } from 'react-input-mask';\nimport { useField } from '@unform/core';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport pt from 'date-fns/locale/pt-BR';\nimport { Container } from './styles';\n\nregisterLocale('pt', pt);\ninterface Props extends Omit<ReactDatePickerProps, 'onChange'> {\n    name: string;\n    label?: string;\n    initialDate?: string;\n}\nconst DatePicker: React.FC<Props> = ({ name, label, initialDate, ...rest }) => {\n    const datepickerRef = useRef(null);\n    const {\n        fieldName,\n        registerField,\n        defaultValue = initialDate\n            ? new Date(\n                  initialDate.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, '$2/$1/$3'),\n              )\n            : '',\n        error,\n    } = useField(name);\n    const [date, setDate] = useState(defaultValue);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: datepickerRef.current,\n            path: 'props.selected',\n            clearValue: (ref: any) => {\n                ref.clear();\n            },\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <ReactDatePicker\n                id={fieldName}\n                ref={datepickerRef}\n                selected={date}\n                onChange={setDate}\n                locale=\"pt\"\n                dateFormat=\"dd/MM/yyyy\"\n                /*  customInput={<ReactInputMask mask=\"99/99/9999\" />} */\n                {...rest}\n            />\n        </Container>\n    );\n};\nexport default DatePicker;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/index.tsx",["786"],"import React, { useEffect } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { MdKeyboardArrowRight } from 'react-icons/md';\n\nimport { MenuItemLink, Container, SubMenuItemLink } from './styles';\n\nexport interface IMenuItemProps {\n    link?: string;\n    grouppedItem?: boolean;\n    icon: React.FC<IconBaseProps>;\n    title: string;\n    externalLink?: boolean;\n    subItens?: Array<IMenuItemProps>;\n}\n\nconst MenuItem: React.FC<IMenuItemProps> = ({\n    link,\n    icon: Icon,\n    title,\n    subItens,\n    grouppedItem,\n    externalLink,\n}) => {\n    return (\n        <Container>\n            <MenuItemLink\n                to={externalLink ? { pathname: link } : link || ''}\n                className=\"item\"\n                target={externalLink ? '_blank' : ''}\n            >\n                <div>\n                    <Icon />\n                    {title}\n                </div>\n                {grouppedItem && <MdKeyboardArrowRight />}\n            </MenuItemLink>\n            <div className=\"itemContent\">\n                {subItens?.length !== 0 ? (\n                    subItens?.map(subItem => (\n                        <SubMenuItemLink\n                            className=\"subItem\"\n                            key={subItem.title}\n                            to={\n                                subItem.externalLink\n                                    ? { pathname: subItem.link }\n                                    : subItem.link || ''\n                            }\n                            target={subItem.externalLink ? '_blank' : ''}\n                        >\n                            <subItem.icon />\n                            {subItem.title}\n                        </SubMenuItemLink>\n                    ))\n                ) : (\n                    <></>\n                )}\n            </div>\n        </Container>\n    );\n};\n\nexport default MenuItem;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/styles.ts",["787"],"import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    .active {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n\n        > svg {\n            transform: rotate(90deg);\n        }\n    }\n\n    .openAnimation {\n        @keyframes animate1 {\n            0% {\n                height: 0%;\n            }\n            100% {\n                height: 100%;\n            }\n        }\n\n        &::after {\n            animation: animate1 0.3s linear;\n            height: 100%;\n        }\n    }\n\n    .closeAnimation {\n        @keyframes animate2 {\n            0% {\n                height: 100%;\n            }\n            100% {\n                height: 0%;\n            }\n        }\n\n        &::after {\n            animation: animate2 0.3s linear;\n            height: 0%;\n        }\n    }\n\n    .itemContent {\n        max-height: 0;\n        padding-left: 7px;\n        overflow: hidden;\n        background: ${darken(0.03, '#313130')};\n        transition: max-height 0.3s ease-in-out;\n    }\n`;\n\nexport const MenuItemLink = styled(Link)`\n    /*     color: ${props => props.theme.color.info};\n\n */\n    color: var(--primary-text-color);\n    text-decoration: none;\n    position: relative;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n\n    &:hover {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n\n    > div > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n\n    &::after {\n        width: 3px;\n        bottom: 0;\n        left: 0;\n        content: '';\n        position: absolute;\n        background-color: var(--base-secondary-color);\n    }\n`;\n\nexport const SubMenuItemLink = styled(Link)`\n    color: var(--primary-text-color);\n    text-decoration: none;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    &:hover {\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/index.tsx",["788"],"/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue(ref: HTMLInputElement) {\n                ref.value = '';\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                <img\n                    src={selectedFile ? URL.createObjectURL(selectedFile) : defaultValue}\n                    alt=\"profile\"\n                />\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label || ''}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/dateUtils.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/services/apiClient.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/dark.ts",[],["789","790","791","792","793"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/index.tsx",["794"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Products: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/products\" exact component={Home} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Products;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/index.tsx",["795","796","797","798","799","800","801","802","803","804","805","806"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport { FaPlus } from 'react-icons/fa';\nimport { brazilianCurrencyMask } from '../../../utils/masks';\nimport Input from '../../../components/UnformFields/Input';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showDiscountContainer, setShowDiscountContainer] = useState(false);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [showConfigContainer, setShowConfigContainer] = useState(false);\n\n    const typeComissionOptions = [\n        {\n            label: 'Percentual',\n            value: 'percentual',\n        },\n        {\n            label: 'Valor',\n            value: 'valor',\n        },\n    ];\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Cabelo' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Manicure e Pedicure' },\n        { value: 5, label: 'Estética (facial ou corporal)' },\n        { value: 6, label: 'Massagem' },\n        { value: 7, label: 'Sobrancelhas' },\n    ];\n\n    const checkboxProfessionalOptions: CheckboxOption[] = [\n        {\n            id: 'descontarProfessional',\n            value: 'Descontar do Profissional',\n            label: 'Descontar do Profissional',\n        },\n    ];\n\n    const checkboxClientOptions: CheckboxOption[] = [\n        {\n            id: 'descontarClient',\n            value: 'Descontar do Cliente',\n            label: 'Descontar do Cliente',\n        },\n    ];\n\n    const checkboxProductForSale: CheckboxOption[] = [\n        {\n            id: 'produtoParaVenda',\n            value: 'Produto para Venda',\n            label: 'Produto para Venda',\n        },\n    ];\n\n    const checkboxProductForConsuption: CheckboxOption[] = [\n        {\n            id: 'produtoParaConsumo',\n            value: 'Produto para Consumo',\n            label: 'Produto para Consumo',\n        },\n    ];\n\n    interface IAddress {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface IFormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: IAddress;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <p>Cadastro de Produto</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <div>\n                                <FieldSet title=\"Dados do Produto\">\n                                    <Input name=\"descricao\" label=\"Descrição\" />\n                                    <div id=\"group1\">\n                                        <Select name=\"marca\" label=\"Marca\" />\n                                        <Input name=\"linha\" label=\"Linha\" />\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"grupo\"\n                                            label=\"Grupo\"\n                                            options={groupOptions}\n                                        />\n                                        <Select name=\"tipo\" label=\"Tipo\" />\n                                    </div>\n                                </FieldSet>\n\n                                <FieldSet title=\"Fornecedor\">\n                                    <Select\n                                        name=\"nomefornecedor\"\n                                        label=\"Nome\"\n                                    />\n                                    <Input\n                                        name=\"tempodeentrega\"\n                                        label=\"Tempo médio de Entrega (dias)\"\n                                    />\n                                    <Input\n                                        name=\"codigoDoFornecedor\"\n                                        label=\"Código do fornecedor\"\n                                    />\n                                </FieldSet>\n                            </div>\n                            <div>\n                                <FieldSet title=\"Comissões\">\n                                    <Select\n                                        name=\"formaDeComissao\"\n                                        label=\"Forma de comissão\"\n                                    />\n                                    <div> Quando Profissional</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoProfissional\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                    <div>Quando Assistente</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoAssitente\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                                <FieldSet title=\"Descontos\">\n                                    <div id=\"group1\">\n                                        {/* <CheckBox\n                                            options={\n                                                checkboxProfessionalOptions\n                                            }\n                                            name=\"decontardoprofissional\"\n                                        />\n                                        <CheckBox\n                                            options={checkboxClientOptions}\n                                            name=\"decontardocliente\"\n                                        /> */}\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Input\n                                            name=\"usoInterno\"\n                                            label=\"Uso Interno\"\n                                        />\n                                        <Input\n                                            name=\"usoProprio\"\n                                            label=\"Uso Próprio\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                            </div>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowConfigContainer(!showConfigContainer)\n                            }\n                        >\n                            {showConfigContainer\n                                ? 'Ocultar configurações do produto'\n                                : 'Mostrar configurações do produto'}\n                            {showConfigContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        <div>\n                            {showConfigContainer && (\n                                <>\n                                    <div>\n                                        <FieldSet title=\"Finalidade\">\n                                            <div id=\"group1\">\n                                                {/*  <CheckBox\n                                                    options={\n                                                        checkboxProductForSale\n                                                    }\n                                                    name=\"produtoParaVenda\"\n                                                />\n                                                <CheckBox\n                                                    options={\n                                                        checkboxProductForConsuption\n                                                    }\n                                                    name=\"produtoParaConsumo\"\n                                                /> */}\n                                            </div>\n                                            <div id=\"group1\">\n                                                <Input\n                                                    name=\"valorDaVenda\"\n                                                    label=\"Valor da Venda\"\n                                                />\n                                                <Input\n                                                    name=\"descontoMáximoPermitido\"\n                                                    label=\"Desconto Máximo Permitido\"\n                                                />\n                                            </div>\n                                        </FieldSet>\n\n                                        <FieldSet title=\"Estoque Mínimo\">\n                                            <Input\n                                                name=\"estoqueMinimo\"\n                                                label=\"Estoque mínimo (unidades)\"\n                                            />\n                                            <Input\n                                                name=\"valorConvertido\"\n                                                label=\"Valor Convertido\"\n                                            />\n                                        </FieldSet>\n                                    </div>\n                                    <FieldSet title=\"Registro de Saída\">\n                                        <Select\n                                            name=\"registrarSaidaPor\"\n                                            label=\"Registrar saída por\"\n                                        />\n                                        <div id=\"group1\">\n                                            <Select\n                                                name=\"conversao\"\n                                                label=\"Informe a conversão\"\n                                            />\n                                            <Input\n                                                name=\"possui\"\n                                                label=\"Possui (cm)\"\n                                            />\n                                        </div>\n                                    </FieldSet>\n                                </>\n                            )}\n                        </div>\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/index.tsx",[],["807","808","809","810","811"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/index.tsx",["812","813"],"/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label: string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['textarea'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLTextAreaElement>(null);\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <textarea\n                id={fieldName}\n                ref={inputRef}\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/index.tsx",["814"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/index.tsx",["815","816"],"import React from 'react';\nimport { Switch, Route, useRouteMatch, useParams } from 'react-router-dom';\n\nimport Home from './Home';\nimport CreateArtist from './CreateArtist';\n\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/artists\" exact component={Home} />\n            <Route path=\"/artists/create\" exact component={CreateArtist} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/index.tsx",["817","818","819","820","821"],"import React, { useEffect, useState } from 'react';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { MdDelete, MdPerson } from 'react-icons/md';\n\nimport { useHistory } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\n\nimport ProviderCard from '../../../components/ProviderCard';\nimport AddArtistModal from '../CreateArtist';\n\nimport { Container, ArtistHeaderContainer } from './styles';\n\nconst Providers: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <ArtistHeaderContainer>\n                <h1>Artistas</h1>\n                <div>\n                    <button\n                        type=\"button\"\n                        onClick={() => history.push('/artists/create')}\n                    >\n                        <span>Adicionar</span>\n                        <FaPlus />\n                    </button>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar artista\" />\n                    </div>\n                </div>\n            </ArtistHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Nome</th>\n                        <th>Email</th>\n                        <th>Celular</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Ana</td>\n                        <td>analucia@gmail.com</td>\n                        <td>(62) 9 98297558</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Maria</td>\n                        <td>mariasouza@gmail.com</td>\n                        <td>(62) 9 98297953</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Marcos</td>\n                        <td>marcos158@gmail.com</td>\n                        <td>(62) 9 98297258</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/index.tsx",["822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-bitwise */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport { MdKeyboardArrowDown, MdKeyboardArrowRight } from 'react-icons/md';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport Select from '../../../components/UnformFields/Select';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport AddSkill from './AddSkills';\nimport WebCam from '../../../components/WebcamCapture';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport { Container, CreateArtistForm, WeekScheduleContainer, DayScheduleItem, PageTitle, PageFooter, SectionButton } from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\nimport { AddSkillModal } from './AddSkills/styles';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nconst artistsGroup = [\n    { value: 1, label: 'Diário' },\n    { value: 2, label: 'Semanal' },\n    { value: 3, label: 'Quinzenal' },\n    { value: 4, label: 'Mensal' },\n];\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [banks, setBanks] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [showEndOfWorkDate, setShowEndOfWorkDate] = useState(false);\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>> ([]);\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n\n    const genderOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const typeOfBond = [\n        { value: 1, label: 'Eventual' },\n        { value: 2, label: 'Regime CLT' },\n        { value: 3, label: 'Salão parceiro' },\n    ];\n\n      const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    const comissionTypeOptions = [\n        {value: 1, label: 'Percentual (%)'},\n        {value: 2, label: 'Valor (R$)'}\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxShowInschedule: CheckboxOption[] = [\n        {\n            id: 'mostrarNaAgenda',\n            value: 'true',\n            label: 'Mostrar na agenda',\n        },\n    ];\n\n    const checkboxFiredProfessional: CheckboxOption[] = [\n        {\n            id: 'profissionalDemitido',\n            value: 'true',\n            label: 'Profissional desligado',\n        },\n    ];\n\n    useEffect(() => {\n        console.log(currentUf);\n        /* setCurrentCities(brasilStatesAndCities.estados.filter(uf => uf.sigla === currentUf).map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n    }))) */\n    }, [currentUf]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n     function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        console.log(data);\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Cadastro de artista</p>\n            </PageTitle>\n            <CreateArtistForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input name=\"nome\" label=\"Nome*\" />\n                            <Input name=\"apelido\" label=\"Apelido\" />\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF\"\n                                value={cpfMask(tipoPessoa)}\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Select\n                                label=\"Sexo\"\n                                name=\"sexo\"\n                                classNamePrefix=\"react-select\"\n                                placeholder=\"Selecione o sexo\"\n                                defaultValue={{\n                                label: 'Selecione o sexo',\n                                value: 0,\n                            }}\n                                options={genderOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"(99) 9999-9999\"\n                                name=\"telefone\"\n                                label=\"Telefone\"\n                            />\n                            <MaskedInput\n                                mask=\"(99) 9 9999-9999\"\n                                name=\"celular\"\n                                label=\"Celular\"\n                            />\n                            <Input name=\"email\" label=\"E-mail\" textTransform=\"lowercase\" />\n                            <DatePicker\n                                label=\"Data de nascimento\"\n                                name=\"dataDeNascimento\"\n                            />\n                        </div>\n                        <Select\n                            name=\"tipoDeVinculo\"\n                            label=\"Tipo de vínculo\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                            label: 'Selecione o tipo de vínculo',\n                            value: 0,\n                        }}\n                            options={typeOfBond}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div>\n                        <AvatarInput\n                            name=\"avatarImage\"\n                            label=\"Foto do artista\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Informações Complementares\">\n                    <div className=\"fourFieldsGroup\">\n                        <DatePicker\n                            label=\"Início do trabalho\"\n                            name=\"dataDeNascimento\"\n                        />\n                        <Select\n                            name=\"group\"\n                            label=\"Grupo de rateio\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={artistsGroup[2]}\n                            options={artistsGroup}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <DatePicker\n                            label=\"Término do trabalho\"\n                            name=\"dataTerminoTrabalho\"\n                            disabled={!showEndOfWorkDate}\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Função\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Escolha uma função',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Perfil de permissões\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <MaskedInput\n                            label=\"Remuneração combinada\"\n                            mask=\"R$ 9.999,99\"\n                            name=\"value\"\n                        />\n\n                    </div>\n                    <div className=\"checkboxGroup\">\n                        <CheckBox\n                            name=\"profissionalDesligado\"\n                            label=\"Profissional desligado\"\n                            onChangeCallback={() => {\n                            formRef.current?.clearField('dataTerminoTrabalho');\n                            setShowEndOfWorkDate(!showEndOfWorkDate)\n                        }}\n                        />\n                        <CheckBox\n                            name=\"possibilitaEncaixe\"\n                            label=\"Possibilita encaixe\"\n                        />\n                        <CheckBox\n                            name=\"mostrarNaAgenda\"\n                            label=\"Mostrar na agenda\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                                    if (\n                                                        RegExp(\n                                                            /^\\d{5}-\\d{3}$/g,\n                                                        ).test(event.target.value)\n                                                    ) {\n                                                        getAddressInfo(\n                                                            event.target.value,\n                                                        );\n                                                    }\n                                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input\n                                name=\"complemento\"\n                                label=\"Complemento\"\n                            />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                onChange={value => {\n                                                    setCurrentUf(value?.value);\n                                                   /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Horário de trabalho\">\n                    <AddSkill />\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Marcar todos os dias\"\n                        />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"domingo\"\n                                label=\"Domingo\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"segunda\"\n                                label=\"Segunda\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"terca\"\n                                label=\"Terça\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quarta\"\n                                label=\"Quarta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quinta\"\n                                label=\"Quinta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sexta\"\n                                label=\"Sexta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sabado\"\n                                label=\"Sábado\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Habilidades\">\n                    <Select\n                        label=\"Filtrar por categoria\"\n                        name=\"categoria\"\n                        classNamePrefix=\"react-select\"\n                        placeholder=\"Selecione uma categoria\"\n                        defaultValue={{\n                                label: 'Selecione uma categoria',\n                                value: 0,\n                            }}\n                        options={skillsList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th> </th>\n                                <th>Nome do serviço</th>\n                                <th>Tempo de serviço</th>\n                                <th>Tipo de comissão</th>\n                                <th>\n                                    Margem de comissão\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba com pezinho</td>\n                                <td>45min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba completa</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba desenhada</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </CreateArtistForm>\n            <PageFooter>\n\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={handleClose}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n\n\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/index.tsx",["852","853"],"import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport { Container, AddSkillModal } from './styles';\n\nconst AddSkills: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Repetir horários de outro profissional\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Profissionais</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <Input name=\"pesquisarHabilidade\" label=\"Pesquisar\" />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddSkills;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/index.tsx",["854"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './Home';\nimport ClientHistory from './ClientHistory';\nimport PageNotFound from '../Errors/PageNotFound';\nimport ServiceDetails from './ClientHistory/ServiceDetails';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/clients\" exact component={Home} />\n            <Route path=\"/clients/history\" exact component={ClientHistory} />\n            <Route\n                path=\"/clients/history/service\"\n                exact\n                component={ServiceDetails}\n            />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/index.tsx",["855","856"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport { convertToBrasilianDateFormat } from '../../../utils/dateUtils';\nimport AddClientModal, { IFormData } from '../CreateClient';\n\nimport { Container, ClientHeaderContainer } from './styles';\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [clientsList, setClientsList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchClient(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ClientHeaderContainer>\n                <h1>Clientes</h1>\n                <div>\n                    <AddClientModal\n                        saveClient={clientData => {\n                            setClientsList([...clientsList, clientData]);\n                        }}\n                    />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar cliente\" />\n                    </div>\n                </div>\n            </ClientHeaderContainer>\n            {clientsList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>Telefone</th>\n                            <th>Sexo</th>\n                            <th>Data de Nascimento</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {clientsList.map((client, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{client.nome}</td>\n                                <td>{client.whatsapp}</td>\n                                <td>{client.sexo}</td>\n                                <td>\n                                    {convertToBrasilianDateFormat(\n                                        new Date(client.dataDeNascimento),\n                                    )}\n                                </td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedClientList = clientsList.filter(\n                                                (_, clientIndex) =>\n                                                    clientIndex !== index,\n                                            );\n\n                                            setClientsList(updatedClientList);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados clientes cadastrados\"\n                    subtitle='Adicione um novo cliente clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/index.tsx",["857","858","859","860","861","862","863","864","865","866","867"],"/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport {\n    FaWhatsapp,\n    FaInstagram,\n    FaFacebook,\n    FaTwitter,\n    FaPlus,\n} from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport FieldSet from '../../../components/FieldSet';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateClientProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\ninterface ICNPJ {\n    razao_social: string;\n    cep: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC<ICreateClientProps> = ({ saveClient }) => {\n    const [show, setShow] = useState(false);\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [cnpjLoading, setCnpjLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [currentUfAndCity, setCurrentUfAndCity] = useState({\n        uf: '',\n        city: '',\n    });\n    const [currentCity, setCurrentCity] = useState<string>();\n    const [citiesList, setCitiesList] = useState<Array<IComboBox>>();\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n        setShowAddressContainer(false);\n        setShowPreferencesContainer(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const ufsList = brasilStatesAndCities.estados.map(uf => ({\n        sigla: uf.sigla,\n        label: `${uf.sigla} - ${uf.nome}`,\n        value: uf.nome,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUfAndCity({\n                    uf: response.data.state,\n                    city: response.data.city,\n                });\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: ufsList.find(\n                            uf => uf.sigla === response.data.state,\n                        ),\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    function getCNPJInfo(cnpjNumber: string) {\n        setCnpjLoading(true);\n        apiClient\n            .get<ICNPJ>(`https://brasilapi.com.br/api/cnpj/v1/${cnpjNumber}`)\n            .then(response => {\n                formRef.current?.setFieldError('numeroCPFouCNPJ', '');\n                console.log(formRef.current?.getFieldValue('address.cep'));\n                console.log(response.data.cep);\n                formRef.current?.setData({\n                    nome: response.data.razao_social,\n                    address: {\n                        cep: 121223321,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CNPJ não encontrado!';\n                } else if (error.status === 400) {\n                    errorMessage = 'CNPJ inválido!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    nome: '',\n                });\n\n                formRef.current?.setFieldError('numeroCPFouCNPJ', errorMessage);\n            })\n            .finally(() => setCnpjLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        data.dataDeNascimento = convertToISO8601UTCDateFormat(\n            new Date(data.dataDeNascimento),\n        );\n\n        console.log(data);\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                nome: Yup.string().required('O nome é obrigatório!'),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                porcentagemDescontoServicos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                porcentagemDescontoProdutos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n            saveClient(data);\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Cliente</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <div id=\"group1\">\n                                <div>\n                                    <Input\n                                        name=\"nome\"\n                                        label=\"Nome Completo/Razão Social*\"\n                                    />\n                                    <div>\n                                        <div>\n                                            <DatePicker\n                                                label=\"Data de nascimento\"\n                                                name=\"dataDeNascimento\"\n                                            />\n                                            <Select\n                                                label=\"Sexo\"\n                                                name=\"sexo\"\n                                                classNamePrefix=\"react-select\"\n                                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                                options={affiliationOptions}\n                                                isSearchable={false}\n                                                blurInputOnSelect\n                                                openMenuOnFocus\n                                            />\n                                        </div>\n                                        <div>\n                                            <Input\n                                                textTransform=\"lowercase\"\n                                                name=\"email\"\n                                                label=\"E-mail*\"\n                                            />\n                                            <Input\n                                                name=\"numeroCPFouCNPJ\"\n                                                label=\"CPF/CNPJ*\"\n                                                value={\n                                                    tipoPessoa.length > 14\n                                                        ? cnpjMask(tipoPessoa)\n                                                        : cpfMask(tipoPessoa)\n                                                }\n                                                onChange={event => {\n                                                    setTipoPessoa(\n                                                        event.target.value,\n                                                    );\n                                                    if (\n                                                        RegExp(\n                                                            /\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}/g,\n                                                        ).test(\n                                                            event.target.value,\n                                                        )\n                                                    ) {\n                                                        console.log('entrou');\n                                                        getCNPJInfo(\n                                                            event.target.value.replace(\n                                                                '/',\n                                                                '',\n                                                            ),\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <MaskedInput\n                                                mask=\"99.999.999-9\"\n                                                name=\"RG\"\n                                                label=\"RG\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <AvatarInput\n                                        name=\"avatarImage\"\n                                        label=\"Foto do cliente\"\n                                    />\n                                </div>\n                            </div>\n                        </FieldSet>\n                        <FieldSet title=\"Redes Sociais\">\n                            <div id=\"group4\">\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"whatsapp\"\n                                    label=\"Whatsapp*\"\n                                    labelIcon={FaWhatsapp}\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"instagram\"\n                                    labelIcon={FaInstagram}\n                                    label=\"Instagram\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"twitter\"\n                                    labelIcon={FaTwitter}\n                                    label=\"Twitter\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"tiktok\"\n                                    labelIcon={IoLogoTiktok}\n                                    label=\"TikTok\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"facebook\"\n                                    labelIcon={FaFacebook}\n                                    label=\"Facebook\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={cepLoading}\n                                            label=\"CEP\"\n                                            disabled={cepLoading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={cepLoading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={cepLoading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            /*  defaultValue={{\n                                                label: 'Selecione um estado',\n                                                value: 0,\n                                            }} */\n                                            onChange={value => {\n                                                console.log(value);\n                                                /*   setCurrentUf(\n                                                    value?.label.substring(\n                                                        0,\n                                                        2,\n                                                    ),\n                                                ); */\n                                                /*                                                 setCurrentCity(null);\n                                                 */\n                                            }}\n                                            options={ufsList}\n                                            isSearchable\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            isSearchable\n                                            defaultValue={{\n                                                label: 'Selecione uma cidade',\n                                                value: 0,\n                                            }}\n                                            /* disabled={cities?.length === 0} */\n                                            noOptionsMessage={() =>\n                                                /* {\n                                                console.log(\n                                                    document.querySelector(\n                                                        'div.react-select__single-value.css-1uccc91-singleValue',\n                                                    ),\n                                                ); */\n\n                                                'Sem resultados'\n                                            }\n                                            classNamePrefix=\"react-select\"\n                                            options={brasilStatesAndCities.estados\n                                                .find(\n                                                    elem =>\n                                                        elem.sigla ===\n                                                        currentUfAndCity.uf,\n                                                )\n                                                ?.cidades.map(elem => ({\n                                                    value: elem,\n                                                    label: elem,\n                                                }))}\n                                            /*  onChange={value =>\n                                                setCurrentCity(value)\n                                            }\n                                            value={\n                                                currentCity ||\n                                                (citiesList && citiesList[0])\n                                            } */\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPreferencesContainer(\n                                    !showPreferencesContainer,\n                                )\n                            }\n                        >\n                            {showPreferencesContainer\n                                ? 'Ocultar Preferências'\n                                : 'Mostrar Preferências'}\n                            {showPreferencesContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPreferencesContainer && (\n                            <FieldSet title=\"Preferências\">\n                                <div id=\"group5\">\n                                    <Input\n                                        name=\"idArtista1\"\n                                        label=\"Artista de Preferência 1\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoProdutos\"\n                                        label=\"Desconto em Produtos (0% - 100%)\"\n                                    />\n                                    <Input\n                                        name=\"indocadoPor\"\n                                        label=\"Indicado por\"\n                                    />\n                                    <Input\n                                        name=\"coloracaoCabelo\"\n                                        label=\"Coloração Cabelo\"\n                                    />\n                                </div>\n\n                                <div id=\"group6\">\n                                    <Input\n                                        name=\"idArtista2\"\n                                        label=\"Artista de Preferência 2\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoServicos\"\n                                        label=\"Desconto em Serviços (0% - 100%)\"\n                                    />\n\n                                    <Input\n                                        name=\"tipoDePele\"\n                                        label=\"Tipo de Pele\"\n                                    />\n                                    <Input\n                                        name=\"tipoDeUnha\"\n                                        label=\"Tipo de Unha\"\n                                    />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/index.tsx",["868","869"],"import React, { useRef } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport AddSkills from './AddSkills';\nimport FieldSet from '../../../components/FieldSet';\n\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport {\n    Container,\n    ClientHistoryContainer,\n    PageTitle,\n    CardsContainer,\n    Card,\n} from './styles';\n\nconst ClientHistory: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const history = useHistory();\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Histórico do Cliente</p>\n            </PageTitle>\n            <ClientHistoryContainer onSubmit={() => ''} id=\"form\" ref={formRef}>\n                <AvatarInput name=\"avatarImage\" label=\"Fulano da Silva\" />\n                <div>\n                    <CardsContainer>\n                        <Card>\n                            <p>Saldo</p>\n                            <div>R$ 50,00</div>\n                        </Card>\n                        <Card>\n                            <p>Ticket Médio</p>\n                            <div>R$195,00</div>\n                        </Card>\n                        <Card>\n                            <p>Taxa de comparecimento</p>\n                            <div>15,38 %</div>\n                        </Card>\n                        <Card>\n                            <p>Profissional querido</p>\n                            <div>Fernanda</div>\n                        </Card>\n                        <Card>\n                            <p>Dia da semana preferido</p>\n                            <div>Terça-Feira</div>\n                        </Card>\n                    </CardsContainer>\n                </div>\n                <AddSkills />\n                <FieldSet title=\"Próxima visita\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Profissional</th>\n                                <th>Duração</th>\n                                <th>Valor total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>31/03/2021</td>\n                                <td>Fernanda</td>\n                                <td>45min</td>\n                                <td>R$ 40,00</td>\n                            </tr>\n                            <tr>\n                                <td>02/04/2021</td>\n                                <td>Cleiton</td>\n                                <td>50min</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Histórico de visitas\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Horário</th>\n                                <th>Comanda</th>\n                                <th>Profissional</th>\n                                <th>Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr\n                                onClick={() =>\n                                    // eslint-disable-next-line prettier/prettier\n                                    history.push('/clients/history/service')}\n                            >\n                                <td>30/03/2021</td>\n                                <td>15:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr>\n                                <td>30/02/2021</td>\n                                <td>16:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr>\n                                <td>30/01/2021</td>\n                                <td>17:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </ClientHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ClientHistory;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/index.tsx",["870","871","872"],"import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst AddSkills: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Gerar relatório do cliente\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Relatório - Histórico do cliente</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <DatePicker label=\"Data inicial\" name=\"dataInicial\" />\n                    <DatePicker label=\"Data final\" name=\"dataFinal\" />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Gerar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddSkills;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/index.tsx",["873","874"],"import React, { useRef } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport FieldSet from '../../../../components/FieldSet';\nimport ButtonInput from '../../../../components/UnformFields/ButtonInput';\n\nimport { Container, PageTitle, ServiceHistoryContainer } from './styles';\n\nconst ServiceDetails: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Imagens do serviço</p>\n            </PageTitle>\n            <FieldSet title=\"Antes\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n            <FieldSet title=\"Depois\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ServiceDetails;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/index.tsx",["875","876","877"],"/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue() {\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label\n                htmlFor={fieldName}\n                className=\"fibre-button fibre-button--cancel\"\n            >\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/index.tsx",["878","879","880"],"import React, { useRef, useState } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport brasilStatesAndCities from '../../utils/brazilianStates.json';\nimport FieldSet from '../../components/FieldSet';\nimport MaskedInput from '../../components/UnformFields/InputMaskd';\nimport Select from '../../components/UnformFields/Select';\nimport apiClient from '../../services/apiClient';\nimport { cpfMask, cnpjMask } from '../../utils/masks';\nimport CardOperator from './CardOperator';\nimport PaymentOptions from './PaymentOptions';\nimport Expenses from './Expenses';\nimport Campaign from './Campaign';\nimport Input from '../../components/UnformFields/Input';\nimport CheckBox from '../../components/UnformFields/CheckBox';\nimport TextArea from '../../components/UnformFields/TextArea';\n\nimport {\n    Container,\n    PageTitle,\n    PageFooter,\n    CreateEstablismentForm,\n    CustomFieldSet,\n    WeekScheduleContainer,\n    DayScheduleItem,\n} from './styles';\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\nconst Establishment: React.FC = () => {\n    const handleCreateEstablishmentSubmit: SubmitHandler<IFormData> = async data => {\n        console.log(data);\n    };\n\n    const formRef = useRef<FormHandles>(null);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>>([]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    const data = [{ id: 1, nome: 'Aluguel', ano: '1982', vencimento: 'Dia 5' }];\n    const columns = [\n        {\n            name: 'Nome',\n            selector: 'nome',\n            sortable: true,\n        },\n        {\n            name: 'Ano',\n            selector: 'ano',\n            sortable: true,\n            right: true,\n        },\n        {\n            name: 'Vencimento',\n            selector: 'vencimento',\n            sortable: true,\n            right: true,\n        },\n        {\n            name: 'Vencimento',\n            selector: 'vencimento',\n            sortable: true,\n            right: true,\n        },\n    ];\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Estabelecimento</p>\n            </PageTitle>\n            <CreateEstablismentForm\n                id=\"form\"\n                onSubmit={handleCreateEstablishmentSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                    <div className=\"twoFieldsGroup\">\n                        <Input\n                            name=\"numeroCPFouCNPJ\"\n                            label=\"CPF/CNPJ*\"\n                            value={\n                                tipoPessoa.length > 14\n                                    ? cnpjMask(tipoPessoa)\n                                    : cpfMask(tipoPessoa)\n                            }\n                            onChange={e => setTipoPessoa(e.target.value)}\n                        />\n                        <Input name=\"email\" label=\"E-mail\" />\n                    </div>\n\n                    <div className=\"treeFieldsgroup\">\n                        <Input name=\"contato\" label=\"Contato\" />\n                        <MaskedInput\n                            mask=\"(99) 9999-9999\"\n                            name=\"telefone\"\n                            label=\"Telefone\"\n                        />\n                        <MaskedInput\n                            mask=\"(99) 9 9999-9999\"\n                            name=\"celular\"\n                            label=\"Celular\"\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup\">\n                        <TextArea\n                            name=\"descricao\"\n                            label=\"Descrição do estabelecimento\"\n                        />\n                        <CustomFieldSet>\n                            <MaskedInput\n                                mask=\"999%\"\n                                name=\"celular\"\n                                label=\"Valor em percentual\"\n                            />\n                            <span>\n                                É a remuneração paga pela prestação de serviços\n                                de gestão administrativa.\n                            </span>\n                        </CustomFieldSet>\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Horário de funcionamento\">\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"unico\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox name=\"sabado\" label=\"Marcar todos os dias\" />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox name=\"domingo\" label=\"Domingo\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"segunda\" label=\"Segunda\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"terca\" label=\"Terça\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quarta\" label=\"Quarta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quinta\" label=\"Quinta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sexta\" label=\"Sexta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sabado\" label=\"Sábado\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                    if (\n                                        RegExp(/^\\d{5}-\\d{3}$/g).test(\n                                            event.target.value,\n                                        )\n                                    ) {\n                                        getAddressInfo(event.target.value);\n                                    }\n                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input name=\"complemento\" label=\"Complemento\" />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                onChange={value => {\n                                    setCurrentUf(value?.value);\n                                    /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Operação com cartão\">\n                    <CardOperator />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Administradora</th>\n                                <th>Bandeira</th>\n                                <th>Operação</th>\n                                <th>Taxa (%) </th>\n                                <th>Taxa de antecipação (%)</th>\n                                <th>Qtd dias a compensar</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Opções de pagamento\">\n                    <PaymentOptions />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor (R$)</th>\n                                <th>Vencimento</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Aluguel</td>\n                                <td>800,00</td>\n                                <td>Dia 5</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Energia</td>\n                                <td>350,00</td>\n                                <td>Dia 12</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Água</td>\n                                <td>200,00</td>\n                                <td>Dia 10</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Despesas fixas\">\n                    <Expenses />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor (R$)</th>\n                                <th>Vencimento</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Aluguel</td>\n                                <td>800,00</td>\n                                <td>Dia 5</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Energia</td>\n                                <td>350,00</td>\n                                <td>Dia 12</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Água</td>\n                                <td>200,00</td>\n                                <td>Dia 10</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Campanhas ativas\">\n                    <Campaign />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Data inicial</th>\n                                <th>Data final</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Combo cabelo e unhas</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo barba e cabelo</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo esfoliação</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <DataTable\n                    title=\"Despesas Fixas\"\n                    columns={columns}\n                    data={data}\n                    pagination\n                />\n            </CreateEstablismentForm>\n            <PageFooter>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={() => ''}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default Establishment;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/index.tsx",["881"],"import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst CardOperator: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const admOptions = [\n        { value: 1, label: 'Cielo' },\n        { value: 2, label: 'Stone' },\n        { value: 3, label: 'Pagseguro' },\n        { value: 4, label: 'GetNet' },\n        { value: 5, label: 'Rede' },\n        { value: 6, label: 'Safra' },\n    ];\n\n    const brandOptions = [\n        { value: 1, label: 'Amex' },\n        { value: 2, label: 'Elo' },\n        { value: 3, label: 'Hiper' },\n        { value: 4, label: 'Mastercard' },\n        { value: 5, label: 'Safra' },\n        { value: 6, label: 'Visa' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar operadora\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de taxas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Select\n                            label=\"Administradora\"\n                            name=\"administradora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={admOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Bandeira\"\n                            name=\"bandeira\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={brandOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={cardTransactions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa da operação\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa de antecipação de crédito\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Qtde dias a compensar\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/index.tsx",["882","883"],"import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst Expenses: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar despesa\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de despesas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Nome da despesa\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Valor\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Dia do vencimento\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default Expenses;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/index.tsx",["884","885","886"],"/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport FileInput from '../../../components/UnformFields/VideoInput';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport { Container, AddSkillModal } from './styles';\n\nconst Expenses: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    function handleCreateSSHKeySubmitWithKey(\n        uploadedSSHKey: React.ChangeEvent<HTMLInputElement>,\n    ) {\n        const formData = new FormData();\n\n        /*  setLoading({ uploadSSHKey: true });\n        refButton.current.style.background = '#65c754';\n        const formData = new FormData();\n        formData.append('File', uploadedSSHKey);\n\n        apiClient\n            .post(`/members/${memberUrn}/keys`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then(response => {\n                refreshPage();\n            })\n            .catch(error => {\n                toast.error(error.message);\n                refButton.current.style.background = '#d9534f';\n            })\n            .finally(() => setLoading({ uploadSSHKey: false })); */\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar Campanha\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de Campanha</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <Input\n                        textTransform=\"capitalize\"\n                        name=\"nomeDaCampanha\"\n                        label=\"Nome da campanha*\"\n                    />\n                    <div className=\"twoFieldsGroup\">\n                        <DatePicker label=\"Data inicial*\" name=\"dataInicial\" />\n                        <DatePicker label=\"Data final*\" name=\"dataFinal\" />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <CheckBox\n                            name=\"enviarNoWhatsapp\"\n                            label=\"Enviar via Whatsapp\"\n                        />\n                        <CheckBox\n                            name=\"enviarNoFacebook\"\n                            label=\"Enviar via Facebook\"\n                        />\n                        <CheckBox\n                            name=\"enviarNoInstagram\"\n                            label=\"Enviar via Instagram\"\n                        />\n                    </div>\n                    <FileInput\n                        name=\"midia\"\n                        label=\"Adicionar imagem ou vídeo da campanha (opcional)\"\n                    />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default Expenses;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/index.tsx",["887","888"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst FileInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n     const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue(ref: HTMLInputElement) {\n                ref.value = '';\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                {label && <p>{label}</p>}\n                {selectedFile && (selectedFile.type.includes('image') ? (\n                    <img\n                        src={URL.createObjectURL(selectedFile)}\n                        alt=\"imagem\"\n                    />\n                ) : (\n                    <video\n                        id=\"video\"\n                        src={URL.createObjectURL(selectedFile)}\n                        controls\n                    />\n                ))}\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*, video/*\"\n                    {...rest}\n                />\n            </label>\n        </Container>\n    );\n};\n\nexport default FileInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/index.tsx",["889","890"],"import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport AddInputs from './AddInputs';\nimport { Container, SearchContainer } from './styles';\n\nconst Inputs: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <SearchContainer>\n                <h1>Entradas, recebimentos e vouchers</h1>\n                <div>\n                    <AddInputs />\n                    <div>\n                        <input placeholder=\"Data, descrição ou valor\" />\n                        <button className=\"searchButton \" type=\"button\">\n                            <span>Pesquisar</span>\n                            <FaSearch />\n                        </button>\n                    </div>\n                </div>\n            </SearchContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Valor (R$)</th>\n                        <th>Forma de pagamento</th>\n                        <th>Descrição</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>250,00</td>\n                        <td>Cartão</td>\n                        <td>Dia de beleza</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>20,00</td>\n                        <td>Dinheiro</td>\n                        <td>Barba</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>80,00</td>\n                        <td>Cartão</td>\n                        <td>Corte e alisamento</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Inputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/index.tsx",["891","892"],"import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport AddOutputs from './AddOutputs';\nimport { Container, SearchContainer } from './styles';\n\nconst Inputs: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <SearchContainer>\n                <h1>Saídas, retiradas e vales</h1>\n                <div>\n                    <AddOutputs />\n                    <div>\n                        <input placeholder=\"Data, descrição ou valor\" />\n                        <button className=\"searchButton \" type=\"button\">\n                            <span>Pesquisar</span>\n                            <FaSearch />\n                        </button>\n                    </div>\n                </div>\n            </SearchContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data</th>\n                        <th>Valor (R$)</th>\n                        <th>Forma de pagamento</th>\n                        <th>Descrição</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>250,00</td>\n                        <td>Dinheiro</td>\n                        <td>Energia</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>1.500,00</td>\n                        <td>Dinheiro</td>\n                        <td>Aluguel</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>06/05/2021</td>\n                        <td>230,00</td>\n                        <td>Dinheiro</td>\n                        <td>Internet</td>\n                        <td>\n                            <MdDelete onClick={() => ''} />\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Container>\n    );\n};\n\nexport default Inputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/AddInputs/index.tsx",["893"],"/* eslint-disable prettier/prettier */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport * as Yup from 'yup';\nimport { OptionTypeBase } from 'react-select';\nimport { FaPlus } from 'react-icons/fa';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddInputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n    const [showClientInput, setShowClientInput] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Nova entrada</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"treeFieldsgroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento*\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                onChange={(option: OptionTypeBase | null) => {\n                                   if(option && option.label === 'Voucher'){\n                                       setShowClientInput(true);\n                                   }else {\n                                       setShowClientInput(false);\n                                   }}}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Tipo de receita*\"\n                                name=\"tipoReceita\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <>\n                            {showClientInput && (\n                            <Select\n                                label=\"Nome do cliente\"\n                                name=\"nomeCliente\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            )}\n                        </>\n                        <div className=\"treeFieldsgroup\">\n                            <Select\n                                label=\"Tipo documento\"\n                                name=\"tipoDespesa\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={documentOptions[0]}\n                                options={documentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Input\n                                name=\"numeroDocumento\"\n                                label=\"Número do documento\"\n                            />\n                            <Select\n                                name=\"colaborador\"\n                                label=\"Colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={documentOptions[0]}\n                                options={documentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddInputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Inputs/AddInputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/AddOutputs/index.tsx",["894","895","896"],"import React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Registro de saída</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"treeFieldsgroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento*\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Tipo de saída*\"\n                                name=\"tipoReceita\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={expensesOptions[1]}\n                                options={expensesOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Outputs/AddOutputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/WebcamCapture/index.tsx",[],["897","898","899","900","901"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/WebcamCapture/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/EmptyList/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/EmptyList/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/Home/index.tsx",["902","903","904"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport { convertToBrasilianDateFormat } from '../../../utils/dateUtils';\nimport AddProviderModal, { IFormData } from '../CreateProvider';\n\nimport { Container, ProviderHeaderContainer } from './styles';\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            contato: 'Fulano',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Fornecedores</h1>\n                <div>\n                    <AddProviderModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar fornecedor\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>CPF/CNPJ</th>\n                            <th>Contato</th>\n                            <th>Telefone</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.numeroCPFouCNPJ}</td>\n                                <td>{provider.contato}</td>\n                                <td>{provider.whatsapp}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados fornecedores cadastrados\"\n                    subtitle='Adicione um novo fornecedor clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/Home/index.tsx",["905","906"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport AddServiceModal from '../CreateService';\nimport { Container, ProviderHeaderContainer } from './styles';\n\nexport interface IFormData {\n    nome: string;\n    valor: string;\n    categoria: string;\n    tempoDeExecucao: string;\n}\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Botox capilar',\n            valor: 'R$ 350,00',\n            categoria: 'Cabelo',\n            tempoDeExecucao: '02:45:00',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Serviços</h1>\n                <div>\n                    <AddServiceModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar serviço\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Valor</th>\n                            <th>Tempo</th>\n                            <th>Categoria</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.valor}</td>\n                                <td>{provider.tempoDeExecucao}</td>\n                                <td>{provider.categoria}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados serviços cadastrados\"\n                    subtitle='Adicione um novo serviço clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Schedule/index.tsx",["907"],"/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable radix */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-shadow */\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport {\n    Calendar,\n    momentLocalizer,\n    ResourceHeaderProps,\n} from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport {\n    MdKeyboardArrowRight,\n    MdKeyboardArrowLeft,\n    MdPerson,\n    MdAccessTime,\n    MdAttachMoney,\n    MdEdit,\n    MdInfo,\n    MdAlarm,\n    MdAlarmOn,\n    MdInfoOutline,\n    MdPlayCircleOutline,\n} from 'react-icons/md';\nimport { RiMoneyDollarCircleLine } from 'react-icons/ri';\nimport {\n    BiStopCircle,\n    BiCalendarCheck,\n    BiCalendarX,\n    BiCalendarEdit,\n    BiCalendarExclamation,\n} from 'react-icons/bi';\n\nimport { Button, ButtonToolbar, Drawer, Popover, Whisper, Modal } from 'rsuite';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport DatePicker from 'react-datepicker';\nimport ComboBox from 'react-select';\nimport Button1 from 'react-bootstrap/Button';\nimport Input from '../../components/UnformFields/Input';\nimport FieldSet from '../../components/FieldSet';\n\nimport 'rsuite/src/styles/themes/default/index.less';\n\n/* import 'rsuite/dist/styles/rsuite-default.css';\n */ import MaskedInput from '../../components/UnformFields/InputMaskd';\nimport Select from '../../components/UnformFields/Select';\nimport './customModal.css';\nimport '../../styles/customreactdatepicker.css';\n\nimport {\n    Container,\n    ResourceHeader,\n    CalendarContainer,\n    Event,\n    MenuContainer,\n    PopoverButtonStyle,\n    CreateEventForm,\n    ButtonContainer,\n    FilterContainer,\n    EventContainer,\n} from './styles';\n\ninterface IResource {\n    title: string;\n    position: string;\n    img: string;\n}\n\ninterface IEventService {\n    descricao: string;\n    duracao: string;\n    preco: string;\n}\n\ninterface IEvent {\n    id: number;\n    title: string;\n    status: string;\n    resourceId: string;\n    client: string;\n    servicos: Array<IEventService>;\n    start: Date;\n    preference: string;\n    end: Date;\n    img: string;\n    cellPhone?: string;\n}\n\ninterface IEventFormData {\n    client: {\n        label: string;\n        value: number;\n    };\n    preference: {\n        label: string;\n        value: number;\n    };\n    hour: {\n        label: string;\n        value: number;\n    };\n    cellPhone: string;\n    services: Array<IEventService>;\n}\n\nmoment.locale('pt-br');\nconst localizer = momentLocalizer(moment);\n\nconst Schedule: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [showEventModal, setShowEventModal] = useState(false);\n    const [showAttendanceModal, setShowAttendanceEventModal] = useState(false);\n    const [focusedEvent, setFocusedEvent] = useState({});\n\n    const [eventData, setEventData] = useState<IEvent>({\n        id: 0,\n        title: '',\n        status: '',\n        resourceId: '',\n        client: '',\n        cellPhone: '',\n        preference: '',\n        servicos: [],\n        start: new Date(),\n        end: new Date(),\n        img: '',\n    });\n\n    const [events, setEvents] = useState([\n        {\n            title: 'Corte cabelo',\n\n            resourceId: 'Luciano',\n            client: 'Juliana',\n            status: 'Agendado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n                {\n                    descricao: 'Corte',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 9, 20, 0, 0),\n        },\n        {\n            title: 'Barba',\n            resourceId: 'Jessica',\n            client: 'Juliana',\n            status: 'Alterado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 2, 30, 0, 0),\n            end: new Date(2021, 4, 24, 4, 30, 0, 0),\n        },\n        {\n            title: 'Unhas',\n            resourceId: 'Marcia',\n            status: 'Confirmado',\n            img: 'https://i.pravatar.cc/500',\n            client: 'Juliana',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 6, 30, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 5, 30, 0, 0),\n            end: new Date(2021, 4, 24, 10, 30, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 6, 0, 0, 0),\n            end: new Date(2021, 4, 24, 8, 0, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Alan',\n            client: 'Juliana',\n            status: 'Cliente chegou',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 6, 30, 0, 0),\n            end: new Date(2021, 4, 24, 9, 0, 0, 0),\n        },\n        {\n            title: 'Corte cabelo',\n            resourceId: 'Fulana',\n            client: 'Juliana',\n            status: 'Finalizado',\n            img: 'https://i.pravatar.cc/500',\n            servicos: [\n                {\n                    descricao: 'Unhas',\n                    duracao: '00:30',\n                    preco: '80',\n                },\n                {\n                    descricao: 'Escova',\n                    duracao: '00:45',\n                    preco: '60',\n                },\n            ],\n            start: new Date(2021, 4, 24, 12, 30, 0, 0),\n            end: new Date(2021, 4, 24, 14, 30, 0, 0),\n        },\n    ]);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    function handleCloseEventModal() {\n        setShowEventModal(false);\n    }\n\n    function handleShowEventModal() {\n        setShowEventModal(true);\n    }\n\n    function handleCloseStopAttendanceModal() {\n        setShowEventModal(false);\n    }\n\n    function handleShowStopAttendanceModal() {\n        setShowEventModal(true);\n    }\n\n    const clients = [\n        { value: 1, label: 'Maria' },\n        { value: 2, label: 'Celso' },\n        { value: 3, label: 'Julia' },\n    ];\n\n    const positions = [\n        { value: 1, label: 'Barbeiro' },\n        { value: 2, label: 'Cabeleireiro' },\n        { value: 3, label: 'Esteticista' },\n    ];\n\n    const preferences = [\n        { value: 1, label: 'Comanda aberta' },\n        { value: 2, label: 'Indicação' },\n        { value: 3, label: 'Noivas' },\n        { value: 4, label: 'Normal' },\n        { value: 5, label: 'Preferencial' },\n        { value: 6, label: 'Primeira vez' },\n    ];\n\n    const hours = [\n        { value: 1, label: '8:00' },\n        { value: 2, label: '8:30' },\n        { value: 3, label: '9:00' },\n        { value: 4, label: '9:30' },\n        { value: 5, label: '10:00' },\n        { value: 6, label: '10:30' },\n        { value: 7, label: '11:00' },\n        { value: 8, label: '11:30' },\n        { value: 9, label: '12:00' },\n        { value: 10, label: '12:30' },\n    ];\n\n    const services = [\n        { value: 1, label: 'Unhas' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Corte' },\n    ];\n\n    const artists = [\n        { value: 1, label: 'Luciano' },\n        { value: 2, label: 'Marcio' },\n        { value: 3, label: 'Maria' },\n    ];\n\n    const clientsData = [\n        { value: 1, label: 'Luciano' },\n        { value: 2, label: 'Marcio' },\n        { value: 3, label: 'Maria' },\n    ];\n\n    const formRef = useRef<FormHandles>(null);\n\n    const handleCreateEventSubmit: SubmitHandler<IEventFormData> = async data => {\n        /* setEvents([\n            ...events,\n            {\n                cellPhone: data.cellPhone,\n                client: data.client.label,\n                preference: data.preference.label,\n                start: new Date(eventData.start.setHours(data.hour.value)),\n                servicos: data.services,\n                img: 'https://i.pravatar.cc/500',\n            },\n        ]); */\n    };\n\n    /*  const events = [\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(120, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n        {\n            title: 'Corte cabelo',\n            start: moment().toDate(),\n            end: moment().add(90, 'minutes').toDate(),\n        },\n    ];\n */\n\n    const resources = [\n        {\n            id: 'Luciano',\n            title: 'Luciano',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Jessica',\n            title: 'Jessica',\n            position: 'Maquiadora',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Marcia',\n            title: 'Marcia',\n            position: 'Cabeleleira',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Alan',\n            title: 'Alan',\n            position: 'Esteticista',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Fulana',\n            title: 'Fulana',\n            position: 'Manicure',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Beltrano',\n            title: 'Beltrano',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Ciclano',\n            title: 'Ciclano',\n            position: 'Cabeleireiro',\n            allday: 'off',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Fulaninho',\n            title: 'Fulaninho',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n        {\n            id: 'Beltraninho',\n            title: 'Beltraninho',\n            position: 'Cabeleireiro',\n            img: 'https://i.pravatar.cc/500',\n        },\n    ];\n\n    const [scrollProgress, setScrollProgress] = useState(0);\n\n    useEffect(() => {\n        const buttonRight = document.getElementById(\n            'slideRight',\n        ) as HTMLButtonElement;\n        const buttonLeft = document.getElementById(\n            'slideLeft',\n        ) as HTMLButtonElement;\n\n        buttonRight.onclick = () => {\n            document.getElementsByClassName(\n                'rbc-time-content',\n            )[0].scrollLeft += 300;\n        };\n        buttonLeft.onclick = () => {\n            document.getElementsByClassName(\n                'rbc-time-content',\n            )[0].scrollLeft -= 300;\n        };\n\n        const EventList = Array.from(\n            document.getElementsByClassName(\n                'rbc-event',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        EventList.forEach(item => {\n            const { left, width, height } = item.style;\n            const siblings =\n                item.parentElement &&\n                Array.from(item.parentElement.children)\n                    .filter(c => c !== item)\n                    .map(item => item as HTMLElement);\n\n            item.addEventListener('mouseover', () => {\n                siblings?.forEach(item => {\n                    item.style.display = 'none';\n                });\n                item.style.height = 'auto';\n                item.style.width = '100%';\n                item.style.left = '0';\n                item.style.zIndex = '999';\n            });\n\n            item.addEventListener('mouseout', () => {\n                siblings?.forEach(item => {\n                    item.style.display = 'block';\n                });\n                item.style.height = height;\n                item.style.width = width;\n                item.style.left = left;\n                item.style.zIndex = '';\n            });\n        });\n\n        /*   EventList.forEach(item => {\n            const size = item.style.height;\n\n            item.addEventListener('mouseover', () => {\n                item.style.height = 'auto';\n            });\n            item.addEventListener('mouseout', () => {\n                item.style.height = size;\n            });\n        }); */\n\n        /* return () => {}; */\n\n        /*    const target = document.getElementsByClassName('rbc-time-content')[0];\n\n        const scrollListener = () => {\n            const windowScroll = target.scrollLeft; // Distance of the scrollbar from the leftmost point\n            const totalWidth = target.scrollWidth - target.clientWidth; // Total width the scrollbar can traverse\n\n            if (windowScroll === 0) {\n                setScrollProgress(0);\n            }\n\n            if (windowScroll > totalWidth) {\n                setScrollProgress(100);\n            }\n\n            setScrollProgress((windowScroll / totalWidth) * 100);\n        };\n\n        target.addEventListener('touchmove', scrollListener);\n\n        return () => {\n            target.removeEventListener('touchmove', scrollListener);\n        }; */\n    });\n\n    const [date, setDate] = useState(new Date());\n    const [reload, setReload] = useState(false);\n\n    const speakerEdit = <Popover title=\"Editar\" />;\n    const speakerPlay = <Popover title=\"Iniciar atendimento\" />;\n    const speakerStop = <Popover title=\"Finalizar atendimento\" />;\n    const speakerConfirm = <Popover title=\"Confirmar agendamento\" />;\n    const speakerCancel = <Popover title=\"Cancelar horário de atendimento\" />;\n    const speakerClientIsHere = <Popover title=\"Cliente chegou\" />;\n\n    return (\n        <Container>\n            <h1>Agenda</h1>\n            <FilterContainer>\n                <DatePicker\n                    selected={date}\n                    onChange={(date: Date) => date && setDate(date)}\n                />\n\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={artists}\n                    isSearchable\n                    defaultValue={{\n                        label: 'Filtro por artista',\n                        value: 0,\n                    }}\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={positions}\n                    defaultValue={{\n                        label: 'Filtro por função',\n                        value: 0,\n                    }}\n                    isSearchable\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n                <ComboBox\n                    classNamePrefix=\"react-select\"\n                    options={clientsData}\n                    isSearchable\n                    defaultValue={{\n                        label: 'Filtro por cliente',\n                        value: 0,\n                    }}\n                    blurInputOnSelect\n                    openMenuOnFocus\n                />\n            </FilterContainer>\n\n            <Drawer show={show} onHide={handleClose}>\n                <Drawer.Header>\n                    <Drawer.Title>Novo Agendamento</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                    <CreateEventForm\n                        id=\"form\"\n                        onSubmit={handleCreateEventSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Cliente\">\n                            <Select\n                                label=\"Cliente\"\n                                name=\"client\"\n                                classNamePrefix=\"react-select\"\n                                options={clients}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Preferência\"\n                                name=\"preference\"\n                                classNamePrefix=\"react-select\"\n                                options={preferences}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Horário\"\n                                name=\"hour\"\n                                classNamePrefix=\"react-select\"\n                                options={hours}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <MaskedInput\n                                mask=\"(99) 9 9999-9999\"\n                                name=\"cellPhone\"\n                                label=\"Celular\"\n                            />\n                        </FieldSet>\n                        <FieldSet title=\"Serviço(s)\">\n                            <Select\n                                label=\"Descrição\"\n                                name=\"service\"\n                                classNamePrefix=\"react-select\"\n                                options={services}\n                                isSearchable\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <MaskedInput\n                                mask=\"99:99\"\n                                name=\"time\"\n                                label=\"Duração\"\n                            />\n                            <MaskedInput\n                                mask=\"R$ 999,99\"\n                                name=\"value\"\n                                label=\"Valor\"\n                            />\n                            <div>\n                                <button>Incluir mais serviços</button>\n                            </div>\n                        </FieldSet>\n                    </CreateEventForm>\n                </Drawer.Body>\n                <Drawer.Footer>\n                    <ButtonContainer>\n                        <button\n                            className=\"fibre-button fibre-button--cancel\"\n                            type=\"button\"\n                            onClick={handleClose}\n                        >\n                            Cancelar\n                        </button>\n                        <button\n                            className=\"fibre-button fibre-button--cancel\"\n                            type=\"submit\"\n                            form=\"form\"\n                        >\n                            Salvar\n                        </button>\n                    </ButtonContainer>\n                </Drawer.Footer>\n            </Drawer>\n\n            {/*       <Calendar\n                localizer={localizer}\n                toolbar={false}\n                formats={{\n                    dateFormat: 'dd',\n                    dayFormat: (date: any, culture: any, localizer: any) =>\n                        localizer.format(date, 'dddd', culture),\n                }}\n                events={events}\n                defaultDate={moment().toDate()}\n                defaultView=\"week\"\n                selectable\n                popup\n                style={{ height: 600 }}\n            /> */}\n\n            <CalendarContainer>\n                <div>\n                    <button id=\"slideLeft\" type=\"button\">\n                        <MdKeyboardArrowLeft />\n                    </button>\n                    <button id=\"slideRight\" type=\"button\">\n                        <MdKeyboardArrowRight />\n                    </button>\n                </div>\n                <Calendar\n                    toolbar={false}\n                    components={{\n                        resourceHeader: ({ resource, index }) => {\n                            const {\n                                title,\n                                position,\n                                img,\n                            } = resource as IResource;\n\n                            return (\n                                <ResourceHeader key={index}>\n                                    <img src={img} alt=\"avatar\" />\n                                    <strong>{title}</strong>\n                                    <p>{position}</p>\n                                </ResourceHeader>\n                            );\n                        },\n                        event: ({ event }) => {\n                            const {\n                                title,\n                                status,\n                                resourceId,\n                                client,\n                                servicos,\n                                start,\n                                end,\n                                img,\n                            } = event as IEvent;\n\n                            const duration = moment.duration(\n                                moment(end).diff(moment(start)),\n                            );\n\n                            let total = 0;\n\n                            return (\n                                <EventContainer>\n                                    <Event\n                                        status={status}\n                                        onClick={handleShowEventModal}\n                                    >\n                                        <p>{client}</p>\n                                        {`${moment(start, 'HHmmss').format(\n                                            'HH:mm',\n                                        )} - ${moment(end, 'HHmmss').format(\n                                            'HH:mm',\n                                        )} -> `}\n                                        {status}\n                                        {/*  <ul>\n                                            {servicos.map(service => (\n                                                <li>{service.descricao}</li>\n                                            ))}\n                                        </ul> */}\n                                        <MenuContainer>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerCancel}\n                                            >\n                                                <BiCalendarX />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerClientIsHere}\n                                            >\n                                                <BiCalendarExclamation />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerEdit}\n                                            >\n                                                <BiCalendarEdit />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerConfirm}\n                                            >\n                                                <BiCalendarCheck />\n                                            </Whisper>\n                                            <Whisper\n                                                placement=\"bottom\"\n                                                trigger=\"hover\"\n                                                speaker={speakerPlay}\n                                            >\n                                                <MdPlayCircleOutline />\n                                            </Whisper>\n                                        </MenuContainer>\n                                    </Event>\n                                    <Modal\n                                        show={showEventModal}\n                                        onHide={handleCloseEventModal}\n                                        overflow\n                                    >\n                                        <Modal.Header>\n                                            <Modal.Title>\n                                                {`${moment(\n                                                    start,\n                                                    'HHmmss',\n                                                ).format('HH:mm')} - ${moment(\n                                                    end,\n                                                    'HHmmss',\n                                                ).format('HH:mm')} -> `}\n                                                {status}\n                                            </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                            <img src={img} alt=\"avatar\" />\n                                            <div>\n                                                <p>{client}</p>\n                                                <ul>\n                                                    {servicos.map(service => (\n                                                        <li>\n                                                            {service.descricao}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                                <div>\n                                                    <div>\n                                                        <MdAccessTime />\n                                                        <span>\n                                                            {`${duration.hours()}h:${duration.minutes()}min`}\n                                                        </span>\n                                                    </div>\n                                                    <div>\n                                                        <RiMoneyDollarCircleLine />\n                                                        <span>\n                                                            {servicos.forEach(\n                                                                service => {\n                                                                    total += parseInt(\n                                                                        service.preco,\n                                                                    );\n                                                                },\n                                                            )}\n                                                            {total}\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Modal.Body>\n                                        <Modal.Footer>\n                                            <MenuContainer>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerCancel}\n                                                >\n                                                    <BiCalendarX />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={\n                                                        speakerClientIsHere\n                                                    }\n                                                >\n                                                    <BiCalendarExclamation />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerEdit}\n                                                >\n                                                    <BiCalendarEdit />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerConfirm}\n                                                >\n                                                    <BiCalendarCheck />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerPlay}\n                                                >\n                                                    <MdPlayCircleOutline />\n                                                </Whisper>\n                                                <Whisper\n                                                    placement=\"bottom\"\n                                                    trigger=\"hover\"\n                                                    speaker={speakerStop}\n                                                    onClick={\n                                                        handleShowStopAttendanceModal\n                                                    }\n                                                >\n                                                    <BiStopCircle />\n                                                </Whisper>\n                                            </MenuContainer>\n                                        </Modal.Footer>\n                                    </Modal>\n                                </EventContainer>\n                            );\n                        },\n                    }}\n                    localizer={localizer}\n                    events={events}\n                    defaultView=\"day\"\n                    onSelectSlot={selectData => {\n                        handleShow();\n                        setEventData({\n                            ...eventData,\n                            end: new Date(selectData.start),\n                            start: new Date(selectData.start),\n                        });\n                    }}\n                    selectable\n                    popup\n                    resources={resources}\n                    date={date}\n                    defaultDate={new Date(2021, 4, 24)}\n                />\n            </CalendarContainer>\n            <Modal\n                show={showAttendanceModal}\n                onHide={handleCloseStopAttendanceModal}\n                overflow\n            >\n                <Modal.Header>\n                    <Modal.Title />\n                </Modal.Header>\n                <Modal.Body>\n                    <h1>fff</h1>\n                </Modal.Body>\n                <Modal.Footer />\n            </Modal>\n\n            {console.log(showAttendanceModal)}\n        </Container>\n    );\n};\n\nexport default Schedule;\n\n/* https://react-bootstrap.github.io/components/offcanvas/ */\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Schedule/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/Home/index.tsx",["908","909"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport EmptyList from '../../../components/EmptyList';\nimport AddServiceModal from '../CreateProduct';\nimport { Container, ProviderHeaderContainer } from './styles';\n\nexport interface IFormData {\n    nome: string;\n    marca: string;\n    tipo: string;\n    precoDeVenda: string;\n}\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Revelador',\n            marca: 'CADVEU',\n            tipo: 'Cabelo',\n            precoDeVenda: '21,60',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [providersList, setProvidersList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchProvider(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ProviderHeaderContainer>\n                <h1>Produtos</h1>\n                <div>\n                    <AddServiceModal />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </ProviderHeaderContainer>\n            {providersList.length > 0 ? (\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Marca</th>\n                            <th>Tipo do produto</th>\n                            <th>Preço de venda</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {providersList.map((provider, index) => (\n                            /* Object.values(client).some(value =>\n\t\t                    value\n\t\t                        .toLocaleUpperCase()\n\t\t                        .startsWith(searchTerm.toLocaleUpperCase()),\n\t\t                ) ? ( */\n                            <tr>\n                                <td>{provider.nome}</td>\n                                <td>{provider.marca}</td>\n                                <td>{provider.tipo}</td>\n                                <td>{provider.precoDeVenda}</td>\n                                <td>\n                                    <MdDelete\n                                        onClick={() => {\n                                            const updatedProviderList = providersList.filter(\n                                                (_, providerIndex) =>\n                                                    providerIndex !== index,\n                                            );\n\n                                            setProvidersList(\n                                                updatedProviderList,\n                                            );\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            ) : (\n                <EmptyList\n                    title=\"Não foram encontrados produtos cadastrados\"\n                    subtitle='Adicione um novo produto clicando no botão \"+\"'\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/index.tsx",["910","911","912","913","914","915","916","917","918","919","920","921"],"/* eslint-disable prettier/prettier */\nimport React, { useRef, useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport DatePicker from 'react-datepicker';\nimport { MdInsertDriveFile, MdDelete, MdRemoveRedEye } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport AddComandaModal, { IFormData } from './CreateComanda';\n\n/* import AddComandaModal from './CreateComanda';\n */ import Select from '../../../components/UnformFields/Select';\nimport Input from '../../../components/UnformFields/Input';\nimport {\n    Container,\n    ComandaHeaderContainer,\n    CreateComandaForm,\n    AddComandaMenu,\n} from './styles';\n\nconst professionalsList = [\n    { value: 1, label: 'Marcia' },\n    { value: 2, label: 'Sergio' },\n    { value: 3, label: 'Daniel' },\n];\n\nconst servicesList = [\n    { value: 1, label: 'Hidratação' },\n    { value: 2, label: 'Cabelo' },\n    { value: 3, label: 'Manícure e pedícure' },\n];\n\nconst Comandas: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [date, setDate] = useState(new Date());\n    const handleCreateComandaSubmit: SubmitHandler<IFormData> = async data =>\n        '';\n    const [comandasList, setComandasList] = useState<Array<IFormData> | null>(\n        null,\n    );\n\n    return (\n        <Container>\n            <ComandaHeaderContainer>\n                <h1>Comandas do dia</h1>\n                <div>\n                    <DatePicker\n                        selected={date}\n                        onChange={(selectedDate: Date) =>\n                            selectedDate && setDate(selectedDate)}\n                    />\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar comanda\" />\n                    </div>\n                </div>\n            </ComandaHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Número da comanda</th>\n                        <th>Cliente</th>\n                        <th>Profissional</th>\n                        <th>Valor Pago</th>\n                        <th>Ação</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>1465</td>\n                        <td>Marcia</td>\n                        <td>Marcela</td>\n                        <td>R$ 50,00</td>\n                        <td>\n                            <div>\n                                <AddComandaModal\n                                    saveComanda={comanda => {\n                                    if (comandasList) {\n                                        setComandasList([...comandasList, comanda]);\n                                    } else {\n                                        setComandasList([comanda]);\n                                    }\n                                }}\n                                />\n                                <MdDelete />\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n\n            {/*        <CreateComandaForm onSubmit={() => ''} id=\"form\">\n                <AddComandaMenu>\n                    <Select\n                        label=\"Serviço\"\n                        name=\"servico\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={{\n                            label: 'Selecione',\n                            value: 0,\n                        }}\n                        options={professionalsList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Select\n                        label=\"Profissional\"\n                        name=\"profissional\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={{\n                            label: 'Selecione',\n                            value: 0,\n                        }}\n                        options={servicesList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Input name=\"valor\" label=\"Valor unitário\" />\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                    >\n                        Adicionar\n                    </button>\n                </AddComandaMenu>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Serviço/Produto</th>\n                            <th>Profissional</th>\n                            <th>Preço Unit.</th>\n                            <th>Desconto</th>\n                            <th>Preço total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Hidratação</td>\n                            <td>Marcia</td>\n                            <td>R$ 50,00</td>\n                            <th>R$ 25,00</th>\n                            <th>R$ 25,00</th>\n                        </tr>\n                        <tr>\n                            <td>Corte</td>\n                            <td>Helena</td>\n                            <td>R$ 50,00</td>\n                            <th>R$ 25,00</th>\n                            <th>R$ 25,00</th>\n                        </tr>\n                    </tbody>\n                </Table>\n            </CreateComandaForm> */}\n        </Container>\n    );\n};\nexport default Comandas;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/CreateComanda/index.tsx",["922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comandas/CreateComanda/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/index.tsx",["950","951","952","953","954","955","956","957","958","959","960","961"],"/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react';\nimport { Chart, Pie, Bar, Doughnut } from 'react-chartjs-2';\nimport { MdAttachMoney, MdTimeline, MdSystemUpdateAlt,MdSort, MdDelete } from 'react-icons/md';\nimport { VscFilePdf } from 'react-icons/vsc';\nimport { IoIosCalculator } from 'react-icons/io';\nimport DatePicker from 'react-datepicker';\nimport { Table } from 'react-bootstrap';\nimport Checkbox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    Section1,\n    Section2,\n    PieChart,\n    BarChart,\n    ChartsContainer,\n    CardsContainer,\n    CardsContainer2,\n    Card2,\n    Card3,\n    Card,\n    Title,\n} from './styles';\n\nimport ViewComandaModal from './ViewComanda';\n\n\nconst CashRegister: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n\n    const pieData = {\n        labels: ['Agendamentos concluídos', 'Agendamentos cancelados'],\n        datasets: [\n            {\n                label: '# of Votes',\n                data: [150, 20],\n                backgroundColor: ['#fd5c0e', '#fd8b53'],\n                borderColor: ['#fff', '#fff'],\n            },\n        ],\n    };\n\n    const barData = {\n        labels: [\n            'Hoje',\n        ],\n        /*  datasets: [\n            {\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n                barOptions: {},\n            },\n        ], */\n        datasets: [\n            {\n                label: 'Dinheiro',\n                data: [1800],\n                backgroundColor: '#fd5c0e',\n            },\n            {\n                label: 'Crédito',\n                data: [650],\n                backgroundColor: '#fd8b53',\n            },\n            {\n                label: 'Débito',\n                data: [350],\n                backgroundColor: '#fdab82',\n            },\n            {\n                label: 'PIX',\n                data: [650],\n                backgroundColor: '#fdc3a5',\n            },\n            {\n                label: 'Voucher',\n                data: [350],\n                backgroundColor: '#fddccb',\n            }\n\n        ],\n    };\n\n    const barOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n/*         barPercentage: 0.7,\n */        barThickness: 90,\n        scales: {\n            y: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n                ticks: {\n                    callback(value: string) {\n                        return `R$ ${value}`;\n                    },\n                    beginAtZero: true,\n                },\n            },\n            x: {\n                grid: {\n                    color: 'white',\n                    borderColor: 'white',\n                    tickColor: 'white',\n                },\n            },\n        },\n    };\n\n    const pieOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            /*  title: {\n                display: true,\n                text: 'Chart.js Horizontal Bar Chart',\n            }, */\n        },\n    };\n\n    return (\n        <Container>\n            <h1>Caixa do dia - Aberto</h1>\n            <div>\n                <Title>\n                    Data do caixa\n                </Title>\n                <DatePicker\n                    selected={date}\n                    onChange={(selecteDate: Date) =>\n                    selecteDate && setDate(selecteDate)}\n                />\n            </div>\n            <div>\n                <Section1>\n                    <Title>Movimentações (valores)</Title>\n                    <div>\n                        <Card2>\n                            <p>Dinheiro</p>\n                            <div>\n                                <p>R$ 250,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Crédito</p>\n                            <div>\n                                <p>R$ 1250,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Débito</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>PIX</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                        <Card2>\n                            <p>Voucher</p>\n                            <div>\n                                <p>R$ 5000,00</p>\n                                <MdAttachMoney />\n                            </div>\n                        </Card2>\n                    </div>\n                    <Title>\n                        Movimentações (proporção)\n                    </Title>\n                    <Bar type=\"\" data={barData} width={340} height={80} options={barOptions} />\n                    <Title>\n                        Comandas do dia\n                    </Title>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Número da comanda</th>\n                                <th>Cliente</th>\n                                <th>Status</th>\n                                <th>Valor Pago</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>1465</td>\n                                <td>Marcia</td>\n                                <td>Aberta</td>\n                                <td>R$ 50,00</td>\n                                <td>\n                                    <div>\n                                        <VscFilePdf />\n                                        <ViewComandaModal />\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <Title>\n                        Entradas x Saídas\n                    </Title>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Valor (R$)</th>\n                                <th>Forma de pagamento</th>\n                                <th>Descrição</th>\n                                <th>Tipo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>250,00</td>\n                                <td>Cartão</td>\n                                <td>Dia de beleza</td>\n                                <td>Entrada</td>\n                            </tr>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>20,00</td>\n                                <td>Dinheiro</td>\n                                <td>Produto de limpeza</td>\n                                <td>Saída</td>\n                            </tr>\n                            <tr>\n                                <td>06/05/2021</td>\n                                <td>80,00</td>\n                                <td>Cartão</td>\n                                <td>Corte e alisamento</td>\n                                <td>Entrada</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Section1>\n                <Section2>\n                    <Title>Agendamentos (concluídos x cancelados)</Title>\n                    <PieChart>\n                        <Doughnut\n                            height={100}\n                            width={100}\n                            type=\"\"\n                            data={pieData}\n                            options={pieOptions}\n                        />\n                    </PieChart>\n                    <div>\n                        <Title>Agendamentos (números)</Title>\n                        <Card3>\n                            <p>Total de agendamentos</p>\n                            <div>\n                                <p>25</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                        <Card3>\n                            <p>Agendamentos concluídos</p>\n                            <div>\n                                <p>20</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                        <Card3>\n                            <p>Agendamentos cancelados</p>\n                            <div>\n                                <p>5</p>\n                                <MdTimeline />\n                            </div>\n                        </Card3>\n                    </div>\n                </Section2>\n            </div>\n            <div>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={()=> \"\"}\n                >\n                    Gerar relatório do dia\n                    {/*                     <IoIosCalculator /> */}\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={()=> \"\"}\n                >\n                    Fechar caixa\n                    {/*                     <IoIosCalculator /> */}\n                </button>\n            </div>\n        </Container>\n    );\n};\n\nexport default CashRegister;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/ViewComanda/index.tsx",["962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001"],"/* eslint-disable no-shadow */\n/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect, BaseSyntheticEvent } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport {\n    FaWhatsapp,\n    FaInstagram,\n    FaFacebook,\n    FaTwitter,\n    FaPlus,\n} from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport {\n    MdKeyboardArrowRight,\n    MdKeyboardArrowDown,\n    MdRemoveRedEye,\n} from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport ReactInputMask from 'react-input-mask';\nimport { OptionTypeBase } from 'react-select';\nimport FieldSet from '../../../../components/FieldSet';\nimport Input from '../../../../components/UnformFields/Input';\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport Select from '../../../../components/UnformFields/Select';\nimport Checkbox from '../../../../components/UnformFields/CheckBox';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../../utils/masks';\nimport {\n    Container,\n    CreateComandaModal,\n    CreateComandaForm,\n    SectionButton,\n    AddComandaMenu,\n    TotalValue,\n    PaymentContainer,\n    ConfigurePaymentForm,\n    PendingValue,\n    ProductFormContainer,\n    ServiceFormContainer,\n} from './styles';\nimport '../../../../styles/customreactselect.css';\nimport '../../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../../utils/dateUtils';\nimport apiClient from '../../../../services/apiClient';\n\nexport enum discountType {\n    'value',\n    'percentage',\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst professionalsList = [\n    { value: 1, label: 'Marcia' },\n    { value: 2, label: 'Sergio' },\n    { value: 3, label: 'Daniel' },\n];\n\nconst types = [\n    { value: 1, label: 'Produto' },\n    { value: 2, label: 'Serviço' },\n];\n\nconst paymentOptions = [\n    { value: 1, label: 'Cartão' },\n    { value: 2, label: 'Dinheiro' },\n    { value: 3, label: 'Voucher' },\n];\n\nconst servicesList = [\n    { value: 1, label: 'Hidratação' },\n    { value: 2, label: 'Cabelo' },\n    { value: 3, label: 'Manícure e pedícure' },\n];\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [currentForm, setCurrentForm] = useState<OptionTypeBase>({\n        value: 2,\n        label: 'Serviço',\n    });\n    const [showPaymentContainer, setShowPaymentContainer] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <MdRemoveRedEye onClick={handleShow} />\n            <CreateComandaModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <CreateComandaModal.Header>\n                    <CreateComandaModal.Title>\n                        <p>Detalhes da Comanda - Márcia Soares</p>\n                    </CreateComandaModal.Title>\n                </CreateComandaModal.Header>\n                <CreateComandaModal.Body>\n                    <PendingValue>\n                        <div>Pendente de pagamento:</div>\n                        <div>R$ 00,00</div>\n                    </PendingValue>\n                    <div>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Serviço/Produto</th>\n                                    <th>Profissional</th>\n                                    <th>Preço Unit.</th>\n                                    <th>Qtde</th>\n                                    <th>Desconto</th>\n                                    <th>Preço total</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>1</td>\n                                    <td>Hidratação</td>\n                                    <td>Marcela</td>\n                                    <td>R$ 50,00</td>\n                                    <td\n                                        contentEditable=\"true\"\n                                        onInput={(event: BaseSyntheticEvent) =>\n                                            console.log(event.target.innerText)\n                                        }\n                                    />\n                                    <td contentEditable=\"true\">R$ 10,00</td>\n                                    <td>R$ 40,00</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPaymentContainer(!showPaymentContainer)\n                            }\n                        >\n                            {showPaymentContainer\n                                ? 'Ocultar Pagamento'\n                                : 'Mostrar Pagamento'}\n                            {showPaymentContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPaymentContainer && (\n                            <PaymentContainer>\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th>Forma de pagamento </th>\n                                            <th>Valor (R$) </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Dinheiro</td>\n                                            <td>R$ 50,00</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Voucher</td>\n                                            <td>R$ 10,00</td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </PaymentContainer>\n                        )}\n                    </div>\n                    <TotalValue>\n                        <div>Valor da Comanda:</div>\n                        <div>R$ 60,00</div>\n                        <div>-</div>\n                        <div>Desconto:</div>\n                        <div>R$ 00,00</div>\n                        <div>=</div>\n                        <div>Total a pagar:</div>\n                        <div>R$ 60,00</div>\n                    </TotalValue>\n                </CreateComandaModal.Body>\n                <CreateComandaModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Voltar\n                    </button>\n                </CreateComandaModal.Footer>\n            </CreateComandaModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/CashRegister/ViewComanda/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/index.tsx",["1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete, MdEdit } from 'react-icons/md';\nimport { FaPlus, FaSearch } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport FieldSet from '../../../components/FieldSet';\nimport AddOutputs from './AddOutputs';\nimport PaymentDelete from './PaymentDelete';\nimport PaymentEdit from './EditOutputs';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    PayableResume,\n    ResumeItem,\n    PaymentHeaderContainer,\n} from './styles';\n\ninterface IPayment {\n    date: string;\n    credor: string;\n    valor: string;\n    descricao: string;\n    status: 'Pago' | 'Pendente' | 'Em atraso' | 'Parcial';\n}\n\nconst searchTypeOptions = [\n    { value: 1, label: 'Termo' },\n    { value: 2, label: 'Período' },\n];\n\nconst Inputs: React.FC = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [paymentSearchTerm, setPaymentSearchTerm] = useState<string | null>(\n        null,\n    );\n    const [searchType, setSearchType] = useState(searchTypeOptions[0]);\n    const [paymentsList, setPaymentsList] = useState<Array<IPayment>>([\n        {\n            date: '06/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Energia',\n            status: 'Pago',\n        },\n        {\n            date: '06/08/2021',\n            credor: 'SANEAGO',\n            valor: '250,00',\n            descricao: 'Água',\n            status: 'Pendente',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Em atraso',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Parcial',\n        },\n        {\n            date: '09/05/2021',\n            credor: 'ENEL',\n            valor: '250,00',\n            descricao: 'Insumos',\n            status: 'Parcial',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PaymentHeaderContainer>\n                <h1>Contas a pagar</h1>\n                <div>\n                    <AddOutputs />\n                    <div>\n                        <div>\n                            <strong>Pesquisar por:</strong>\n                            <Select\n                                label=\"Tipo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={searchTypeOptions[0]}\n                                options={searchTypeOptions}\n                                onChange={value =>\n                                    value && setSearchType(value)\n                                }\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        {searchType.value === 1 ? (\n                            <div>\n                                <FaSearch />\n                                <input\n                                    placeholder=\"Data, descrição ou credor\"\n                                    onChange={event =>\n                                        setPaymentSearchTerm(event.target.value)\n                                    }\n                                />\n                            </div>\n                        ) : (\n                            <div>\n                                <strong>Inicio:</strong>\n                                <DatePicker\n                                    selected={startDate}\n                                    onChange={(selectedDate: Date) =>\n                                        selectedDate &&\n                                        setStartDate(selectedDate)\n                                    }\n                                />\n                                <strong>Fim:</strong>\n                                <DatePicker\n                                    selected={endDate}\n                                    onChange={(selectedDate: Date) =>\n                                        selectedDate && setEndDate(selectedDate)\n                                    }\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </PaymentHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Data do vencimento</th>\n                        <th>Credor</th>\n                        <th>Valor (R$)</th>\n                        <th>Descrição</th>\n                        <th>Status</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {paymentSearchTerm !== null && paymentSearchTerm !== ''\n                        ? paymentsList\n                              .filter(payment => {\n                                  return Object.values(payment).some(value =>\n                                      value\n                                          .toLocaleUpperCase()\n                                          .startsWith(\n                                              paymentSearchTerm.toLocaleUpperCase(),\n                                          ),\n                                  );\n                              })\n                              .map((payment, index) => (\n                                  <tr>\n                                      <td>{payment.date}</td>\n                                      <td>{payment.credor}</td>\n                                      <td>{payment.valor}</td>\n                                      <td>{payment.descricao}</td>\n                                      <th>{payment.status}</th>\n                                      <td>\n                                          {/* <MdDelete\n                                                  onClick={() => {\n                                                      setPaymentsList(\n                                                          paymentsList.filter(\n                                                              (\n                                                                  _,\n                                                                  clientIndex,\n                                                              ) =>\n                                                                  clientIndex !==\n                                                                  index,\n                                                          ),\n                                                      );\n                                                  }}\n                                              /> */}\n                                      </td>\n                                  </tr>\n                              ))\n                        : paymentsList.map((payment, index) => (\n                              <tr>\n                                  <td>{payment.date}</td>\n                                  <td>{payment.credor}</td>\n                                  <td>{payment.valor}</td>\n                                  <td>{payment.descricao}</td>\n                                  <th>{payment.status}</th>\n                                  <td>\n                                      <div>\n                                          {' '}\n                                          {/*    <MdDelete\n                                              onClick={() => {\n                                                  setPaymentsList(\n                                                      paymentsList.filter(\n                                                          (_, clientIndex) =>\n                                                              clientIndex !==\n                                                              index,\n                                                      ),\n                                                  );\n                                              }}\n                                          /> */}\n                                          <PaymentDelete />\n                                          <PaymentEdit />\n                                      </div>\n                                  </td>\n                              </tr>\n                          ))}\n                </tbody>\n            </Table>\n            {/*  <PayableResume>\n                <ResumeItem>\n                    <strong>Pagas (R$):</strong>\n                    <p>2.502,95</p>\n                    <strong>A Pagar (R$):</strong>\n                    <p>1.500,00</p>\n                    <strong>Vencidas (R$):</strong>\n                    <p>500,00</p>\n                </ResumeItem>\n            </PayableResume> */}\n        </Container>\n    );\n};\n\nexport default Inputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/styles.ts",["1013"],"import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    height: 100%;\n    border-radius: 10px;\n    color: var(--primary-text-color);\n    display: flex;\n    flex-direction: column;\n\n    > :nth-child(3) {\n        margin-top: 20px;\n        > :first-child {\n            padding: 0px;\n        }\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n    }\n\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 7%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n\n            > tr > :last-child {\n                > div {\n                    display: flex;\n                    > svg {\n                        margin-left: 5px;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const PayableResume = styled.div`\n    border-top: 1px solid var(--primary-border-color);\n    background: var(--primary-border-color);\n    padding: 20px;\n    margin: -30px;\n`;\n\nexport const ResumeItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const PaymentHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > :nth-child(2) {\n        padding: 0px;\n    }\n\n    > :last-child {\n        display: flex;\n        justify-content: space-between;\n        margin: 25px 0px;\n\n        > :first-child {\n            svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :last-child {\n            display: flex;\n\n            > :first-child {\n                margin-right: 20px;\n                display: flex;\n                align-items: center;\n\n                > strong {\n                    margin-right: 10px;\n                }\n\n                > div {\n                    width: 105px;\n                }\n            }\n\n            > :nth-child(2) {\n                display: flex;\n\n                > strong {\n                    margin-right: 10px;\n                    margin-left: 10px;\n                }\n            }\n\n            > :last-child {\n                position: relative;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n\n                > input {\n                    height: 35px;\n                    padding: 10px;\n                    border-radius: 15px;\n                    border: 1px solid #eeee;\n                    padding-left: 40px;\n\n                    &:focus {\n                        border-color: var(--base-tertiary-color);\n                    }\n                }\n\n                > svg {\n                    color: var(--base-tertiary-color);\n                    width: 13px;\n                    height: 13px;\n                    left: 15px;\n                    position: absolute;\n                    z-index: 1;\n                }\n            }\n        }\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/AddOutputs/index.tsx",["1014","1015","1016","1017","1018"],"import React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport { Container, AddSkillModal, CreateInputForm } from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                <span>Adicionar</span>\n                <FaPlus />\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Novo pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"twoFieldsGroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <DatePicker\n                                label=\"Data de vencimento\"\n                                name=\"dataDeVencimento\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/AddOutputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/PaymentDelete/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/PaymentDelete/styles.ts",["1019"],"import styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    display: flex;\n`;\n\nexport const CreateComandaModal = styled(Modal)`\n    .modal-body {\n        padding: 20px 20px 0px 20px;\n    }\n\n    .modal-90w {\n        max-width: 400px;\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/EditOutputs/index.tsx",["1020","1021","1022"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport {\n    MdEdit,\n    MdKeyboardArrowDown,\n    MdKeyboardArrowRight,\n} from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    SectionButton,\n    PaymentContainer,\n    ConfigurePaymentForm,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n    const [showPaymentContainer, setShowPaymentContainer] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <MdEdit onClick={handleShow} />\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                size=\"lg\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Editar pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <CreateInputForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div className=\"twoFieldsGroup\">\n                            <MaskedInput\n                                mask=\"R$ 9.999\"\n                                name=\"valor\"\n                                label=\"Valor*\"\n                            />\n                            <DatePicker\n                                label=\"Data de vencimento\"\n                                name=\"dataDeVencimento\"\n                            />\n                            <Select\n                                label=\"Forma de pagamento\"\n                                name=\"tipoPagamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={paymentOptions[1]}\n                                options={paymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Select\n                                label=\"Fornecedor\"\n                                name=\"fornecedor\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={fornecedorOptions[1]}\n                                options={fornecedorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                label=\"Colaborador\"\n                                name=\"colaborador\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={colaboradorOptions[1]}\n                                options={colaboradorOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <TextArea name=\"descricao\" label=\"Descrição*\" />\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPaymentContainer(!showPaymentContainer)\n                            }\n                        >\n                            {showPaymentContainer\n                                ? 'Ocultar Quitação'\n                                : 'Mostrar Quitação'}\n                            {showPaymentContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPaymentContainer && (\n                            <PaymentContainer>\n                                <div className=\"twoFieldsGroup\">\n                                    <Input\n                                        label=\"Valor pago\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"50,00\"\n                                    />\n                                    <Input\n                                        label=\"Valor pendente\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"10,00\"\n                                    />\n                                    <Input\n                                        label=\"Juros\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"10,00\"\n                                    />\n                                </div>\n                                <div className=\"twoFieldsGroup\">\n                                    <Input\n                                        label=\"Desconto\"\n                                        textTransform=\"lowercase\"\n                                        name=\"qtd\"\n                                        value=\"50,00\"\n                                    />\n                                    <DatePicker\n                                        label=\"Data de quitação\"\n                                        name=\"dataDeVencimento\"\n                                        value=\"10/06/2021\"\n                                    />\n                                </div>\n                                <div>Inserir pagamento</div>\n                                <ConfigurePaymentForm\n                                    onSubmit={() => ''}\n                                    id=\"form2\"\n                                >\n                                    <div>\n                                        <Select\n                                            label=\"Forma de pagamento\"\n                                            name=\"type\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={paymentOptions[1]}\n                                            options={paymentOptions}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <MaskedInput\n                                            label=\"Valor (R$)\"\n                                            mask=\"R$ 99.999\"\n                                            name=\"value\"\n                                        />\n                                        <button type=\"button\">\n                                            <FaPlus />\n                                        </button>\n                                    </div>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th>Forma de pagamento </th>\n                                                <th>Valor (R$) </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>Dinheiro</td>\n                                                <td>R$ 50,00</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Voucher</td>\n                                                <td>R$ 10,00</td>\n                                            </tr>\n                                        </tbody>\n                                    </Table>\n                                </ConfigurePaymentForm>\n                            </PaymentContainer>\n                        )}\n                    </CreateInputForm>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Accounts Payable/EditOutputs/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comissões/index.tsx",["1023","1024","1025","1026","1027"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport { FaSearch } from 'react-icons/fa';\nimport { Table } from 'react-bootstrap';\nimport compareAsc from 'date-fns/compareAsc';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nimport {\n    Container,\n    CommissionHeaderContainer,\n    GroupSelectContainer,\n    CheckBoxContainer,\n    CommissionPaymentContainer,\n    CommissionPaymentForm,\n    RescissionPaymentForm,\n} from './styles';\n\nconst filterOptions = [\n    { value: 1, label: 'individual' },\n    { value: 2, label: 'grupo' },\n];\n\nconst ComissionOptions = [\n    { value: 1, label: 'Processar Comissão' },\n    { value: 2, label: 'Processar Rescisão' },\n];\n\ninterface IArtistComission {\n    nome: string;\n    valorDisponivel: string;\n    valorBloqueado: string;\n    valorTotal: string;\n}\n\nconst artistsGroup = [\n    { value: 1, label: 'Diário' },\n    { value: 2, label: 'Semanal' },\n    { value: 3, label: 'Quinzenal' },\n    { value: 4, label: 'Mensal' },\n];\n\nconst Comissões: React.FC = () => {\n    const [endDate, setEndDate] = useState(new Date());\n    const [paymentDate, setPaymentDate] = useState(new Date());\n    const [showPaymentButton, setShowPaymentButton] = useState(false);\n    const [filterType, setFilterType] = useState(filterOptions[0]);\n    const [selectedArtists, setSelectedArtists] = useState<\n        Array<IArtistComission>\n    >([]);\n    const [currentForm, setCurrentForm] = useState<OptionTypeBase>(\n        ComissionOptions[0],\n    );\n    const [artistsList, setArtistsList] = useState<Array<IArtistComission>>([\n        {\n            nome: 'Fulano1',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano2',\n            valorDisponivel: '580',\n            valorBloqueado: '150',\n            valorTotal: '600',\n        },\n        {\n            nome: 'Fulano3',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano4',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n        {\n            nome: 'Fulano5',\n            valorDisponivel: '550',\n            valorBloqueado: '150',\n            valorTotal: '700',\n        },\n    ]);\n\n    return (\n        <Container>\n            <CommissionHeaderContainer>\n                <h1>Comissões</h1>\n                <div>\n                    <div>\n                        <strong>Data limite:</strong>\n                        <DatePicker\n                            selected={endDate}\n                            onChange={(selectedDate: Date) =>\n                                // eslint-disable-next-line prettier/prettier\n                                selectedDate && setEndDate(selectedDate)}\n                        />\n                    </div>\n                    <div>\n                        <div>\n                            <strong>Filtrar artistas por:</strong>\n                            <Select\n                                label=\"Tipo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={filterOptions[0]}\n                                options={filterOptions}\n                                onChange={value =>\n                                    value && setCurrentForm(value)\n                                }\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        {filterType.value === 1 ? (\n                            <div>\n                                <FaSearch />\n                                <input placeholder=\"Artista\" />\n                            </div>\n                        ) : (\n                            <GroupSelectContainer>\n                                <Select\n                                    label=\"Tipo\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={artistsGroup[0]}\n                                    options={artistsGroup}\n                                    /* onChange={value =>\n                                    value && setSearchType(value)\n                                } */\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                            </GroupSelectContainer>\n                        )}\n                    </div>\n                </div>\n            </CommissionHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>\n                            <div />\n                        </th>\n                        <th>Artista</th>\n                        <th>Valor Disponível (R$)</th>\n                        <th>Valor Bloqueado (R$)</th>\n                        <th>Valor Total (R$)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {artistsList.map((artist, index) => (\n                        <tr>\n                            <td>\n                                <CheckBoxContainer onSubmit={() => ''}>\n                                    <CheckBox\n                                        name=\"SS\"\n                                        onChangeCallback={() => {\n                                            if (\n                                                selectedArtists.includes(artist)\n                                            ) {\n                                                const updatedArtistList = selectedArtists.filter(\n                                                    (_, artistIndex) =>\n                                                        artistIndex !== index,\n                                                );\n\n                                                setSelectedArtists(\n                                                    updatedArtistList,\n                                                );\n                                            } else {\n                                                setSelectedArtists([\n                                                    ...selectedArtists,\n                                                    artist,\n                                                ]);\n                                            }\n                                        }}\n                                    />\n                                </CheckBoxContainer>\n                            </td>\n                            <td>{artist?.nome}</td>\n                            <td>{artist?.valorDisponivel}</td>\n                            <td>{artist?.valorBloqueado}</td>\n                            <th>{artist?.valorTotal}</th>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n            <CommissionPaymentContainer>\n                {selectedArtists.length > 0 && (\n                    <>\n                        <Select\n                            label=\"Tipo\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={ComissionOptions[0]}\n                            options={ComissionOptions}\n                            onChange={value => value && setCurrentForm(value)}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {currentForm.value === 1 ? (\n                            <CommissionPaymentForm onSubmit={() => ''}>\n                                <div>\n                                    <strong>Data de pagamento:</strong>\n                                    <DatePicker\n                                        selected={paymentDate}\n                                        onChange={(selectedDate: Date) =>\n                                            selectedDate &&\n                                            setPaymentDate(selectedDate)\n                                        }\n                                    />\n                                </div>\n                                {compareAsc(\n                                    new Date().setHours(0, 0, 0, 0),\n                                    paymentDate.setHours(0, 0, 0, 0),\n                                ) === 0 && (\n                                    <CheckBox\n                                        name=\"SS\"\n                                        label=\"Pagamento já realizado\"\n                                    />\n                                )}\n                                <button\n                                    className=\"fibre-button\"\n                                    type=\"submit\"\n                                    form=\"form\"\n                                >\n                                    Fechar comissões\n                                </button>\n                            </CommissionPaymentForm>\n                        ) : (\n                            <RescissionPaymentForm onSubmit={() => ''}>\n                                <div>\n                                    <strong>Processar até a data:</strong>\n                                    <DatePicker\n                                        selected={paymentDate}\n                                        onChange={(selectedDate: Date) =>\n                                            selectedDate &&\n                                            setPaymentDate(selectedDate)\n                                        }\n                                    />\n                                </div>\n                                <button\n                                    className=\"fibre-button\"\n                                    type=\"submit\"\n                                    form=\"form\"\n                                >\n                                    Confirmar rescisão\n                                </button>\n                            </RescissionPaymentForm>\n                        )}\n                    </>\n                )}\n                {console.log(selectedArtists)}\n            </CommissionPaymentContainer>\n        </Container>\n    );\n};\n\nexport default Comissões;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Financial/Comissões/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/index.tsx",["1028","1029"],"/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport { OptionTypeBase } from 'react-select';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport { Container, AddSkillModal } from './styles';\nimport Exceptions from './Exceptions';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\n\nconst CardOperator: React.FC = () => {\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    const [show, setShow] = useState(false);\n    const [\n        currentPaymentForm,\n        setCurrentPaymentForm,\n    ] = useState<OptionTypeBase>(finalizadoraOptions[0]);\n\n    const cardPaymentOptions = [\n        { value: 1, label: '1x (á vista)' },\n        { value: 2, label: '2x' },\n        { value: 3, label: '3x' },\n        { value: 4, label: '4x' },\n        { value: 5, label: '5x' },\n        { value: 6, label: '6x' },\n        { value: 1, label: '7x' },\n        { value: 2, label: '8x' },\n        { value: 3, label: '9x' },\n        { value: 4, label: '10x' },\n        { value: 5, label: '11x' },\n        { value: 6, label: '12x' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar forma de pag.\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de forma de pagamento</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"twoFieldsGroup\">\n                        <Select\n                            label=\"Finalizadora\"\n                            name=\"finalizadora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={finalizadoraOptions[0]}\n                            options={finalizadoraOptions}\n                            onChange={option => {\n                                option && setCurrentPaymentForm(option);\n                            }}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocuss\n                        />\n                        {currentPaymentForm.value === 5 && (\n                            <Select\n                                label=\"Parcelamento\"\n                                name=\"Parcelamento\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={cardPaymentOptions[0]}\n                                options={cardPaymentOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        )}\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"descricao\"\n                            label=\"Descrição\"\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"acrescimo\"\n                            label=\"Acréscimo\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"desconto\"\n                            label=\"Desconto\"\n                        />\n                    </div>\n                    {currentPaymentForm.value === 5 && (\n                        <>\n                            <CheckBox\n                                label=\"Bloquear rateio baseado na carência do cartão\"\n                                name=\"SS\"\n                            />\n                            <CheckBox\n                                label=\"Bloquear pagamento do rateio aos artistas\"\n                                name=\"SS\"\n                            />\n                            <CheckBox\n                                label=\"Adicionar exceções ao bloqueio de pagamento do rateio\"\n                                name=\"SS\"\n                            />\n                            <Table responsive>\n                                <thead>\n                                    <tr>\n                                        <th>Artista</th>\n                                    </tr>\n                                </thead>\n                                <tbody />\n                            </Table>\n                        </>\n                    )}\n                    {(currentPaymentForm.value === 6 ||\n                        currentPaymentForm.value === 7) && (\n                        <CheckBox label=\"Bloquear por senha\" name=\"SS\" />\n                    )}\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/Exceptions/index.tsx",["1030"],"import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst CardOperator: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const admOptions = [\n        { value: 1, label: 'Cielo' },\n        { value: 2, label: 'Stone' },\n        { value: 3, label: 'Pagseguro' },\n        { value: 4, label: 'GetNet' },\n        { value: 5, label: 'Rede' },\n        { value: 6, label: 'Safra' },\n    ];\n\n    const brandOptions = [\n        { value: 1, label: 'Amex' },\n        { value: 2, label: 'Elo' },\n        { value: 3, label: 'Hiper' },\n        { value: 4, label: 'Mastercard' },\n        { value: 5, label: 'Safra' },\n        { value: 6, label: 'Visa' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Exceções\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"sml\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de taxas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Select\n                            label=\"Administradora\"\n                            name=\"administradora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={admOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Bandeira\"\n                            name=\"bandeira\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={brandOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={cardTransactions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa da operação\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa de antecipação de crédito\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Qtde dias a compensar\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n",["1031","1032","1033","1034","1035"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/PaymentOptions/Exceptions/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/NumericInput/index.tsx",["1036","1037","1038"],"/* eslint-disable no-unused-expressions */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container, ButtonContainer } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst NumericInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [value, setValue] = useState(1);\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n\n    const handleIncrement = () => {\n        setValue(value + 1);\n    };\n\n    const handleDecrement = () => {\n        value > 1 && setValue(value - 1);\n    };\n\n    return (\n        <Container>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                </div>\n            )}\n            <ButtonContainer>\n                <button type=\"button\" onClick={handleDecrement}>\n                    -\n                </button>\n                <input\n                    id={fieldName}\n                    ref={inputRef}\n                    value={value || ''}\n                    onBlur={event => {\n                        event.target.value === '' && setValue(1);\n                    }}\n                    onChange={event =>\n                        new RegExp('^[0-9]*$').test(event.target.value) &&\n                        setValue(Number(event.target.value))\n                    }\n                    style={{ borderColor: error ? '#db3b21' : '' }}\n                    defaultValue={defaultValue}\n                    {...rest}\n                />\n                <button type=\"button\" onClick={handleIncrement}>\n                    +\n                </button>\n            </ButtonContainer>\n            {/*   {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )} */}\n        </Container>\n    );\n};\nexport default NumericInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/NumericInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/index.tsx",["1039","1040"],"/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/jsx-curly-newline */\nimport { Table } from 'react-bootstrap';\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaSearch, FaSpinner } from 'react-icons/fa';\nimport { RiFileUploadLine } from 'react-icons/ri';\nimport parser from 'fast-xml-parser';\n\nimport { Container, StockHeaderContainer, UploadXML } from './styles';\n\nconst Management: React.FC = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const buttonRef = useRef(null);\n\n    const options = {\n        attributeNamePrefix: '',\n        ignoreAttributes: false,\n        ignoreNameSpace: false,\n        allowBooleanAttributes: false,\n        parseNodeValue: true,\n        parseAttributeValue: false,\n        trimValues: true,\n        cdataTagName: '__cdata',\n        cdataPositionChar: '\\\\c',\n        parseTrueNumberOnly: false,\n        arrayMode: false,\n        stopNodes: ['parse-me-as-string'],\n    };\n\n    function handleUploadXMLSubmit(event: React.ChangeEvent<HTMLInputElement>) {\n        setLoading(true);\n\n        if (event.target.files) {\n            const file = event.target.files[0];\n\n            fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(str => {\n                    setLoading(false);\n                    history.push({\n                        pathname: '/stock/new-auto-entry',\n                        state: parser.parse(str, options),\n                    });\n                })\n                .catch(error => console.log('error'));\n\n            /*  fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(response => {\n                    parseString(response, (err, result) => {\n                        console.log(response);\n                    });\n                })\n                .catch(err => {\n                    console.log('fetch', err);\n                }); */\n\n            /* const file = event.target.files[0];\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = () => {\n                parseString(reader.result as string, (err, result) => {\n                    console.log(result);\n                });\n            }; */\n            /*  axios\n                .get(URL.createObjectURL(event.target.files[0]), {\n                    headers: {\n                        'Content-Type': 'application/xml; charset=utf-8',\n                    },\n                })\n                .then(res => {\n                    console.log(res.data);\n                }); */\n        }\n    }\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Estoque</h1>\n                <div>\n                    <div>\n                        <UploadXML loading={loading}>\n                            <label htmlFor=\"selecao-arquivo\" ref={buttonRef}>\n                                {loading ? (\n                                    <FaSpinner color=\"#FFF\" size={16} />\n                                ) : (\n                                    <RiFileUploadLine size={16} />\n                                )}\n                                <div>Upload XML</div>\n                                <input\n                                    id=\"selecao-arquivo\"\n                                    type=\"file\"\n                                    disabled={loading}\n                                    accept=\"text/xml\"\n                                    onChange={event =>\n                                        handleUploadXMLSubmit(event)\n                                    }\n                                />\n                            </label>\n                        </UploadXML>\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                history.push('/stock/new-manual-entry')\n                            }\n                        >\n                            Entrada manual\n                        </button>\n                    </div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Busca por nome, fornecedor\" />\n                    </div>\n                </div>\n            </StockHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Fornecedor</th>\n                        <th>Und</th>\n                        <th>Qtd</th>\n                        <th>Valor unitário</th>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                </thead>\n                <tbody />\n            </Table>\n        </Container>\n    );\n};\n\nexport default Management;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/index.tsx",["1041","1042","1043","1044","1045","1046","1047","1048"],"/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/jsx-curly-newline */\nimport { Table } from 'react-bootstrap';\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaSearch, FaSpinner } from 'react-icons/fa';\nimport { RiFileUploadLine } from 'react-icons/ri';\nimport parser from 'fast-xml-parser';\n\nimport { Container, StockHeaderContainer, UploadXML } from './styles';\n\nconst Management: React.FC = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const buttonRef = useRef(null);\n\n    const options = {\n        attributeNamePrefix: '',\n        ignoreAttributes: false,\n        ignoreNameSpace: false,\n        allowBooleanAttributes: false,\n        parseNodeValue: true,\n        parseAttributeValue: false,\n        trimValues: true,\n        cdataTagName: '__cdata',\n        cdataPositionChar: '\\\\c',\n        parseTrueNumberOnly: false,\n        arrayMode: false,\n        stopNodes: ['parse-me-as-string'],\n    };\n\n    function handleUploadXMLSubmit(event: React.ChangeEvent<HTMLInputElement>) {\n        setLoading(true);\n\n        if (event.target.files) {\n            const file = event.target.files[0];\n\n            fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(str => {\n                    setLoading(false);\n                    history.push({\n                        pathname: '/stock/new-auto-entry',\n                        state: parser.parse(str, options),\n                    });\n                })\n                .catch(error => console.log('error'));\n\n            /*  fetch(URL.createObjectURL(file))\n                .then(response => response.text())\n                .then(response => {\n                    parseString(response, (err, result) => {\n                        console.log(response);\n                    });\n                })\n                .catch(err => {\n                    console.log('fetch', err);\n                }); */\n\n            /* const file = event.target.files[0];\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = () => {\n                parseString(reader.result as string, (err, result) => {\n                    console.log(result);\n                });\n            }; */\n            /*  axios\n                .get(URL.createObjectURL(event.target.files[0]), {\n                    headers: {\n                        'Content-Type': 'application/xml; charset=utf-8',\n                    },\n                })\n                .then(res => {\n                    console.log(res.data);\n                }); */\n        }\n    }\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Estoque</h1>\n                <div>\n                    <div>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/stock/exit')}\n                        >\n                            Saída no estoque\n                        </button>\n                    </div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Busca por nome, fornecedor\" />\n                    </div>\n                </div>\n            </StockHeaderContainer>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Fornecedor</th>\n                        <th>Und</th>\n                        <th>Qtd</th>\n                        <th>Valor unitário</th>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                    <tr>\n                        <td>Creme</td>\n                        <td>Fulano</td>\n                        <th>ml</th>\n                        <td>5</td>\n                        <td>10,00</td>\n                    </tr>\n                </thead>\n                <tbody />\n            </Table>\n        </Container>\n    );\n};\n\nexport default Management;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryXML/index.tsx",["1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { FaPlus } from 'react-icons/fa';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport { cpfMask, cnpjMask } from '../../../../utils/masks';\nimport Input from '../../../../components/UnformFields/Input';\nimport FieldSet from '../../../../components/FieldSet';\nimport Select from '../../../../components/UnformFields/Select';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport brasilStatesAndCities from '../../../../utils/brazilianStates.json';\nimport { Container, StockHeaderContainer, CreateNoteForm } from './styles';\n\ninterface IStateProps {\n    sigla: string;\n    label: string;\n    value: string;\n}\n\nexport interface INFItem {\n    detalhes: string;\n}\n\ninterface INFProps {\n    dataEmissao: string;\n    numeroNF: string;\n    serie: string;\n    chaveAcesso: string;\n    natureza: string;\n    fornecedor: string;\n    cnpjFornecedor: string;\n    destinatario: string;\n    cnpjOrCpfDestinario: string;\n    entregador: string;\n    cnpjEntregador: string;\n    modFrete: number;\n    impostos: {\n        vTotTrib: string;\n        vTotNF: string;\n        vProd: string;\n        vFrete: string;\n        vBC: string;\n        vICMS: string;\n        vBCST: string;\n        vST: string;\n        vSeg: string;\n        vDesc: string;\n        vOutro: string;\n        vIPI: string;\n    };\n    items: INFItem[];\n}\n\nconst type = [\n    { value: 1, label: 'Entrada' },\n    { value: 2, label: 'Saída' },\n];\n\nconst providers = [\n    { value: 1, label: 'Fulano' },\n    { value: 2, label: 'Beltrano' },\n    { value: 3, label: 'Ciclano' },\n];\n\nconst naturezaOptions = [\n    { value: 1, label: 'Venda de mercardoria' },\n    { value: 2, label: 'Compra de mercadoria' },\n    { value: 3, label: 'Devolução' },\n];\n\nconst freteOptions = [\n    { value: 1, label: 'Remetente' },\n    { value: 2, label: 'Destinatário' },\n];\n\nconst ufsList = brasilStatesAndCities.estados.map(uf => ({\n    sigla: uf.sigla,\n    label: `${uf.sigla} - ${uf.nome}`,\n    value: uf.nome,\n}));\n\nconst StockEntryXML: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const location = useLocation();\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [currentState, setCurrentState] = useState<null | string>(null);\n    const [nfData, setNFData] = useState<INFProps>();\n\n    useEffect(() => {\n        const data = location.state as any;\n        console.log(data);\n        setNFData({\n            dataEmissao: data.nfeProc.NFe.infNFe.ide.dhEmi,\n            numeroNF: data.nfeProc.NFe.infNFe.ide.nNF,\n            serie: data.nfeProc.NFe.infNFe.ide.serie,\n            chaveAcesso: data.nfeProc.NFe.infNFe.Id,\n            natureza: data.nfeProc.NFe.infNFe.ide.natOp,\n            fornecedor: data.nfeProc.NFe.infNFe.emit.xNome,\n            cnpjFornecedor: data.nfeProc.NFe.infNFe.emit.CNPJ,\n            destinatario: data.nfeProc.NFe.infNFe.dest.xNome || '',\n            cnpjOrCpfDestinario:\n                data.nfeProc.NFe.infNFe.dest.CNPJ ||\n                data.nfeProc.NFe.infNFe.dest.CPF,\n            entregador:\n                (data.nfeProc.NFe.infNFe.transp.transporta &&\n                    data.nfeProc.NFe.infNFe.transp.transporta.xNome) ||\n                '',\n            cnpjEntregador:\n                (data.nfeProc.NFe.infNFe.transp.transporta &&\n                    data.nfeProc.NFe.infNFe.transp.transporta.CNPJ) ||\n                '',\n            modFrete: data.nfeProc.NFe.infNFe.transp.modFrete,\n            impostos: {\n                vTotTrib: data.nfeProc.NFe.infNFe.total.ICMSTot.vTotTrib,\n                vTotNF: data.nfeProc.NFe.infNFe.total.ICMSTot.vNF,\n                vProd: data.nfeProc.NFe.infNFe.total.ICMSTot.vProd,\n                vFrete: data.nfeProc.NFe.infNFe.total.ICMSTot.vFrete,\n                vBC: data.nfeProc.NFe.infNFe.total.ICMSTot.vBC,\n                vICMS: data.nfeProc.NFe.infNFe.total.ICMSTot.vICMS,\n                vBCST: data.nfeProc.NFe.infNFe.total.ICMSTot.vBCST,\n                vST: data.nfeProc.NFe.infNFe.total.ICMSTot.vST,\n                vSeg: data.nfeProc.NFe.infNFe.total.ICMSTot.vSeg,\n                vDesc: data.nfeProc.NFe.infNFe.total.ICMSTot.vDesc,\n                vOutro: data.nfeProc.NFe.infNFe.total.ICMSTot.vOutro,\n                vIPI: data.nfeProc.NFe.infNFe.total.ICMSTot.vIPI,\n            },\n            items: data.nfeProc.NFe.infNFe.det,\n        });\n    }, [location]);\n\n    const handleCreateNoteSubmit = () => {\n        return '';\n    };\n\n    const citiesList = brasilStatesAndCities.estados\n        .find(elem => elem.sigla === currentState)\n        ?.cidades.map(elem => ({\n            value: elem,\n            label: elem,\n        }));\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Entrada de nota</h1>\n            </StockHeaderContainer>\n            {nfData && (\n                <CreateNoteForm\n                    id=\"form\"\n                    onSubmit={handleCreateNoteSubmit}\n                    ref={formRef}\n                >\n                    <FieldSet title=\"Identificação da nota fiscal\">\n                        <div className=\"treeFieldsGroup\">\n                            {/*  <DatePicker\n                            label=\"Data de emissão\"\n                            name=\"dataDeEmissao\"\n                            initialDate={nfData}\n                        /> */}\n                            <Input\n                                name=\"data\"\n                                label=\"Data de emissão\"\n                                value={new Date(\n                                    nfData.dataEmissao,\n                                ).toLocaleDateString('pt-br')}\n                                disabled\n                            />\n                            <Input\n                                name=\"numero\"\n                                label=\"Número\"\n                                value={nfData.numeroNF}\n                                disabled\n                            />\n                            <Input\n                                name=\"serie\"\n                                label=\"Série\"\n                                value={nfData.serie}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"twoFieldsGroup\">\n                            <Input\n                                name=\"chaveDeAcesso\"\n                                label=\"Chave de acesso\"\n                                value={nfData.chaveAcesso}\n                                disabled\n                            />\n                            <Input\n                                name=\"Natureza\"\n                                label=\"Natureza da operação\"\n                                value={nfData.natureza}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <div>\n                        <FieldSet title=\"Emitente\">\n                            <div className=\"twoFieldsGroup\">\n                                <Input\n                                    name=\"razao\"\n                                    label=\"Razão social\"\n                                    value={nfData.fornecedor}\n                                    disabled\n                                />\n                                <Input\n                                    name=\"CNPJ\"\n                                    label=\"CNPJ\"\n                                    value={nfData.cnpjFornecedor}\n                                    disabled\n                                />\n                            </div>\n                        </FieldSet>\n                        <FieldSet title=\"Destinatário\">\n                            <div className=\"twoFieldsGroup\">\n                                <Input\n                                    name=\"razao\"\n                                    label=\"Razão social\"\n                                    value={nfData.destinatario}\n                                    disabled\n                                />\n                                <Input\n                                    name=\"CNPJ\"\n                                    label=\"CNPJ/CPF\"\n                                    value={nfData.cnpjOrCpfDestinario}\n                                    disabled\n                                />\n                            </div>\n                        </FieldSet>\n                    </div>\n                    <FieldSet title=\"Transportador\">\n                        <div className=\"treeFieldsGroup\">\n                            <Input\n                                name=\"razao\"\n                                label=\"Razão social\"\n                                value={nfData.entregador}\n                                disabled\n                            />\n                            <Input name=\"endereco\" label=\"Endereço\" disabled />\n                            <Input\n                                name=\"CNPJ\"\n                                label=\"CNPJ/CPF\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"treeFieldsGroup\">\n                            <Input\n                                label=\"Estado\"\n                                name=\"estado\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                            <Input\n                                label=\"Cidade\"\n                                name=\"cidade\"\n                                value={nfData.cnpjEntregador}\n                                disabled\n                            />\n                            <Input\n                                label=\"Frete por conta\"\n                                name=\"frete\"\n                                value={(() => {\n                                    switch (nfData.modFrete) {\n                                        case 0:\n                                            return 'Emitente';\n                                            break;\n                                        case 1:\n                                            return 'Destinatário';\n                                            break;\n                                        case 2:\n                                            return 'Terceiros';\n                                            break;\n                                        case 3:\n                                            return 'Transp. Próprio Remetente';\n                                            break;\n                                        case 4:\n                                            return 'Transp. Próprio Destinatário';\n                                            break;\n                                        case 9:\n                                            return 'Sem cobrança de Frete';\n                                            break;\n                                        default:\n                                            return '';\n                                    }\n                                })()}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <FieldSet title=\"Cálculo do imposto\">\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Base de cálculo do ICMS\"\n                                name=\"calcICMS\"\n                                value={nfData.impostos.vBC}\n                            />\n                            <Input\n                                label=\"Valor do ICMS\"\n                                name=\"valueICMS\"\n                                value={nfData.impostos.vICMS}\n                                disabled\n                            />\n                            <Input\n                                label=\"Base de cálculo do ICMS subst.\"\n                                name=\"baseCalcICMSSub\"\n                                value={nfData.impostos.vBCST}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do ICMS subst.\"\n                                name=\"valueICMSSub\"\n                                value={nfData.impostos.vST}\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Valor aprox. tributos\"\n                                name=\"aproxTributeValue\"\n                                value={nfData.impostos.vTotTrib}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor total dos produtos\"\n                                name=\"totalValue\"\n                                value={nfData.impostos.vProd}\n                                disabled\n                            />\n\n                            <Input\n                                label=\"Valor do frete\"\n                                name=\"freteValue\"\n                                value={nfData.impostos.vFrete}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do seguro\"\n                                name=\"insuranceValue\"\n                                value={nfData.impostos.vSeg}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input\n                                label=\"Desconto\"\n                                name=\"discount\"\n                                value={nfData.impostos.vDesc}\n                                disabled\n                            />\n                            <Input\n                                label=\"Outras despesas acessórias\"\n                                name=\"otherExpenses\"\n                                value={nfData.impostos.vOutro}\n                                disabled\n                            />\n                            <Input\n                                label=\"Valor do IPI\"\n                                name=\"IPIValue\"\n                                value={nfData.impostos.vIPI}\n                            />\n                            <Input\n                                label=\"Valor total da nota\"\n                                name=\"totalNoteValue\"\n                                value={nfData.impostos.vTotNF}\n                                disabled\n                            />\n                        </div>\n                    </FieldSet>\n                    <FieldSet title=\"Dados do produtos\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Código produto</th>\n                                    <th>Descrição do produto</th>\n                                    <th>NCM/SH</th>\n                                    <th>CSOSN</th>\n                                    <th>CFOP</th>\n                                    <th>UNID</th>\n                                    <th>QTDE</th>\n                                    <th>Valor unitário</th>\n                                    <th>Valor desconto</th>\n                                    <th>Valor líquido</th>\n                                    <th>Base de cálc. ICMS</th>\n                                    <th>Valor ICMS</th>\n                                    <th>Valor IPI</th>\n                                    <th>Alíq. %</th>\n                                    <th>Alíq.% ICMS</th>\n                                    <th>Alíq.% IPI</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {nfData.items.map(item => (\n                                    <tr>\n                                        <td>1401</td>\n                                        <td>\n                                            GPU NV RTX3070TI 8GB PHOENIX G6X\n                                            256BITS GAINWARD NED307T019P2-1046X\n                                            NS: B5210113736\n                                        </td>\n                                        <th>84733043</th>\n                                        <td>0103</td>\n                                        <td>5102</td>\n                                        <td>UN</td>\n                                        <td>1</td>\n                                        <th>6.500,00</th>\n                                        <td>0,00</td>\n                                        <td>6.500,00</td>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                        <th>0,00</th>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                        <td>0,00</td>\n                                    </tr>\n                                ))}\n                                {/* <tr>\n                                    <td>1401</td>\n                                    <td>\n                                        GPU NV RTX3070TI 8GB PHOENIX G6X 256BITS\n                                        GAINWARD NED307T019P2-1046X NS:\n                                        B5210113736\n                                    </td>\n                                    <th>84733043</th>\n                                    <td>0103</td>\n                                    <td>5102</td>\n                                    <td>UN</td>\n                                    <td>1</td>\n                                    <th>6.500,00</th>\n                                    <td>0,00</td>\n                                    <td>6.500,00</td>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                    <th>0,00</th>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                    <td>0,00</td>\n                                </tr> */}\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                    <div>\n                        <button type=\"submit\">Confirmar entrada</button>\n                    </div>\n                </CreateNoteForm>\n            )}\n        </Container>\n    );\n};\n\nexport default StockEntryXML;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryXML/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryManual/index.tsx",["1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082"],"/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit, MdDelete } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport FieldSet from '../../../../components/FieldSet';\nimport NumericInput from '../../../../components/UnformFields/NumericInput';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    ConfigurePaymentForm,\n    Total,\n    Title,\n    PaymentConfig,\n    StockHeaderContainer,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../../components/UnformFields/CheckBox';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const paymentOptions = [\n        { value: 1, label: 'Cartão' },\n        { value: 2, label: 'Dinheiro' },\n        { value: 3, label: 'Pix' },\n        { value: 4, label: 'Voucher' },\n    ];\n\n    const expensesOptions = [\n        { value: 1, label: 'Limpeza' },\n        { value: 2, label: 'Material de escritório' },\n        { value: 3, label: 'Pagamento de funcionário' },\n        { value: 4, label: 'Insumos' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const unityOptions = [\n        { value: 1, label: 'ml' },\n        { value: 2, label: 'lt' },\n        { value: 3, label: 'mg' },\n        { value: 4, label: 'kg' },\n    ];\n\n    const colaboradorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const documentOptions = [\n        { value: 1, label: 'Nota Fiscal' },\n        { value: 2, label: 'Recibo' },\n        { value: 3, label: 'Boleto' },\n    ];\n\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Entrada de nota</h1>\n            </StockHeaderContainer>\n            <CreateInputForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <div className=\"twoFieldsGroup\">\n                    <Select\n                        label=\"Fornecedor\"\n                        name=\"fornecedor\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={fornecedorOptions[1]}\n                        options={fornecedorOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <DatePicker label=\"Data da nota\" name=\"data\" />\n                </div>\n                <ConfigurePaymentForm onSubmit={() => ''} id=\"form2\">\n                    <Select\n                        textTransform=\"lowercase\"\n                        name=\"descricao\"\n                        label=\"Descrição\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={unityOptions[1]}\n                        options={unityOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <div className=\"treeFieldsGroup \">\n                        <Select\n                            label=\"Unidade\"\n                            name=\"unidade\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {/*   <Input\n                            textTransform=\"lowercase\"\n                            name=\"qtd\"\n                            label=\"Qtd\"\n                        /> */}\n\n                        <NumericInput name=\"qtd\" label=\"Qtd\" />\n                        <MaskedInput\n                            label=\"Valor\"\n                            mask=\"R$ 99.999\"\n                            name=\"value\"\n                        />\n                        <button type=\"button\">\n                            <FaPlus />\n                        </button>\n                    </div>\n                    <FieldSet title=\"Lista de itens\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Descrição</th>\n                                    <th>Und</th>\n                                    <th>Qtd</th>\n                                    <th>Valor unitário</th>\n                                    <th> </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                </ConfigurePaymentForm>\n                <Total>\n                    <div>Total da nota:</div>\n                    <div>R$ 5000,00</div>\n                </Total>\n                <PaymentConfig>\n                    <CheckBox\n                        name=\"retiradoCaixa\"\n                        label=\"Valor retirado da caixa\"\n                    />\n                    <label>Finalizadora</label>\n                    <Select\n                        id=\"finalizadora\"\n                        name=\"finalizadora\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={finalizadoraOptions[0]}\n                        options={finalizadoraOptions}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocuss\n                    />\n                </PaymentConfig>\n            </CreateInputForm>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockInput/StockEntryManual/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/StockExit/index.tsx",["1083","1084","1085","1086","1087","1088","1089","1090","1091"],"/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FaPlus } from 'react-icons/fa';\nimport { MdEdit, MdDelete } from 'react-icons/md';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport TextArea from '../../../../components/UnformFields/TextArea';\nimport FieldSet from '../../../../components/FieldSet';\nimport NumericInput from '../../../../components/UnformFields/NumericInput';\n\nimport MaskedInput from '../../../../components/UnformFields/InputMaskd';\nimport {\n    Container,\n    AddSkillModal,\n    CreateInputForm,\n    ConfigurePaymentForm,\n    Total,\n    Title,\n    PaymentConfig,\n    StockHeaderContainer,\n} from './styles';\nimport DatePicker from '../../../../components/UnformFields/DatePicker';\nimport CheckBox from '../../../../components/UnformFields/CheckBox';\n\nexport interface IFormData {\n    valor: string;\n    formaDePagamento: string;\n    tipoDeDespesa: string;\n    tipoDeDocumento: string;\n    numeroDeDocumento: string;\n    colaborador: string;\n    descricao: string;\n}\n\nconst AddOutputs: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    const operationOptions = [\n        { value: 1, label: 'Consumo' },\n        { value: 2, label: 'Perda/roubo/avaria' },\n        { value: 3, label: 'Fora da validade' },\n        { value: 4, label: 'Ajuste de estoque' },\n    ];\n\n    const fornecedorOptions = [\n        { value: 1, label: 'Marcia' },\n        { value: 2, label: 'Maria' },\n        { value: 3, label: 'Juliana' },\n        { value: 4, label: 'Jéssica' },\n    ];\n\n    const unityOptions = [\n        { value: 1, label: 'ml' },\n        { value: 2, label: 'lt' },\n        { value: 3, label: 'mg' },\n        { value: 4, label: 'kg' },\n    ];\n\n    const finalizadoraOptions = [\n        { value: 1, label: 'Dinheiro' },\n        { value: 2, label: 'PIX' },\n        { value: 3, label: 'Transferência' },\n        { value: 4, label: 'Débito' },\n        { value: 5, label: 'Crédito' },\n        { value: 6, label: 'Voucher' },\n        { value: 7, label: 'Permuta' },\n    ];\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                valor: Yup.string().required('O valor é obrigatório!'),\n                descricao: Yup.string().required('A descrição é obrigatória!'),\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <StockHeaderContainer>\n                <h1>Saída de nota</h1>\n            </StockHeaderContainer>\n            <CreateInputForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <div className=\"twoFieldsGroup\">\n                    <Select\n                        label=\"Cliente\"\n                        name=\"cliente\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={fornecedorOptions[1]}\n                        options={fornecedorOptions}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <DatePicker label=\"Data da nota\" name=\"data\" />\n                </div>\n                <ConfigurePaymentForm onSubmit={() => ''} id=\"form2\">\n                    <div className=\"twoFieldsGroup \">\n                        <Select\n                            textTransform=\"lowercase\"\n                            name=\"descricao\"\n                            label=\"Descrição\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={operationOptions[1]}\n                            options={operationOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup \">\n                        <Select\n                            label=\"Unidade\"\n                            name=\"unidade\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={unityOptions[1]}\n                            options={unityOptions}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        {/*   <Input\n                            textTransform=\"lowercase\"\n                            name=\"qtd\"\n                            label=\"Qtd\"\n                        /> */}\n\n                        <NumericInput name=\"qtd\" label=\"Qtd\" />\n                        <MaskedInput\n                            label=\"Valor\"\n                            mask=\"R$ 99.999\"\n                            name=\"value\"\n                        />\n                        <button type=\"button\">\n                            <FaPlus />\n                        </button>\n                    </div>\n                    <FieldSet title=\"Lista de itens\">\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Descrição</th>\n                                    <th>Und</th>\n                                    <th>Qtd</th>\n                                    <th>Valor unitário</th>\n                                    <th> </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Creme</td>\n                                    <th>ml</th>\n                                    <td>5</td>\n                                    <td>10,00</td>\n                                    <td>\n                                        <MdDelete onClick={() => ''} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </FieldSet>\n                </ConfigurePaymentForm>\n                <Total>\n                    <div>Total da nota:</div>\n                    <div>R$ 5000,00</div>\n                </Total>\n                <PaymentConfig>\n                    <CheckBox\n                        name=\"retiradoCaixa\"\n                        label=\"Valor retirado da caixa\"\n                    />\n                    <label>Finalizadora</label>\n                    <Select\n                        id=\"finalizadora\"\n                        name=\"finalizadora\"\n                        classNamePrefix=\"react-select\"\n                        defaultValue={finalizadoraOptions[0]}\n                        options={finalizadoraOptions}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocuss\n                    />\n                </PaymentConfig>\n            </CreateInputForm>\n            <div>\n                <button type=\"button\">Cancelar</button>\n                <button type=\"button\">Confirmar saída</button>\n            </div>\n        </Container>\n    );\n};\n\nexport default AddOutputs;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/StockOutput/StockExit/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Promotions/index.tsx",["1092","1093","1094","1095","1096","1097","1098","1099"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport { MdDelete } from 'react-icons/md';\nimport FieldSet from '../../../components/FieldSet';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport {\n    Container,\n    PromotionHeaderContainer,\n    CheckBoxContainer,\n    ButtonContainer,\n} from './styles';\n\ninterface IProductComission {\n    descricao: string;\n    qtd: string;\n    precoCusto: string;\n    valorVenda: string;\n    sugestaoVenda: string;\n    novoValor: string;\n}\n\nconst PromotionOptions = [\n    { value: 1, label: '5%' },\n    { value: 2, label: '10%' },\n    { value: 2, label: '15%' },\n    { value: 2, label: '20%' },\n    { value: 2, label: '25%' },\n    { value: 2, label: '30%' },\n    { value: 2, label: '35%' },\n    { value: 2, label: '40%' },\n];\nconst Promotions: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n    const [selectedProducts, setSelectedProducts] = useState<\n        Array<IProductComission>\n    >([]);\n    const [productsList, setProductsList] = useState<Array<IProductComission>>([\n        {\n            descricao: 'Produto1',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n        {\n            descricao: 'Produto2',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n        {\n            descricao: 'Produto3',\n            qtd: '50',\n            precoCusto: '150',\n            valorVenda: '700',\n            sugestaoVenda: '25%',\n            novoValor: '1500',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PromotionHeaderContainer>\n                <h1>Sugestão de promoção</h1>\n                <div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </PromotionHeaderContainer>\n            <FieldSet title=\"Produtos parados no estoque\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>\n                                <div />\n                            </th>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Preço de custo (R$)</th>\n                            <th>Valor de venda (R$)</th>\n                            <th>Sugestão de venda (%)</th>\n                            <th>Novo valor de venda (R$)</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>\n                                    <CheckBoxContainer onSubmit={() => ''}>\n                                        <CheckBox\n                                            name=\"SS\"\n                                            onChangeCallback={() => {\n                                                if (\n                                                    selectedProducts.includes(\n                                                        product,\n                                                    )\n                                                ) {\n                                                    const updatedProductsList = selectedProducts.filter(\n                                                        (_, productIndex) =>\n                                                            productIndex !==\n                                                            index,\n                                                    );\n\n                                                    setSelectedProducts(\n                                                        updatedProductsList,\n                                                    );\n                                                } else {\n                                                    setSelectedProducts([\n                                                        ...selectedProducts,\n                                                        product,\n                                                    ]);\n                                                }\n                                            }}\n                                        />\n                                    </CheckBoxContainer>\n                                </td>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.precoCusto}</td>\n                                <th>{product?.valorVenda}</th>\n                                <th>{product?.sugestaoVenda}</th>\n                                <th>{product?.novoValor}</th>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            <FieldSet title=\"Próximos a data de vencimento\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>\n                                <div />\n                            </th>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Preço de custo (R$)</th>\n                            <th>Valor de venda (R$)</th>\n                            <th>Sugestão de venda (%)</th>\n                            <th>Novo valor de venda (R$)</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>\n                                    <CheckBoxContainer onSubmit={() => ''}>\n                                        <CheckBox\n                                            name=\"SS\"\n                                            onChangeCallback={() => {\n                                                if (\n                                                    selectedProducts.includes(\n                                                        product,\n                                                    )\n                                                ) {\n                                                    const updatedProductsList = selectedProducts.filter(\n                                                        (_, productIndex) =>\n                                                            productIndex !==\n                                                            index,\n                                                    );\n\n                                                    setSelectedProducts(\n                                                        updatedProductsList,\n                                                    );\n                                                } else {\n                                                    setSelectedProducts([\n                                                        ...selectedProducts,\n                                                        product,\n                                                    ]);\n                                                }\n                                            }}\n                                        />\n                                    </CheckBoxContainer>\n                                </td>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.precoCusto}</td>\n                                <th>{product?.valorVenda}</th>\n                                <th contentEditable>\n                                    {product?.sugestaoVenda}\n                                </th>\n                                <th>{product?.novoValor}</th>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            {selectedProducts.length > 0 ? (\n                <ButtonContainer>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Aplicar desconto\n                    </button>\n                </ButtonContainer>\n            ) : (\n                <div />\n            )}\n        </Container>\n    );\n};\n\nexport default Promotions;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Promotions/styles.ts",["1100","1101"],"import styled, { css, keyframes } from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr {\n            > :last-child {\n                width: 5%;\n            }\n        }\n\n        > tbody > tr {\n            > :first-child {\n                > form > div {\n                    margin: 0px;\n                }\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const CheckBoxContainer = styled(Form)``;\n\nexport const PromotionHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 150px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: flex-end;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Purchases/index.tsx",["1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\nimport { MdDelete } from 'react-icons/md';\nimport DatePicker from 'react-datepicker';\nimport Select, { OptionTypeBase } from 'react-select';\nimport FieldSet from '../../../components/FieldSet';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport {\n    Container,\n    PromotionHeaderContainer,\n    CheckBoxContainer,\n    ButtonContainer,\n} from './styles';\n\ninterface IProductComission {\n    descricao: string;\n    qtd: string;\n    qtdIdeal: string;\n}\n\nconst Promotions: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n    const [selectedProducts, setSelectedProducts] = useState<\n        Array<IProductComission>\n    >([]);\n    const [productsList, setProductsList] = useState<Array<IProductComission>>([\n        {\n            descricao: 'Produto1',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n        {\n            descricao: 'Produto2',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n        {\n            descricao: 'Produto3',\n            qtd: '50',\n            qtdIdeal: '150',\n        },\n    ]);\n\n    return (\n        <Container>\n            <PromotionHeaderContainer>\n                <h1>Sugestão de compras</h1>\n                <div>\n                    <div>\n                        <FaSearch />\n                        <input placeholder=\"Pesquisar produto\" />\n                    </div>\n                </div>\n            </PromotionHeaderContainer>\n            <FieldSet title=\"Produtos em estoque mínimo\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Qtd ideal</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.qtdIdeal}</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            <FieldSet title=\"Próximos de alta rotatividade em baixa quantidade\">\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>Descrição</th>\n                            <th>Qtd</th>\n                            <th>Qtd ideal</th>\n                            <th>\n                                <div />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productsList.map((product, index) => (\n                            <tr>\n                                <td>{product?.descricao}</td>\n                                <td>{product?.qtd}</td>\n                                <td>{product?.qtdIdeal}</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </FieldSet>\n            {selectedProducts.length > 0 ? (\n                <ButtonContainer>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Aplicar desconto\n                    </button>\n                </ButtonContainer>\n            ) : (\n                <div />\n            )}\n        </Container>\n    );\n};\n\nexport default Promotions;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Stock/Purchases/styles.ts",["1114","1115"],"import styled, { css, keyframes } from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n    table {\n        color: var(--primary-text-color);\n\n        > thead > tr > th {\n            width: 25%;\n        }\n\n        > thead > tr {\n            > :last-child {\n                width: 5%;\n            }\n        }\n\n        > tbody {\n            svg {\n                cursor: pointer;\n                width: 20px;\n                height: 20px;\n\n                &:hover {\n                    color: var(--base-tertiary-color);\n                }\n            }\n        }\n\n        > tbody > tr {\n            > :first-child {\n                > form > div {\n                    margin: 0px;\n                }\n            }\n        }\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const CheckBoxContainer = styled(Form)``;\n\nexport const PromotionHeaderContainer = styled.div`\n    > h1 {\n        font-size: 18px;\n        color: var(--base-tertiary-color);\n        margin-bottom: 20px;\n    }\n\n    > h1::after {\n        content: '';\n        display: block;\n        width: 150px;\n        border-bottom: 3px solid var(--base-tertiary-color);\n    }\n\n    > :last-child {\n        margin: 25px 0px;\n        display: flex;\n        justify-content: flex-end;\n\n        button {\n            margin-right: 10px;\n            > svg {\n                margin-left: 5px;\n            }\n        }\n\n        > :first-child {\n            display: flex;\n        }\n\n        > :last-child {\n            position: relative;\n            display: flex;\n            align-items: center;\n\n            > input {\n                height: 35px;\n                padding: 10px;\n                border-radius: 15px;\n                border: 1px solid #eeee;\n                padding-left: 40px;\n\n                &:focus {\n                    border-color: var(--base-tertiary-color);\n                }\n            }\n\n            > svg {\n                color: var(--base-tertiary-color);\n                width: 13px;\n                height: 13px;\n                left: 15px;\n                position: absolute;\n                z-index: 1;\n            }\n        }\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/index.tsx",["1116"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport PageNotFound from '../Errors/PageNotFound';\nimport Questions from './Questions';\n\nconst Help: React.FC = () => {\n    return (\n        <Switch>\n            <Route path=\"/help/questions\" component={Questions} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Help;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/Questions/index.tsx",["1117","1118"],"import React from 'react';\n\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport { QuestionsHeaderContainer, Container } from './styles';\n\nconst Questions: React.FC = () => {\n    return (\n        <Container>\n            <QuestionsHeaderContainer>\n                <h1>Dúvidas Frequentes</h1>\n            </QuestionsHeaderContainer>\n            <Accordion defaultActiveKey=\"0\">\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Pergunta 1</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Pergunta 2</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header>Pergunta 3</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"3\">\n                    <Accordion.Header>Pergunta 4</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"4\">\n                    <Accordion.Header>Pergunta 5</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"5\">\n                    <Accordion.Header>Pergunta 6</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"6\">\n                    <Accordion.Header>Pergunta 7</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"7\">\n                    <Accordion.Header>Pergunta 8</Accordion.Header>\n                    <Accordion.Body>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore\n                        magna aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </Container>\n    );\n};\n\nexport default Questions;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Help/Questions/styles.ts",[],{"ruleId":"1119","replacedBy":"1120"},{"ruleId":"1121","replacedBy":"1122"},{"ruleId":"1123","replacedBy":"1124"},{"ruleId":"1125","replacedBy":"1126"},{"ruleId":"1127","replacedBy":"1128"},{"ruleId":"1129","severity":1,"message":"1130","line":24,"column":5,"nodeType":"1131","messageId":"1132","endLine":24,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1133","line":29,"column":12,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1134","line":29,"column":19,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1135","line":35,"column":9,"nodeType":"1131","messageId":"1132","endLine":35,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1136","line":7,"column":13,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1137","line":37,"column":32,"nodeType":"1131","messageId":"1132","endLine":37,"endColumn":48},{"ruleId":"1129","severity":1,"message":"1138","line":38,"column":10,"nodeType":"1131","messageId":"1132","endLine":38,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1139","line":220,"column":14,"nodeType":"1131","messageId":"1132","endLine":220,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1140","line":224,"column":14,"nodeType":"1131","messageId":"1132","endLine":224,"endColumn":28},{"ruleId":"1119","replacedBy":"1141"},{"ruleId":"1121","replacedBy":"1142"},{"ruleId":"1123","replacedBy":"1143"},{"ruleId":"1125","replacedBy":"1144"},{"ruleId":"1127","replacedBy":"1145"},{"ruleId":"1129","severity":1,"message":"1146","line":31,"column":25,"nodeType":"1131","messageId":"1132","endLine":31,"endColumn":28},{"ruleId":"1129","severity":1,"message":"1147","line":1,"column":17,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1136","line":7,"column":13,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1148","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1149","line":75,"column":11,"nodeType":"1131","messageId":"1132","endLine":75,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1150","line":95,"column":11,"nodeType":"1131","messageId":"1132","endLine":95,"endColumn":57},{"ruleId":"1129","severity":1,"message":"1151","line":99,"column":11,"nodeType":"1131","messageId":"1132","endLine":99,"endColumn":45},{"ruleId":"1129","severity":1,"message":"1152","line":107,"column":11,"nodeType":"1131","messageId":"1132","endLine":107,"endColumn":50},{"ruleId":"1153","severity":1,"message":"1154","line":125,"column":9,"nodeType":"1155","messageId":"1156","endLine":125,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1157","line":3,"column":8,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1158","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":12},{"ruleId":"1129","severity":1,"message":"1159","line":2,"column":10,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1160","line":2,"column":17,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1161","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1162","line":5,"column":8,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1163","line":4,"column":35,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1164","line":25,"column":10,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1165","line":28,"column":11,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":31},{"ruleId":"1129","severity":1,"message":"1166","line":74,"column":11,"nodeType":"1131","messageId":"1132","endLine":74,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1167","line":83,"column":12,"nodeType":"1131","messageId":"1132","endLine":83,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1168","line":83,"column":25,"nodeType":"1131","messageId":"1132","endLine":83,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1169","line":86,"column":12,"nodeType":"1131","messageId":"1132","endLine":86,"endColumn":36},{"ruleId":"1129","severity":1,"message":"1170","line":86,"column":38,"nodeType":"1131","messageId":"1132","endLine":86,"endColumn":65},{"ruleId":"1129","severity":1,"message":"1171","line":91,"column":12,"nodeType":"1131","messageId":"1132","endLine":91,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1172","line":91,"column":25,"nodeType":"1131","messageId":"1132","endLine":91,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1173","line":92,"column":12,"nodeType":"1131","messageId":"1132","endLine":92,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1174","line":92,"column":23,"nodeType":"1131","messageId":"1132","endLine":92,"endColumn":35},{"ruleId":"1129","severity":1,"message":"1175","line":93,"column":12,"nodeType":"1131","messageId":"1132","endLine":93,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1176","line":93,"column":22,"nodeType":"1131","messageId":"1132","endLine":93,"endColumn":33},{"ruleId":"1129","severity":1,"message":"1177","line":94,"column":12,"nodeType":"1131","messageId":"1132","endLine":94,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1178","line":94,"column":19,"nodeType":"1131","messageId":"1132","endLine":94,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1179","line":98,"column":11,"nodeType":"1131","messageId":"1132","endLine":98,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1180","line":2,"column":10,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1181","line":3,"column":10,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1182","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1183","line":5,"column":30,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":37},{"ruleId":"1129","severity":1,"message":"1184","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1185","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1186","line":9,"column":35,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":50},{"ruleId":"1129","severity":1,"message":"1187","line":31,"column":9,"nodeType":"1131","messageId":"1132","endLine":31,"endColumn":14},{"ruleId":"1188","severity":1,"message":"1189","line":40,"column":31,"nodeType":"1190","messageId":"1191","endLine":40,"endColumn":34,"suggestions":"1192"},{"ruleId":"1129","severity":1,"message":"1163","line":1,"column":17,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1193","line":2,"column":18,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1187","line":25,"column":72,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":77},{"ruleId":"1119","replacedBy":"1194"},{"ruleId":"1121","replacedBy":"1195"},{"ruleId":"1123","replacedBy":"1196"},{"ruleId":"1125","replacedBy":"1197"},{"ruleId":"1127","replacedBy":"1198"},{"ruleId":"1129","severity":1,"message":"1136","line":7,"column":13,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1199","line":6,"column":10,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":31},{"ruleId":"1129","severity":1,"message":"1148","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1200","line":28,"column":12,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":33},{"ruleId":"1129","severity":1,"message":"1201","line":28,"column":35,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":59},{"ruleId":"1129","severity":1,"message":"1202","line":29,"column":12,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":35},{"ruleId":"1129","severity":1,"message":"1203","line":29,"column":37,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":63},{"ruleId":"1129","severity":1,"message":"1149","line":45,"column":11,"nodeType":"1131","messageId":"1132","endLine":45,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1204","line":60,"column":11,"nodeType":"1131","messageId":"1132","endLine":60,"endColumn":56},{"ruleId":"1129","severity":1,"message":"1205","line":68,"column":11,"nodeType":"1131","messageId":"1132","endLine":68,"endColumn":50},{"ruleId":"1129","severity":1,"message":"1206","line":76,"column":11,"nodeType":"1131","messageId":"1132","endLine":76,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1207","line":84,"column":11,"nodeType":"1131","messageId":"1132","endLine":84,"endColumn":57},{"ruleId":"1153","severity":1,"message":"1154","line":122,"column":9,"nodeType":"1155","messageId":"1156","endLine":122,"endColumn":20},{"ruleId":"1119","replacedBy":"1208"},{"ruleId":"1121","replacedBy":"1209"},{"ruleId":"1123","replacedBy":"1210"},{"ruleId":"1125","replacedBy":"1211"},{"ruleId":"1127","replacedBy":"1212"},{"ruleId":"1129","severity":1,"message":"1213","line":3,"column":36,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1135","line":31,"column":9,"nodeType":"1131","messageId":"1132","endLine":31,"endColumn":19},{"ruleId":"1153","severity":1,"message":"1154","line":12,"column":33,"nodeType":"1155","messageId":"1156","endLine":12,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1214","line":2,"column":40,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":49},{"ruleId":"1129","severity":1,"message":"1136","line":10,"column":13,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1163","line":1,"column":17,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1213","line":1,"column":28,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":36},{"ruleId":"1129","severity":1,"message":"1215","line":3,"column":20,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":28},{"ruleId":"1129","severity":1,"message":"1216","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1217","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1218","line":12,"column":10,"nodeType":"1131","messageId":"1132","endLine":12,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1219","line":12,"column":31,"nodeType":"1131","messageId":"1132","endLine":12,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1220","line":21,"column":8,"nodeType":"1131","messageId":"1132","endLine":21,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1221","line":23,"column":19,"nodeType":"1131","messageId":"1132","endLine":23,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1222","line":25,"column":102,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":115},{"ruleId":"1129","severity":1,"message":"1164","line":28,"column":10,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1223","line":30,"column":10,"nodeType":"1131","messageId":"1132","endLine":30,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1165","line":32,"column":11,"nodeType":"1131","messageId":"1132","endLine":32,"endColumn":31},{"ruleId":"1129","severity":1,"message":"1224","line":97,"column":12,"nodeType":"1131","messageId":"1132","endLine":97,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1167","line":98,"column":12,"nodeType":"1131","messageId":"1132","endLine":98,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1168","line":98,"column":25,"nodeType":"1131","messageId":"1132","endLine":98,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1169","line":100,"column":12,"nodeType":"1131","messageId":"1132","endLine":100,"endColumn":36},{"ruleId":"1129","severity":1,"message":"1170","line":100,"column":38,"nodeType":"1131","messageId":"1132","endLine":100,"endColumn":65},{"ruleId":"1129","severity":1,"message":"1225","line":104,"column":12,"nodeType":"1131","messageId":"1132","endLine":104,"endColumn":32},{"ruleId":"1129","severity":1,"message":"1226","line":104,"column":34,"nodeType":"1131","messageId":"1132","endLine":104,"endColumn":57},{"ruleId":"1129","severity":1,"message":"1171","line":106,"column":12,"nodeType":"1131","messageId":"1132","endLine":106,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1172","line":106,"column":25,"nodeType":"1131","messageId":"1132","endLine":106,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1173","line":107,"column":12,"nodeType":"1131","messageId":"1132","endLine":107,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1174","line":107,"column":23,"nodeType":"1131","messageId":"1132","endLine":107,"endColumn":35},{"ruleId":"1129","severity":1,"message":"1177","line":108,"column":12,"nodeType":"1131","messageId":"1132","endLine":108,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1178","line":108,"column":19,"nodeType":"1131","messageId":"1132","endLine":108,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1227","line":111,"column":27,"nodeType":"1131","messageId":"1132","endLine":111,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1228","line":112,"column":12,"nodeType":"1131","messageId":"1132","endLine":112,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1229","line":112,"column":26,"nodeType":"1131","messageId":"1132","endLine":112,"endColumn":41},{"ruleId":"1129","severity":1,"message":"1151","line":137,"column":11,"nodeType":"1131","messageId":"1132","endLine":137,"endColumn":45},{"ruleId":"1129","severity":1,"message":"1230","line":145,"column":11,"nodeType":"1131","messageId":"1132","endLine":145,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1231","line":153,"column":11,"nodeType":"1131","messageId":"1132","endLine":153,"endColumn":54},{"ruleId":"1153","severity":1,"message":"1154","line":162,"column":9,"nodeType":"1155","messageId":"1156","endLine":162,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1232","line":180,"column":14,"nodeType":"1131","messageId":"1132","endLine":180,"endColumn":24},{"ruleId":"1153","severity":1,"message":"1154","line":221,"column":9,"nodeType":"1155","messageId":"1156","endLine":221,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1233","line":3,"column":8,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1234","line":9,"column":11,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1136","line":9,"column":13,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1235","line":138,"column":12,"nodeType":"1131","messageId":"1132","endLine":138,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1236","line":143,"column":14,"nodeType":"1131","messageId":"1132","endLine":143,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1163","line":5,"column":35,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1237","line":96,"column":12,"nodeType":"1131","messageId":"1132","endLine":96,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1238","line":107,"column":12,"nodeType":"1131","messageId":"1132","endLine":107,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1239","line":107,"column":25,"nodeType":"1131","messageId":"1132","endLine":107,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1240","line":108,"column":12,"nodeType":"1131","messageId":"1132","endLine":108,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1241","line":108,"column":24,"nodeType":"1131","messageId":"1132","endLine":108,"endColumn":37},{"ruleId":"1153","severity":1,"message":"1154","line":176,"column":17,"nodeType":"1155","messageId":"1156","endLine":176,"endColumn":28},{"ruleId":"1153","severity":1,"message":"1154","line":177,"column":17,"nodeType":"1155","messageId":"1156","endLine":177,"endColumn":28},{"ruleId":"1153","severity":1,"message":"1154","line":210,"column":9,"nodeType":"1155","messageId":"1156","endLine":210,"endColumn":20},{"ruleId":"1153","severity":1,"message":"1154","line":344,"column":57,"nodeType":"1155","messageId":"1156","endLine":344,"endColumn":68},{"ruleId":"1153","severity":1,"message":"1154","line":468,"column":49,"nodeType":"1155","messageId":"1156","endLine":468,"endColumn":60},{"ruleId":"1129","severity":1,"message":"1242","line":4,"column":10,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1243","line":4,"column":38,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1233","line":3,"column":8,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1234","line":10,"column":11,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1242","line":2,"column":10,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1243","line":2,"column":38,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1245","line":25,"column":39,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1187","line":25,"column":72,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":77},{"ruleId":"1129","severity":1,"message":"1246","line":26,"column":12,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":24},{"ruleId":"1153","severity":1,"message":"1154","line":67,"column":9,"nodeType":"1155","messageId":"1156","endLine":67,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1247","line":73,"column":12,"nodeType":"1131","messageId":"1132","endLine":73,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1227","line":74,"column":27,"nodeType":"1131","messageId":"1132","endLine":74,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1248","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1233","line":3,"column":8,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1248","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1249","line":20,"column":14,"nodeType":"1131","messageId":"1132","endLine":20,"endColumn":45},{"ruleId":"1129","severity":1,"message":"1250","line":21,"column":9,"nodeType":"1131","messageId":"1132","endLine":21,"endColumn":60},{"ruleId":"1129","severity":1,"message":"1251","line":23,"column":15,"nodeType":"1131","messageId":"1132","endLine":23,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1245","line":26,"column":39,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1187","line":26,"column":53,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":58},{"ruleId":"1129","severity":1,"message":"1252","line":4,"column":10,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1253","line":10,"column":11,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1252","line":4,"column":10,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1253","line":10,"column":11,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1243","line":3,"column":38,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1243","line":4,"column":38,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1244","line":5,"column":8,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1254","line":58,"column":11,"nodeType":"1131","messageId":"1132","endLine":58,"endColumn":26},{"ruleId":"1119","replacedBy":"1255"},{"ruleId":"1121","replacedBy":"1256"},{"ruleId":"1123","replacedBy":"1257"},{"ruleId":"1125","replacedBy":"1258"},{"ruleId":"1127","replacedBy":"1259"},{"ruleId":"1129","severity":1,"message":"1260","line":9,"column":10,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":38},{"ruleId":"1129","severity":1,"message":"1235","line":142,"column":12,"nodeType":"1131","messageId":"1132","endLine":142,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1261","line":147,"column":14,"nodeType":"1131","messageId":"1132","endLine":147,"endColumn":28},{"ruleId":"1129","severity":1,"message":"1235","line":29,"column":12,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1261","line":34,"column":14,"nodeType":"1131","messageId":"1132","endLine":34,"endColumn":28},{"ruleId":"1153","severity":1,"message":"1154","line":969,"column":14,"nodeType":"1155","messageId":"1156","endLine":969,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1235","line":29,"column":12,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1261","line":34,"column":14,"nodeType":"1131","messageId":"1132","endLine":34,"endColumn":28},{"ruleId":"1129","severity":1,"message":"1262","line":5,"column":10,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1263","line":5,"column":39,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":53},{"ruleId":"1129","severity":1,"message":"1243","line":6,"column":38,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1233","line":11,"column":12,"nodeType":"1131","messageId":"1132","endLine":11,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1244","line":12,"column":8,"nodeType":"1131","messageId":"1132","endLine":12,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1264","line":16,"column":5,"nodeType":"1131","messageId":"1132","endLine":16,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1265","line":17,"column":5,"nodeType":"1131","messageId":"1132","endLine":17,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1266","line":20,"column":7,"nodeType":"1131","messageId":"1132","endLine":20,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1267","line":26,"column":7,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1268","line":33,"column":11,"nodeType":"1131","messageId":"1132","endLine":33,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1269","line":35,"column":11,"nodeType":"1131","messageId":"1132","endLine":35,"endColumn":62},{"ruleId":"1129","severity":1,"message":"1270","line":35,"column":71,"nodeType":"1131","messageId":"1132","endLine":35,"endColumn":75},{"ruleId":"1129","severity":1,"message":"1163","line":8,"column":35,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1243","line":9,"column":38,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1271","line":11,"column":5,"nodeType":"1131","messageId":"1132","endLine":11,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1272","line":12,"column":5,"nodeType":"1131","messageId":"1132","endLine":12,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1273","line":13,"column":5,"nodeType":"1131","messageId":"1132","endLine":13,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1274","line":14,"column":5,"nodeType":"1131","messageId":"1132","endLine":14,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1275","line":17,"column":10,"nodeType":"1131","messageId":"1132","endLine":17,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1276","line":24,"column":10,"nodeType":"1131","messageId":"1132","endLine":24,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1277","line":24,"column":15,"nodeType":"1131","messageId":"1132","endLine":24,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1185","line":26,"column":8,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1278","line":28,"column":8,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1248","line":33,"column":8,"nodeType":"1131","messageId":"1132","endLine":33,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1279","line":34,"column":8,"nodeType":"1131","messageId":"1132","endLine":34,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1280","line":35,"column":8,"nodeType":"1131","messageId":"1132","endLine":35,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1281","line":36,"column":10,"nodeType":"1131","messageId":"1132","endLine":36,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1221","line":36,"column":19,"nodeType":"1131","messageId":"1132","endLine":36,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1282","line":43,"column":5,"nodeType":"1131","messageId":"1132","endLine":43,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1283","line":47,"column":5,"nodeType":"1131","messageId":"1132","endLine":47,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1284","line":48,"column":5,"nodeType":"1131","messageId":"1132","endLine":48,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1164","line":53,"column":10,"nodeType":"1131","messageId":"1132","endLine":53,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1285","line":54,"column":8,"nodeType":"1131","messageId":"1132","endLine":54,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1286","line":70,"column":11,"nodeType":"1131","messageId":"1132","endLine":70,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1179","line":114,"column":11,"nodeType":"1131","messageId":"1132","endLine":114,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1287","line":127,"column":14,"nodeType":"1131","messageId":"1132","endLine":127,"endColumn":26},{"ruleId":"1153","severity":1,"message":"1154","line":128,"column":9,"nodeType":"1155","messageId":"1156","endLine":128,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1288","line":131,"column":11,"nodeType":"1131","messageId":"1132","endLine":131,"endColumn":61},{"ruleId":"1153","severity":1,"message":"1154","line":132,"column":9,"nodeType":"1155","messageId":"1156","endLine":132,"endColumn":20},{"ruleId":"1153","severity":1,"message":"1154","line":315,"column":45,"nodeType":"1155","messageId":"1156","endLine":315,"endColumn":56},{"ruleId":"1129","severity":1,"message":"1159","line":3,"column":10,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1160","line":3,"column":17,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1289","line":4,"column":37,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":54},{"ruleId":"1129","severity":1,"message":"1290","line":4,"column":55,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":61},{"ruleId":"1129","severity":1,"message":"1291","line":4,"column":63,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":71},{"ruleId":"1129","severity":1,"message":"1292","line":6,"column":10,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1293","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1294","line":16,"column":5,"nodeType":"1131","messageId":"1132","endLine":16,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1295","line":17,"column":5,"nodeType":"1131","messageId":"1132","endLine":17,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1296","line":18,"column":5,"nodeType":"1131","messageId":"1132","endLine":18,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1297","line":19,"column":5,"nodeType":"1131","messageId":"1132","endLine":19,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1298","line":22,"column":5,"nodeType":"1131","messageId":"1132","endLine":22,"endColumn":9},{"ruleId":"1129","severity":1,"message":"1163","line":6,"column":35,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1242","line":7,"column":10,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1243","line":7,"column":38,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1271","line":9,"column":5,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1272","line":10,"column":5,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1273","line":11,"column":5,"nodeType":"1131","messageId":"1132","endLine":11,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1274","line":12,"column":5,"nodeType":"1131","messageId":"1132","endLine":12,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1252","line":13,"column":5,"nodeType":"1131","messageId":"1132","endLine":13,"endColumn":11},{"ruleId":"1129","severity":1,"message":"1275","line":15,"column":10,"nodeType":"1131","messageId":"1132","endLine":15,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1299","line":21,"column":13,"nodeType":"1131","messageId":"1132","endLine":21,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1276","line":22,"column":10,"nodeType":"1131","messageId":"1132","endLine":22,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1277","line":22,"column":15,"nodeType":"1131","messageId":"1132","endLine":22,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1185","line":24,"column":8,"nodeType":"1131","messageId":"1132","endLine":24,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1278","line":26,"column":8,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1244","line":27,"column":8,"nodeType":"1131","messageId":"1132","endLine":27,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1300","line":28,"column":8,"nodeType":"1131","messageId":"1132","endLine":28,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1233","line":29,"column":8,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1293","line":30,"column":8,"nodeType":"1131","messageId":"1132","endLine":30,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1248","line":31,"column":8,"nodeType":"1131","messageId":"1132","endLine":31,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1279","line":32,"column":8,"nodeType":"1131","messageId":"1132","endLine":32,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1280","line":33,"column":8,"nodeType":"1131","messageId":"1132","endLine":33,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1281","line":34,"column":10,"nodeType":"1131","messageId":"1132","endLine":34,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1221","line":34,"column":19,"nodeType":"1131","messageId":"1132","endLine":34,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1264","line":38,"column":5,"nodeType":"1131","messageId":"1132","endLine":38,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1265","line":40,"column":5,"nodeType":"1131","messageId":"1132","endLine":40,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1301","line":43,"column":5,"nodeType":"1131","messageId":"1132","endLine":43,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1283","line":45,"column":5,"nodeType":"1131","messageId":"1132","endLine":45,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1284","line":46,"column":5,"nodeType":"1131","messageId":"1132","endLine":46,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1164","line":50,"column":10,"nodeType":"1131","messageId":"1132","endLine":50,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1285","line":51,"column":8,"nodeType":"1131","messageId":"1132","endLine":51,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1286","line":64,"column":11,"nodeType":"1131","messageId":"1132","endLine":64,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1266","line":69,"column":7,"nodeType":"1131","messageId":"1132","endLine":69,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1302","line":75,"column":7,"nodeType":"1131","messageId":"1132","endLine":75,"endColumn":12},{"ruleId":"1129","severity":1,"message":"1303","line":80,"column":7,"nodeType":"1131","messageId":"1132","endLine":80,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1267","line":86,"column":7,"nodeType":"1131","messageId":"1132","endLine":86,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1304","line":94,"column":12,"nodeType":"1131","messageId":"1132","endLine":94,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1305","line":94,"column":25,"nodeType":"1131","messageId":"1132","endLine":94,"endColumn":39},{"ruleId":"1129","severity":1,"message":"1268","line":99,"column":11,"nodeType":"1131","messageId":"1132","endLine":99,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1179","line":101,"column":11,"nodeType":"1131","messageId":"1132","endLine":101,"endColumn":29},{"ruleId":"1153","severity":1,"message":"1154","line":156,"column":45,"nodeType":"1155","messageId":"1156","endLine":156,"endColumn":56},{"ruleId":"1129","severity":1,"message":"1291","line":5,"column":10,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1306","line":5,"column":20,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1252","line":6,"column":10,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1307","line":7,"column":10,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1278","line":10,"column":8,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1131","messageId":"1132","endLine":14,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1308","line":18,"column":5,"nodeType":"1131","messageId":"1132","endLine":18,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1309","line":19,"column":5,"nodeType":"1131","messageId":"1132","endLine":19,"endColumn":15},{"ruleId":"1129","severity":1,"message":"1310","line":43,"column":26,"nodeType":"1131","messageId":"1132","endLine":43,"endColumn":41},{"ruleId":"1129","severity":1,"message":"1311","line":157,"column":46,"nodeType":"1131","messageId":"1132","endLine":157,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1311","line":182,"column":54,"nodeType":"1131","messageId":"1132","endLine":182,"endColumn":59},{"ruleId":"1129","severity":1,"message":"1312","line":2,"column":10,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1306","line":4,"column":10,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1243","line":5,"column":38,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1244","line":6,"column":8,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1313","line":39,"column":11,"nodeType":"1131","messageId":"1132","endLine":39,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1254","line":60,"column":11,"nodeType":"1131","messageId":"1132","endLine":60,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1312","line":3,"column":10,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1243","line":10,"column":38,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1313","line":53,"column":11,"nodeType":"1131","messageId":"1132","endLine":53,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1254","line":74,"column":11,"nodeType":"1131","messageId":"1132","endLine":74,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1314","line":47,"column":12,"nodeType":"1131","messageId":"1132","endLine":47,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1315","line":47,"column":31,"nodeType":"1131","messageId":"1132","endLine":47,"endColumn":51},{"ruleId":"1129","severity":1,"message":"1316","line":48,"column":24,"nodeType":"1131","messageId":"1132","endLine":48,"endColumn":37},{"ruleId":"1129","severity":1,"message":"1317","line":55,"column":25,"nodeType":"1131","messageId":"1132","endLine":55,"endColumn":39},{"ruleId":"1153","severity":1,"message":"1154","line":253,"column":18,"nodeType":"1155","messageId":"1156","endLine":253,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1318","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1319","line":43,"column":11,"nodeType":"1131","messageId":"1132","endLine":43,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1248","line":4,"column":8,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":18},{"ruleId":"1119","replacedBy":"1320"},{"ruleId":"1121","replacedBy":"1321"},{"ruleId":"1123","replacedBy":"1322"},{"ruleId":"1125","replacedBy":"1323"},{"ruleId":"1127","replacedBy":"1324"},{"ruleId":"1129","severity":1,"message":"1325","line":7,"column":10,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1326","line":8,"column":10,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1135","line":26,"column":9,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1327","line":47,"column":24,"nodeType":"1131","messageId":"1132","endLine":47,"endColumn":29},{"ruleId":"1153","severity":1,"message":"1154","line":47,"column":33,"nodeType":"1155","messageId":"1156","endLine":47,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1328","line":6,"column":20,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1329","line":7,"column":10,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1330","line":10,"column":43,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":52},{"ruleId":"1129","severity":1,"message":"1331","line":14,"column":12,"nodeType":"1131","messageId":"1132","endLine":14,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1332","line":15,"column":11,"nodeType":"1131","messageId":"1132","endLine":15,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1333","line":32,"column":14,"nodeType":"1131","messageId":"1132","endLine":32,"endColumn":35},{"ruleId":"1129","severity":1,"message":"1327","line":47,"column":24,"nodeType":"1131","messageId":"1132","endLine":47,"endColumn":29},{"ruleId":"1153","severity":1,"message":"1154","line":47,"column":33,"nodeType":"1155","messageId":"1156","endLine":47,"endColumn":44},{"ruleId":"1129","severity":1,"message":"1307","line":3,"column":10,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1252","line":4,"column":10,"nodeType":"1131","messageId":"1132","endLine":4,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1242","line":5,"column":10,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1243","line":5,"column":38,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1281","line":7,"column":10,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":17},{"ruleId":"1129","severity":1,"message":"1221","line":7,"column":19,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":27},{"ruleId":"1129","severity":1,"message":"1233","line":10,"column":8,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1248","line":11,"column":8,"nodeType":"1131","messageId":"1132","endLine":11,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1334","line":15,"column":11,"nodeType":"1131","messageId":"1132","endLine":15,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1335","line":55,"column":7,"nodeType":"1131","messageId":"1132","endLine":55,"endColumn":11},{"ruleId":"1129","severity":1,"message":"1336","line":60,"column":7,"nodeType":"1131","messageId":"1132","endLine":60,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1337","line":66,"column":7,"nodeType":"1131","messageId":"1132","endLine":66,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1338","line":72,"column":7,"nodeType":"1131","messageId":"1132","endLine":72,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1339","line":77,"column":7,"nodeType":"1131","messageId":"1132","endLine":77,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1340","line":86,"column":12,"nodeType":"1131","messageId":"1132","endLine":86,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1341","line":86,"column":24,"nodeType":"1131","messageId":"1132","endLine":86,"endColumn":37},{"ruleId":"1129","severity":1,"message":"1229","line":87,"column":26,"nodeType":"1131","messageId":"1132","endLine":87,"endColumn":41},{"ruleId":"1188","severity":1,"message":"1189","line":91,"column":40,"nodeType":"1190","messageId":"1191","endLine":91,"endColumn":43,"suggestions":"1342"},{"ruleId":"1153","severity":1,"message":"1154","line":92,"column":9,"nodeType":"1155","messageId":"1156","endLine":92,"endColumn":20},{"ruleId":"1129","severity":1,"message":"1240","line":136,"column":11,"nodeType":"1131","messageId":"1132","endLine":136,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1343","line":392,"column":51,"nodeType":"1131","messageId":"1132","endLine":392,"endColumn":55},{"ruleId":"1129","severity":1,"message":"1306","line":5,"column":10,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1243","line":6,"column":38,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1244","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1344","line":10,"column":8,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1223","line":17,"column":5,"nodeType":"1131","messageId":"1132","endLine":17,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1345","line":21,"column":5,"nodeType":"1131","messageId":"1132","endLine":21,"endColumn":10},{"ruleId":"1129","severity":1,"message":"1224","line":40,"column":12,"nodeType":"1131","messageId":"1132","endLine":40,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1346","line":42,"column":14,"nodeType":"1131","messageId":"1132","endLine":42,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1303","line":46,"column":11,"nodeType":"1131","messageId":"1132","endLine":46,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1313","line":53,"column":11,"nodeType":"1131","messageId":"1132","endLine":53,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1347","line":74,"column":11,"nodeType":"1131","messageId":"1132","endLine":74,"endColumn":29},{"ruleId":"1129","severity":1,"message":"1254","line":81,"column":11,"nodeType":"1131","messageId":"1132","endLine":81,"endColumn":26},{"ruleId":"1129","severity":1,"message":"1232","line":97,"column":14,"nodeType":"1131","messageId":"1132","endLine":97,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1306","line":5,"column":10,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1243","line":6,"column":38,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":43},{"ruleId":"1129","severity":1,"message":"1244","line":8,"column":8,"nodeType":"1131","messageId":"1132","endLine":8,"endColumn":13},{"ruleId":"1129","severity":1,"message":"1344","line":10,"column":8,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1223","line":17,"column":5,"nodeType":"1131","messageId":"1132","endLine":17,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1345","line":21,"column":5,"nodeType":"1131","messageId":"1132","endLine":21,"endColumn":10},{"ruleId":"1129","severity":1,"message":"1224","line":40,"column":12,"nodeType":"1131","messageId":"1132","endLine":40,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1346","line":42,"column":14,"nodeType":"1131","messageId":"1132","endLine":42,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1232","line":77,"column":14,"nodeType":"1131","messageId":"1132","endLine":77,"endColumn":24},{"ruleId":"1129","severity":1,"message":"1248","line":5,"column":8,"nodeType":"1131","messageId":"1132","endLine":5,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1233","line":6,"column":8,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1348","line":6,"column":18,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":32},{"ruleId":"1129","severity":1,"message":"1300","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1349","line":27,"column":7,"nodeType":"1131","messageId":"1132","endLine":27,"endColumn":23},{"ruleId":"1129","severity":1,"message":"1350","line":38,"column":12,"nodeType":"1131","messageId":"1132","endLine":38,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1351","line":38,"column":18,"nodeType":"1131","messageId":"1132","endLine":38,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1352","line":42,"column":26,"nodeType":"1131","messageId":"1132","endLine":42,"endColumn":41},{"ruleId":"1129","severity":1,"message":"1353","line":1,"column":18,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1354","line":1,"column":23,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":32},{"ruleId":"1129","severity":1,"message":"1248","line":6,"column":8,"nodeType":"1131","messageId":"1132","endLine":6,"endColumn":18},{"ruleId":"1129","severity":1,"message":"1233","line":7,"column":8,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":14},{"ruleId":"1129","severity":1,"message":"1348","line":7,"column":18,"nodeType":"1131","messageId":"1132","endLine":7,"endColumn":32},{"ruleId":"1129","severity":1,"message":"1300","line":9,"column":8,"nodeType":"1131","messageId":"1132","endLine":9,"endColumn":19},{"ruleId":"1129","severity":1,"message":"1148","line":10,"column":8,"nodeType":"1131","messageId":"1132","endLine":10,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1355","line":14,"column":5,"nodeType":"1131","messageId":"1132","endLine":14,"endColumn":22},{"ruleId":"1129","severity":1,"message":"1350","line":25,"column":12,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":16},{"ruleId":"1129","severity":1,"message":"1351","line":25,"column":18,"nodeType":"1131","messageId":"1132","endLine":25,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1356","line":26,"column":30,"nodeType":"1131","messageId":"1132","endLine":26,"endColumn":49},{"ruleId":"1129","severity":1,"message":"1352","line":29,"column":26,"nodeType":"1131","messageId":"1132","endLine":29,"endColumn":41},{"ruleId":"1129","severity":1,"message":"1311","line":71,"column":53,"nodeType":"1131","messageId":"1132","endLine":71,"endColumn":58},{"ruleId":"1129","severity":1,"message":"1311","line":97,"column":53,"nodeType":"1131","messageId":"1132","endLine":97,"endColumn":58},{"ruleId":"1129","severity":1,"message":"1353","line":1,"column":18,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":21},{"ruleId":"1129","severity":1,"message":"1354","line":1,"column":23,"nodeType":"1131","messageId":"1132","endLine":1,"endColumn":32},{"ruleId":"1129","severity":1,"message":"1357","line":2,"column":25,"nodeType":"1131","messageId":"1132","endLine":2,"endColumn":38},{"ruleId":"1129","severity":1,"message":"1298","line":3,"column":21,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":25},{"ruleId":"1129","severity":1,"message":"1358","line":3,"column":27,"nodeType":"1131","messageId":"1132","endLine":3,"endColumn":33},"lines-around-directive",["1359"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'customMask' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'clearError' is assigned a value but never used.","'path' is assigned a value but never used.","'AiOutlineYoutube' is defined but never used.","'Link' is defined but never used.","'searchItem' is defined but never used.","'searchSubItens' is defined but never used.",["1359"],[],[],[],[],"'ref' is defined but never used.","'ClassType' is defined but never used.","'CheckBox' is defined but never used.","'comissionOptions' is assigned a value but never used.","'checkboxOnlineScheduleptions' is assigned a value but never used.","'checkboxCanFitIn' is assigned a value but never used.","'checkboxDiferentPrice' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'PropTypes' is defined but never used.","'dark' is defined but never used.","'Chart' is defined but never used.","'Pie' is defined but never used.","'ContentHeader' is defined but never used.","'SelectInput' is defined but never used.","'useEffect' is defined but never used.","'convertToISO8601UTCDateFormat' is defined but never used.","'ICreateProviderProps' is defined but never used.","'IBankapi' is defined but never used.","'addressInfo' is assigned a value but never used.","'setAddressInfo' is assigned a value but never used.","'showPreferencesContainer' is assigned a value but never used.","'setShowPreferencesContainer' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'cepNumber' is assigned a value but never used.","'setCepNumber' is assigned a value but never used.","'rgNumber' is assigned a value but never used.","'setRgNumber' is assigned a value but never used.","'banks' is assigned a value but never used.","'setBanks' is assigned a value but never used.","'affiliationOptions' is assigned a value but never used.","'BsPeopleCircle' is defined but never used.","'MdMenu' is defined but never used.","'Toggle' is defined but never used.","'Welcome' is defined but never used.","'MaskedTextInput' is defined but never used.","'ReactInputMask' is defined but never used.","'ReactInputProps' is defined but never used.","'error' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1360","1361"],"'lighten' is defined but never used.",["1359"],[],[],[],[],"'brazilianCurrencyMask' is defined but never used.","'showDiscountContainer' is assigned a value but never used.","'setShowDiscountContainer' is assigned a value but never used.","'showCommissionContainer' is assigned a value but never used.","'setShowCommissionContainer' is assigned a value but never used.","'checkboxProfessionalOptions' is assigned a value but never used.","'checkboxClientOptions' is assigned a value but never used.","'checkboxProductForSale' is assigned a value but never used.","'checkboxProductForConsuption' is assigned a value but never used.",["1359"],[],[],[],[],"'useState' is defined but never used.","'useParams' is defined but never used.","'MdPerson' is defined but never used.","'ProviderCard' is defined but never used.","'AddArtistModal' is defined but never used.","'MdKeyboardArrowDown' is defined but never used.","'MdKeyboardArrowRight' is defined but never used.","'WebCam' is defined but never used.","'cnpjMask' is defined but never used.","'SectionButton' is defined but never used.","'AddSkillModal' is defined but never used.","'show' is assigned a value but never used.","'showAddressContainer' is assigned a value but never used.","'setShowAddressContainer' is assigned a value but never used.","'setCurrentCities' is assigned a value but never used.","'currentState' is assigned a value but never used.","'setCurrentState' is assigned a value but never used.","'checkboxShowInschedule' is assigned a value but never used.","'checkboxFiredProfessional' is assigned a value but never used.","'handleShow' is defined but never used.","'Select' is defined but never used.","'skillsList' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'searchClient' is defined but never used.","'cnpjLoading' is assigned a value but never used.","'currentCity' is assigned a value but never used.","'setCurrentCity' is assigned a value but never used.","'citiesList' is assigned a value but never used.","'setCitiesList' is assigned a value but never used.","'SubmitHandler' is defined but never used.","'Scope' is defined but never used.","'Input' is defined but never used.","'defaultValue' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'currentUf' is assigned a value but never used.","'DatePicker' is defined but never used.","'handleCreateSSHKeySubmitWithKey' is defined but never used.","'uploadedSSHKey' is defined but never used.","'formData' is assigned a value but never used.","'FaPlus' is defined but never used.","'history' is assigned a value but never used.","'documentOptions' is assigned a value but never used.",["1359"],[],[],[],[],"'convertToBrasilianDateFormat' is defined but never used.","'searchProvider' is defined but never used.","'MdInsertDriveFile' is defined but never used.","'MdRemoveRedEye' is defined but never used.","'CreateComandaForm' is defined but never used.","'AddComandaMenu' is defined but never used.","'professionalsList' is assigned a value but never used.","'servicesList' is assigned a value but never used.","'formRef' is assigned a value but never used.","'handleCreateComandaSubmit' is assigned a value but never used.","'data' is defined but never used.","'FaWhatsapp' is defined but never used.","'FaInstagram' is defined but never used.","'FaFacebook' is defined but never used.","'FaTwitter' is defined but never used.","'IoLogoTiktok' is defined but never used.","'cpf' is defined but never used.","'cnpj' is defined but never used.","'FieldSet' is defined but never used.","'AvatarInput' is defined but never used.","'brasilStatesAndCities' is defined but never used.","'cpfMask' is defined but never used.","'TotalValue' is defined but never used.","'ProductFormContainer' is defined but never used.","'ServiceFormContainer' is defined but never used.","'apiClient' is defined but never used.","'IComboBox' is defined but never used.","'handleChange' is defined but never used.","'handleCreateClientSubmit' is assigned a value but never used.","'MdSystemUpdateAlt' is defined but never used.","'MdSort' is defined but never used.","'MdDelete' is defined but never used.","'IoIosCalculator' is defined but never used.","'Checkbox' is defined but never used.","'BarChart' is defined but never used.","'ChartsContainer' is defined but never used.","'CardsContainer' is defined but never used.","'CardsContainer2' is defined but never used.","'Card' is defined but never used.","'Yup' is defined but never used.","'MaskedInput' is defined but never used.","'ConfigurePaymentForm' is defined but never used.","'types' is assigned a value but never used.","'paymentOptions' is assigned a value but never used.","'currentForm' is assigned a value but never used.","'setCurrentForm' is assigned a value but never used.","'MdEdit' is defined but never used.","'useHistory' is defined but never used.","'PayableResume' is defined but never used.","'ResumeItem' is defined but never used.","'setPaymentsList' is assigned a value but never used.","'index' is defined but never used.","'Form' is defined but never used.","'expensesOptions' is assigned a value but never used.","'showPaymentButton' is assigned a value but never used.","'setShowPaymentButton' is assigned a value but never used.","'setFilterType' is assigned a value but never used.","'setArtistsList' is assigned a value but never used.","'Exceptions' is defined but never used.","'cardTransactions' is assigned a value but never used.",["1359"],[],[],[],[],"'IconBaseProps' is defined but never used.","'MdErrorOutline' is defined but never used.","'error' is defined but never used.","'FaSpinner' is defined but never used.","'RiFileUploadLine' is defined but never used.","'UploadXML' is defined but never used.","'loading' is assigned a value but never used.","'buttonRef' is assigned a value but never used.","'handleUploadXMLSubmit' is defined but never used.","'IStateProps' is defined but never used.","'type' is assigned a value but never used.","'providers' is assigned a value but never used.","'naturezaOptions' is assigned a value but never used.","'freteOptions' is assigned a value but never used.","'ufsList' is assigned a value but never used.","'tipoPessoa' is assigned a value but never used.","'setTipoPessoa' is assigned a value but never used.",["1362","1363"],"'item' is defined but never used.","'TextArea' is defined but never used.","'Title' is defined but never used.","'handleClose' is defined but never used.","'colaboradorOptions' is assigned a value but never used.","'OptionTypeBase' is defined but never used.","'PromotionOptions' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setProductsList' is assigned a value but never used.","'css' is defined but never used.","'keyframes' is defined but never used.","'CheckBoxContainer' is defined but never used.","'setSelectedProducts' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'Button' is defined but never used.","padding-line-between-statements",{"messageId":"1364","fix":"1365","desc":"1366"},{"messageId":"1367","fix":"1368","desc":"1369"},{"messageId":"1364","fix":"1370","desc":"1366"},{"messageId":"1367","fix":"1371","desc":"1369"},"suggestUnknown",{"range":"1372","text":"1373"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1372","text":"1374"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1375","text":"1373"},{"range":"1375","text":"1374"},[1331,1334],"unknown","never",[2569,2572]]