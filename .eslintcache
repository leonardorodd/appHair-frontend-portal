[{"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts":"1","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx":"2","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx":"3","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts":"4","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts":"5","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx":"6","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts":"7","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx":"8","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx":"9","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx":"10","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx":"11","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx":"12","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts":"13","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts":"14","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts":"15","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx":"16","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts":"17","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx":"18","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx":"19","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/styles.ts":"20","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx":"21","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts":"22","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx":"23","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx":"24","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts":"25","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx":"26","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx":"27","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts":"28","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts":"29","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts":"30","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/styles.ts":"31","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts":"32","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx":"33","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx":"34","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx":"35","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx":"36","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx":"37","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx":"38","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx":"39","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts":"40","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts":"41","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts":"42","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts":"43","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts":"44","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx":"45","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts":"46","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts":"47","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/index.tsx":"48","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/styles.ts":"49","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/index.tsx":"50","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/styles.ts":"51","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/dateUtils.ts":"52","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/services/apiClient.ts":"53","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMask/index.tsx":"54","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMask/styles.ts":"55","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/dark.ts":"56","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/index.tsx":"57","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/styles.ts":"58","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/index.tsx":"59","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/styles.ts":"60","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/index.tsx":"61","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/styles.ts":"62","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/index.tsx":"63","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/styles.ts":"64","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/index.tsx":"65","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/styles.ts":"66","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/index.tsx":"67","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/styles.ts":"68","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/index.tsx":"69","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/styles.ts":"70","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/index.tsx":"71","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/styles.ts":"72","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/index.tsx":"73","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/styles.ts":"74","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/index.tsx":"75","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/index.tsx":"76","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/styles.ts":"77","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/index.tsx":"78","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/styles.ts":"79","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/index.tsx":"80","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/styles.ts":"81","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/index.tsx":"82","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/index.tsx":"83","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/index.tsx":"84","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/styles.ts":"85","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/styles.ts":"86","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/index.tsx":"87","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/styles.ts":"88","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/index.tsx":"89","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/styles.ts":"90","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/index.tsx":"91","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/styles.ts":"92","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/index.tsx":"93","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/styles.ts":"94","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/index.tsx":"95","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/styles.ts":"96","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/index.tsx":"97","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/styles.ts":"98","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/index.tsx":"99","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/styles.ts":"100","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/index.tsx":"101","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/styles.ts":"102","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/index.tsx":"103","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/styles.ts":"104"},{"size":298,"mtime":1611074008512,"results":"105","hashOfConfig":"106"},{"size":240,"mtime":1611113854290,"results":"107","hashOfConfig":"106"},{"size":186,"mtime":1611091145399,"results":"108","hashOfConfig":"106"},{"size":559,"mtime":1618422055734,"results":"109","hashOfConfig":"106"},{"size":1697,"mtime":1615347225641,"results":"110","hashOfConfig":"106"},{"size":2343,"mtime":1615319594824,"results":"111","hashOfConfig":"106"},{"size":418,"mtime":1617919036432,"results":"112","hashOfConfig":"106"},{"size":147,"mtime":1613050326534,"results":"113","hashOfConfig":"106"},{"size":1199,"mtime":1619124771842,"results":"114","hashOfConfig":"106"},{"size":3533,"mtime":1611115585188,"results":"115","hashOfConfig":"106"},{"size":2910,"mtime":1614170920399,"results":"116","hashOfConfig":"106"},{"size":9131,"mtime":1619124786294,"results":"117","hashOfConfig":"106"},{"size":1453,"mtime":1617146195822,"results":"118","hashOfConfig":"106"},{"size":635,"mtime":1611094032908,"results":"119","hashOfConfig":"106"},{"size":1560,"mtime":1615378942896,"results":"120","hashOfConfig":"106"},{"size":2610,"mtime":1616557080515,"results":"121","hashOfConfig":"106"},{"size":386,"mtime":1616560370953,"results":"122","hashOfConfig":"106"},{"size":1347,"mtime":1619110284769,"results":"123","hashOfConfig":"106"},{"size":2907,"mtime":1611723797652,"results":"124","hashOfConfig":"106"},{"size":1353,"mtime":1614170779070,"results":"125","hashOfConfig":"106"},{"size":19006,"mtime":1616541944916,"results":"126","hashOfConfig":"106"},{"size":2743,"mtime":1618539981685,"results":"127","hashOfConfig":"106"},{"size":1815,"mtime":1611709794311,"results":"128","hashOfConfig":"106"},{"size":389,"mtime":1613624228415,"results":"129","hashOfConfig":"106"},{"size":3713,"mtime":1616531053279,"results":"130","hashOfConfig":"106"},{"size":716,"mtime":1611092750058,"results":"131","hashOfConfig":"106"},{"size":169,"mtime":1611062486761,"results":"132","hashOfConfig":"106"},{"size":80,"mtime":1611059416740,"results":"133","hashOfConfig":"106"},{"size":80,"mtime":1611060067350,"results":"134","hashOfConfig":"106"},{"size":938,"mtime":1611112477862,"results":"135","hashOfConfig":"106"},{"size":1353,"mtime":1611723579075,"results":"136","hashOfConfig":"106"},{"size":1519,"mtime":1618538880330,"results":"137","hashOfConfig":"106"},{"size":567,"mtime":1618195316965,"results":"138","hashOfConfig":"106"},{"size":591,"mtime":1611115168078,"results":"139","hashOfConfig":"106"},{"size":1161,"mtime":1617149443280,"results":"140","hashOfConfig":"106"},{"size":603,"mtime":1612221397110,"results":"141","hashOfConfig":"106"},{"size":545,"mtime":1611124910415,"results":"142","hashOfConfig":"106"},{"size":16469,"mtime":1615901637073,"results":"143","hashOfConfig":"106"},{"size":1350,"mtime":1618529841182,"results":"144","hashOfConfig":"106"},{"size":183,"mtime":1611089866713,"results":"145","hashOfConfig":"106"},{"size":813,"mtime":1611110368258,"results":"146","hashOfConfig":"106"},{"size":813,"mtime":1611124692513,"results":"147","hashOfConfig":"106"},{"size":1203,"mtime":1618529206453,"results":"148","hashOfConfig":"106"},{"size":1908,"mtime":1615300548624,"results":"149","hashOfConfig":"106"},{"size":1729,"mtime":1616560364093,"results":"150","hashOfConfig":"106"},{"size":1083,"mtime":1617111231209,"results":"151","hashOfConfig":"106"},{"size":1558,"mtime":1619146955282,"results":"152","hashOfConfig":"106"},{"size":1601,"mtime":1619118340356,"results":"153","hashOfConfig":"106"},{"size":2328,"mtime":1618406546163,"results":"154","hashOfConfig":"106"},{"size":1978,"mtime":1619629607509,"results":"155","hashOfConfig":"106"},{"size":766,"mtime":1616566401215,"results":"156","hashOfConfig":"106"},{"size":717,"mtime":1612929460577,"results":"157","hashOfConfig":"106"},{"size":638,"mtime":1613601722637,"results":"158","hashOfConfig":"106"},{"size":2731,"mtime":1614700478687,"results":"159","hashOfConfig":"106"},{"size":2129,"mtime":1614690000567,"results":"160","hashOfConfig":"106"},{"size":436,"mtime":1613624011713,"results":"161","hashOfConfig":"162"},{"size":2909,"mtime":1614111387629,"results":"163","hashOfConfig":"106"},{"size":1353,"mtime":1614110330744,"results":"164","hashOfConfig":"106"},{"size":14191,"mtime":1616541862304,"results":"165","hashOfConfig":"106"},{"size":1582,"mtime":1615340883489,"results":"166","hashOfConfig":"106"},{"size":312,"mtime":1615223014856,"results":"167","hashOfConfig":"106"},{"size":615,"mtime":1619146440810,"results":"168","hashOfConfig":"106"},{"size":2078,"mtime":1616557169000,"results":"169","hashOfConfig":"106"},{"size":930,"mtime":1616560849300,"results":"170","hashOfConfig":"106"},{"size":238,"mtime":1614123532896,"results":"171","hashOfConfig":"162"},{"size":464,"mtime":1614134130500,"results":"172","hashOfConfig":"162"},{"size":2842,"mtime":1614695392921,"results":"173","hashOfConfig":"106"},{"size":2201,"mtime":1616510308971,"results":"174","hashOfConfig":"106"},{"size":2009,"mtime":1614742889849,"results":"175","hashOfConfig":"106"},{"size":1588,"mtime":1619147026618,"results":"176","hashOfConfig":"106"},{"size":500,"mtime":1611078872116,"results":"177","hashOfConfig":"106"},{"size":493,"mtime":1613149633360,"results":"178","hashOfConfig":"106"},{"size":184,"mtime":1616445783318,"results":"179","hashOfConfig":"106"},{"size":80,"mtime":1616441334100,"results":"180","hashOfConfig":"106"},{"size":574,"mtime":1617149136837,"results":"181","hashOfConfig":"106"},{"size":1166,"mtime":1618578259630,"results":"182","hashOfConfig":"106"},{"size":1819,"mtime":1618578370650,"results":"183","hashOfConfig":"106"},{"size":27621,"mtime":1619184388255,"results":"184","hashOfConfig":"106"},{"size":4686,"mtime":1619182083052,"results":"185","hashOfConfig":"106"},{"size":2118,"mtime":1617122262094,"results":"186","hashOfConfig":"106"},{"size":519,"mtime":1617138729272,"results":"187","hashOfConfig":"106"},{"size":893,"mtime":1619124073407,"results":"188","hashOfConfig":"106"},{"size":7415,"mtime":1617148050885,"results":"189","hashOfConfig":"106"},{"size":26933,"mtime":1617163423551,"results":"190","hashOfConfig":"106"},{"size":1522,"mtime":1617148048672,"results":"191","hashOfConfig":"106"},{"size":2857,"mtime":1615346433197,"results":"192","hashOfConfig":"106"},{"size":4794,"mtime":1617163777009,"results":"193","hashOfConfig":"106"},{"size":2256,"mtime":1617162682892,"results":"194","hashOfConfig":"106"},{"size":2270,"mtime":1617161252112,"results":"195","hashOfConfig":"106"},{"size":519,"mtime":1617161285020,"results":"196","hashOfConfig":"106"},{"size":1022,"mtime":1617195660831,"results":"197","hashOfConfig":"106"},{"size":578,"mtime":1617195010391,"results":"198","hashOfConfig":"106"},{"size":1846,"mtime":1617195500994,"results":"199","hashOfConfig":"106"},{"size":803,"mtime":1617195605159,"results":"200","hashOfConfig":"106"},{"size":19259,"mtime":1619628799145,"results":"201","hashOfConfig":"106"},{"size":4194,"mtime":1619161183366,"results":"202","hashOfConfig":"106"},{"size":5104,"mtime":1619156502164,"results":"203","hashOfConfig":"106"},{"size":834,"mtime":1619158529889,"results":"204","hashOfConfig":"106"},{"size":2618,"mtime":1619161109457,"results":"205","hashOfConfig":"106"},{"size":834,"mtime":1619159596364,"results":"206","hashOfConfig":"106"},{"size":4112,"mtime":1619703977208,"results":"207","hashOfConfig":"106"},{"size":834,"mtime":1619631106739,"results":"208","hashOfConfig":"106"},{"size":2293,"mtime":1619699999650,"results":"209","hashOfConfig":"106"},{"size":978,"mtime":1619705602348,"results":"210","hashOfConfig":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},"1d9ly5v",{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"213"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"213"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"213"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"213"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"213"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"213"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"213"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"213"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"213"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"213"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"213"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"213"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"213"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},"hliahr",{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"213"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"213"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"213"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"213"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"213"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"213"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"213"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"213"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"213"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"213"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"213"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"213"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"213"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"213"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"213"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"213"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"213"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"213"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts",[],["452","453","454","455","456"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx",["457"],"/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label: string;\n    customMask?: (value: string) => string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    customMask,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [value, setValue] = useState('');\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <input\n                id={fieldName}\n                ref={inputRef}\n                value={customMask ? customMask(value) : undefined}\n                onChange={event =>\n                    customMask ? setValue(event.target.value) : undefined\n                }\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx",["458","459","460"],"import React from 'react';\nimport ProviderCard from '../../components/ProviderCard';\nimport AddServiceModal from './CreateService';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Serviços</h1>\n                <div>\n                    <AddServiceModal />\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            {/*  <ClientList>\n                <ClientListHeader>\n                    <h3>Fornecedor</h3>\n                    <h3>CPF/CNPJ</h3>\n                    <h3>Contato</h3>\n                    <h3>Telefone</h3>\n                </ClientListHeader>\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n            </ClientList> */}\n        </Container>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx",["461","462","463","464","465"],"/* eslint-disable no-alert */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/named */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {\n    MdDashboard,\n    MdArrowDownward,\n    MdArrowUpward,\n    MdExitToApp,\n    MdEventNote,\n    MdWork,\n    MdBorderColor,\n    MdAttachMoney,\n    MdLiveHelp,\n    MdStore,\n    MdGroup,\n    MdPerson,\n    MdClear,\n} from 'react-icons/md';\n\nimport { RiTruckFill, RiHandSanitizerFill } from 'react-icons/ri';\n\nimport { AiOutlineCodeSandbox } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport MenuItemLink, { IMenuItemProps } from './MenuItem';\n\nimport { Container, Header, MenuContainer, LogImg, Footer } from './styles';\nimport Logo from '../../assets/images/logo.png';\n\nconst Aside: React.FC = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const MenuItens = [\n        {\n            title: 'Agenda',\n            icon: MdEventNote,\n            link: '/agenda',\n            subItens: [],\n        },\n        {\n            title: 'Dashboard',\n            icon: MdDashboard,\n            link: '/dashboard',\n            subItens: [],\n        },\n        {\n            title: 'Cadastros',\n            icon: MdBorderColor,\n            link: '/off',\n            subItens: [\n                { title: 'Artistas', icon: MdPerson, link: '/artists' },\n                {\n                    title: 'Clientes',\n                    icon: MdGroup,\n                    link: '/clients',\n                    subItens: [\n                        {\n                            title: 'teste2',\n                            icon: MdEventNote,\n                            link: '#',\n                            subItens: [\n                                {\n                                    title: 'teste',\n                                    icon: RiTruckFill,\n                                    link: '#',\n                                },\n                            ],\n                        },\n                        {\n                            title: 'teste',\n                            icon: MdEventNote,\n                            link: '#',\n                        },\n                    ],\n                },\n                {\n                    title: 'Fornecedores',\n                    icon: RiTruckFill,\n                    link: '/providers',\n                },\n                {\n                    title: 'Produtos',\n                    icon: RiHandSanitizerFill,\n                    link: '/products',\n                },\n                { title: 'Serviços', icon: MdWork, link: '/services' },\n            ],\n        },\n        {\n            title: 'Financeiro',\n            icon: MdAttachMoney,\n            link: '/financeiro',\n            subItens: [],\n        },\n        {\n            title: 'Estoque',\n            icon: AiOutlineCodeSandbox,\n            link: '/estoque',\n            subItens: [],\n        },\n        {\n            title: 'Estabelecimento',\n            icon: MdStore,\n            link: '/establishment',\n            subItens: [],\n        },\n        { title: 'Ajuda', icon: MdLiveHelp, link: '/ajuda', subItens: [] },\n        /*  { title: 'Entradas', icon: MdArrowUpward, link: '/list/entry-balance' },\n        // eslint-disable-next-line prettier/prettier\n        { title: 'Saídas', icon: MdArrowDownward, link:'/list/exit-balance' }, */\n        // eslint-disable-next-line prettier/prettier\n    ];\n\n    function searchItem(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value.toLocaleUpperCase());\n    }\n\n    function searchSubItens(currentItem: IMenuItemProps) {\n        currentItem.subItens?.some(\n            subItem =>\n                subItem.title.toLocaleUpperCase().startsWith(searchTerm) ||\n                subItem.subItens?.some(sub =>\n                    sub.title.toLocaleUpperCase().startsWith(searchTerm),\n                ),\n        );\n    }\n\n    useEffect(() => {\n        const menuItemList = Array.from(\n            document.getElementsByClassName(\n                'item',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const subMenuItemList = Array.from(\n            document.getElementsByClassName(\n                'subItem',\n            ) as HTMLCollectionOf<HTMLElement>,\n        );\n\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        subMenuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n\n        menuItemList.forEach(item => {\n            item.addEventListener('click', () => {\n                menuItemList.forEach(ele => {\n                    const panel = ele.nextElementSibling as Element;\n\n                    if (ele !== item && ele.classList.contains('active')) {\n                        panel.removeAttribute('style');\n                        ele.classList.remove('active');\n                        ele.classList.remove('openAnimation');\n                        ele.classList.add('closeAnimation');\n                    }\n                });\n\n                const panel = item.nextElementSibling as Element;\n\n                if (item.classList.contains('active')) {\n                    panel.removeAttribute('style');\n                    item.classList.remove('active');\n                    item.classList.remove('openAnimation');\n                    item.classList.add('closeAnimation');\n                } else {\n                    panel.setAttribute('style', 'max-height:500px');\n                    item.classList.add('active');\n                    item.classList.remove('closeAnimation');\n                    item.classList.add('openAnimation');\n                }\n\n                // Close sidemenu on click\n                function toggleClassName(el: Element, className: string) {\n                    if (el.classList.contains(className)) {\n                        el.classList.remove(className);\n                    } else {\n                        el.classList.add(className);\n                    }\n                }\n\n                if (item.getAttribute('href') !== '/off') {\n                    toggleClassName(sidenavEl, 'active');\n                }\n            });\n        });\n    }, []);\n\n    return (\n        <Container id=\"sideMenu\">\n            <div id=\"close-icon\">\n                <MdClear size={22} />\n            </div>\n            <div>\n                <Header>\n                    <LogImg src={Logo} alt=\"Logo\" />\n                    {/*                     <input onChange={searchItem} />\n                     */}\n                </Header>\n                <PerfectScrollbar>\n                    {/*  <MenuContainer>\n                        {MenuItens.map(item => (\n                            <MenuItemLink\n                                key={item.title}\n                                title={item.title}\n                                icon={item.icon}\n                                link={item.link}\n                                grouppedItem\n                                subItens={item.subItens}\n                            />\n                    ))}\n                    </MenuContainer> */}\n                    <MenuContainer id=\"menuContainer\">\n                        {MenuItens.map(item =>\n                            item.title\n                                .toLocaleUpperCase()\n                                .startsWith(searchTerm) ||\n                            (item.subItens &&\n                                item.subItens.some(subItem =>\n                                    subItem.title\n                                        .toLocaleUpperCase()\n                                        .startsWith(searchTerm),\n                                )) ? (\n                                <MenuItemLink\n                                    key={item.title}\n                                    title={item.title}\n                                    icon={item.icon}\n                                    link={item.link}\n                                    grouppedItem\n                                    subItens={item.subItens}\n                                />\n                            ) : (\n                                []\n                            ),\n                        )}\n                    </MenuContainer>\n                </PerfectScrollbar>\n            </div>\n            <Footer>\n                <MdExitToApp />\n                Sair\n            </Footer>\n        </Container>\n    );\n};\n\nexport default Aside;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx",["466"],"import React, { ClassType, useEffect } from 'react';\nimport { MdMenu } from 'react-icons/md';\nimport { Container } from './styles';\n\nimport Aside from '../Aside';\nimport Content from '../Content';\nimport MainHeader from '../MainHeader';\n\nconst Layout: React.FC = ({ children }) => {\n    useEffect(() => {\n        const menuIconEl = document.getElementById('menu-icon') as HTMLElement;\n        const sidenavEl = document.getElementById('sideMenu') as HTMLElement;\n\n        const sidenavCloseEl = document.getElementById(\n            'close-icon',\n        ) as HTMLElement;\n\n        function toggleClassName(el: Element, className: string) {\n            if (el.classList.contains(className)) {\n                el.classList.remove(className);\n            } else {\n                el.classList.add(className);\n            }\n        }\n\n        menuIconEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n\n        sidenavCloseEl.addEventListener('click', () => {\n            toggleClassName(sidenavEl, 'active');\n        });\n    }, []);\n\n    return (\n        <Container>\n            <div id=\"menu-icon\">\n                <MdMenu size={22} />\n            </div>\n            <MainHeader />\n            <Aside />\n            <Content>{children}</Content>\n        </Container>\n    );\n};\n\nexport default Layout;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx",["467","468","469","470","471","472"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport Input from '../../../components/UnformFields/Input';\nimport TextArea from '../../../components/UnformFields/TextArea';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n    WeekSchedule,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [\n        showDiferentPriceContainer,\n        setShowDiferentPriceContainer,\n    ] = useState(false);\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Assessoria de Noivas' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Cabelo' },\n        { value: 4, label: 'Depilação' },\n        { value: 5, label: 'Estética corporal' },\n        { value: 6, label: 'Estética facial' },\n        { value: 7, label: 'Manícure e pedícure' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Massagem' },\n        { value: 5, label: 'Podologia' },\n        { value: 6, label: 'Sobrancelha' },\n        { value: 7, label: 'Tatuagem' },\n    ];\n\n    const checkboxOnlineScheduleptions: CheckboxOption[] = [\n        { id: 'agendamentoOnline', value: 'true', label: 'Agendamento online' },\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxDiferentPrice: CheckboxOption[] = [\n        {\n            id: 'precoDiferenciado',\n            value: 'true',\n            label: 'Preço Diferenciado',\n        },\n    ];\n\n    interface IAddress {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface IFormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: IAddress;\n    }\n\n    function handleClose() {\n        setShowDiferentPriceContainer(false);\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Serviço\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Cadastro de Serviço</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <FieldSet title=\"Dados do Serviço\">\n                                <div id=\"group1\">\n                                    <Select\n                                        name=\"grupoServico\"\n                                        label=\"Grupo de serviço\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={groupOptions}\n                                        isSearchable\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                    <Input name=\"servico\" label=\"Serviço\" />\n                                </div>\n                                <Select\n                                    name=\"referenciaTributacao\"\n                                    label=\"Referência para tributação\"\n                                    classNamePrefix=\"react-select\"\n                                    defaultValue={{\n                                        label: 'Selecione',\n                                        value: 0,\n                                    }}\n                                    options={groupOptions}\n                                    isSearchable\n                                    blurInputOnSelect\n                                    openMenuOnFocus\n                                />\n                                <TextArea\n                                    name=\"descricaoServico\"\n                                    label=\"Descrição do serviço\"\n                                />\n                                <div id=\"group2\">\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Preço serviço\"\n                                    />\n                                    <Input\n                                        name=\"servico\"\n                                        label=\"Custo serviço\"\n                                    />\n                                    <Input name=\"servico\" label=\"Duração\" />\n                                </div>\n                                {/*  <CheckBox\n                                    options={checkboxOnlineScheduleptions}\n                                    name=\"agendamentoOnline\"\n                                />\n                                <CheckBox\n                                    options={checkboxCanFitIn}\n                                    name=\"possibilitaEncaixe\"\n                                />\n                                <CheckBox\n                                    options={checkboxDiferentPrice}\n                                    name=\"precoDiferenciado\"\n                                    onChange={() =>\n                                        setShowDiferentPriceContainer(\n                                            !showDiferentPriceContainer,\n                                        )\n                                    }\n                                /> */}\n                                {showDiferentPriceContainer && (\n                                    <>\n                                        <WeekSchedule>\n                                            <div>\n                                                <label>Dia da semana</label>\n                                                <button type=\"button\">\n                                                    Domingo\n                                                </button>\n                                                <button type=\"button\">\n                                                    Segunda\n                                                </button>\n                                                <button type=\"button\">\n                                                    Terça\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quarta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Quinta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sexta\n                                                </button>\n                                                <button type=\"button\">\n                                                    Sábado\n                                                </button>\n                                            </div>\n                                            <div>\n                                                <label>\n                                                    Valor diferenciado\n                                                </label>\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                                <MaskedInput\n                                                    mask=\"R$ 99,99\"\n                                                    name=\"value\"\n                                                />\n                                            </div>\n                                            <div>\n                                                <label>Definir horário</label>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                                <div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                    <div>ás</div>\n                                                    <MaskedInput\n                                                        mask=\"99:99\"\n                                                        name=\"value\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </WeekSchedule>\n                                    </>\n                                )}\n                            </FieldSet>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowCommissionContainer(\n                                    !showCommissionContainer,\n                                )\n                            }\n                        >\n                            {showCommissionContainer\n                                ? 'Ocultar comissões'\n                                : 'Mostrar comissões'}\n                            {showCommissionContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showCommissionContainer && (\n                            <FieldSet title=\"Comissões\">\n                                <Select\n                                    name=\"formaDeComissao\"\n                                    label=\"Forma de comissão\"\n                                />\n                                <div> Quando Profissional</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                                <div>Quando Assistente</div>\n                                <div id=\"group1\">\n                                    <Input name=\"tipo\" label=\"Tipo\" />\n                                    <Input name=\"comissao\" label=\"Comissão\" />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx",["473"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Container } from './styles';\n\ninterface IDropdownProps {\n    options: {\n        title: string;\n        link: string;\n        externalLink: boolean;\n        clickEvent?: () => void;\n    }[];\n    title: string;\n}\n\nconst Dropdown: React.FC<IDropdownProps> = ({ options, title }) => {\n    return (\n        <Container>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" type=\"button\">\n                    {title}\n                    <MdKeyboardArrowDown size={16} />\n                </button>\n                <div className=\"dropdown-content\">\n                    {options.map(option =>\n                        option.externalLink ? (\n                            <a key={option.title} href={option.link}>\n                                {option.title}\n                            </a>\n                        ) : (\n                            <Link\n                                key={option.title}\n                                to={option.link}\n                                onClick={option.clickEvent}\n                            >\n                                {option.title}\n                            </Link>\n                        ),\n                    )}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dropdown;\n\n/*\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n            externalLink: PropTypes.bool.isRequired,\n            clickEvent: PropTypes.func,\n        }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}; */\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx",["474"],"import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/global';\nimport dark from './styles/themes/dark';\nimport ligth from './styles/themes/ligth';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <ThemeProvider theme={ligth}>\n        <Routes />\n        <GlobalStyle />\n    </ThemeProvider>\n);\n\nexport default App;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx",["475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport FieldSet from '../../../components/FieldSet';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IBankapi {\n    ispb: string;\n    name: string;\n    code: number;\n    fullName: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const [loading, setLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [rgNumber, setRgNumber] = useState('');\n    const [banks, setBanks] = useState('');\n\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    const cities = brasilStatesAndCities.estados\n        .find(elem => elem.nome === currentState)\n        ?.cidades.map(elem => ({\n            value: elem,\n            label: elem,\n        }));\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    useState(() => {\n        /* apiClient\n            .get<IBankapi>(`https://brasilapi.com.br/api/banks/v1/`)\n            .then(response => {})\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n            }); */\n    });\n\n    function getAddressInfo(cep: string) {\n        setLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: states.filter(\n                            estado => estado.sigla === response.data.state,\n                        ),\n                        cidade: cities?.filter(\n                            cidade => cidade.label === response.data.city,\n                        ),\n                    },\n                });\n                setCurrentState(\n                    formRef.current?.getFieldValue('address.estado')[0].label,\n                );\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Fornecedor\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Fornecedor</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                            <div id=\"group1\">\n                                <Input\n                                    name=\"numeroCPFouCNPJ\"\n                                    label=\"CPF/CNPJ*\"\n                                    value={\n                                        tipoPessoa.length > 14\n                                            ? cnpjMask(tipoPessoa)\n                                            : cpfMask(tipoPessoa)\n                                    }\n                                    onChange={e =>\n                                        setTipoPessoa(e.target.value)\n                                    }\n                                />\n                                <Input name=\"email\" label=\"E-mail\" />\n                            </div>\n\n                            <div id=\"group3\">\n                                <Input name=\"contato\" label=\"Contato\" />\n                                <MaskedInput\n                                    mask=\"(99) 9999-9999\"\n                                    name=\"telefone\"\n                                    label=\"Telefone\"\n                                />\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"celular\"\n                                    label=\"Celular\"\n                                />\n                            </div>\n                            <Input name=\"observacoes\" label=\"Observações\" />\n                        </FieldSet>\n                        <FieldSet title=\"Informações Bancárias\">\n                            <div id=\"group2\">\n                                <Input name=\"pix\" label=\"Chave PIX\" />\n                                <Input name=\"banco\" label=\"Banco\" />\n                                <Input name=\"agencia\" label=\"Agência\" />\n                                <Input\n                                    name=\"contaCorrente\"\n                                    label=\"Conta Corrente\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={loading}\n                                            label=\"CEP\"\n                                            disabled={loading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={loading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={loading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            onChange={value => {\n                                                setCurrentState(value?.value);\n                                                formRef.current?.clearField(\n                                                    'address.cidade',\n                                                );\n                                            }}\n                                            options={states}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            classNamePrefix=\"react-select\"\n                                            defaultValue={{\n                                                label: 'Selecione',\n                                                value: 0,\n                                            }}\n                                            isDisabled={currentState === ''}\n                                            options={cities}\n                                            isSearchable={false}\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx",["492","493","494","495"],"import React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport { MdMenu } from 'react-icons/md';\nimport Toggle from '../Toggle';\nimport { Container, Profile, Welcome } from './styles';\nimport Dropdown from '../Dropdown';\nimport ProfilePhoto from '../../assets/images/profile.jpg';\n\nconst MainHeader: React.FC = () => {\n    const profileMenu = [\n        {\n            title: 'Perfil',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste1',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste2',\n            link: '',\n            externalLink: false,\n        },\n    ];\n\n    return (\n        <Container>\n            {/*             <Toggle />\n             */}\n            {/*  <button className=\"toggleMenu\" type=\"button\">\n                <MdMenu size={22} />\n            </button> */}\n            <div />\n            <Profile>\n                {/*                 <BsPeopleCircle size={25} />\n                 */}\n                <Dropdown title=\"Anderson Tartari\" options={profileMenu} />\n                <img src={ProfilePhoto} alt=\"profile\" />\n            </Profile>\n            {/* <Profile>\n                <Welcome>Olá, Anderson.</Welcome>\n            </Profile> */}\n        </Container>\n    );\n};\n\nexport default MainHeader;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx",["496","497","498","499"],"/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDatePicker, {\n    ReactDatePickerProps,\n    registerLocale,\n} from 'react-datepicker';\nimport MaskedTextInput from 'react-text-mask';\nimport ReactInputMask, { Props as ReactInputProps } from 'react-input-mask';\nimport { useField } from '@unform/core';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport pt from 'date-fns/locale/pt-BR';\nimport { Container } from './styles';\n\nregisterLocale('pt', pt);\ninterface Props extends Omit<ReactDatePickerProps, 'onChange'> {\n    name: string;\n    label?: string;\n}\nconst DatePicker: React.FC<Props> = ({ name, label, ...rest }) => {\n    const datepickerRef = useRef(null);\n    const { fieldName, registerField, defaultValue = '', error } = useField(\n        name,\n    );\n    const [date, setDate] = useState(defaultValue || null);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: datepickerRef.current,\n            path: 'props.selected',\n            clearValue: (ref: any) => {\n                ref.clear();\n            },\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <ReactDatePicker\n                id={fieldName}\n                ref={datepickerRef}\n                selected={date}\n                onChange={setDate}\n                locale=\"pt\"\n                dateFormat=\"dd/MM/yyyy\"\n                customInput={<ReactInputMask mask=\"99/99/9999\" />}\n                {...rest}\n            />\n        </Container>\n    );\n};\nexport default DatePicker;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/index.tsx",["500"],"import React, { useEffect } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { MdKeyboardArrowRight } from 'react-icons/md';\n\nimport { MenuItemLink, Container, SubMenuItemLink } from './styles';\n\nexport interface IMenuItemProps {\n    link?: string;\n    grouppedItem?: boolean;\n    icon: React.FC<IconBaseProps>;\n    title: string;\n    subItens?: Array<IMenuItemProps>;\n}\n\nconst MenuItem: React.FC<IMenuItemProps> = ({\n    link,\n    icon: Icon,\n    title,\n    subItens,\n    grouppedItem,\n}) => {\n    return (\n        <Container>\n            <MenuItemLink to={link || ''} className=\"item\">\n                <div>\n                    <Icon />\n                    {title}\n                </div>\n                {grouppedItem && <MdKeyboardArrowRight />}\n            </MenuItemLink>\n            <div className=\"itemContent\">\n                {subItens?.length !== 0 ? (\n                    subItens?.map(subItem => (\n                        <SubMenuItemLink\n                            className=\"subItem\"\n                            key={subItem.title}\n                            to={subItem.link || ''}\n                        >\n                            <subItem.icon />\n                            {subItem.title}\n                        </SubMenuItemLink>\n                    ))\n                ) : (\n                    <>\n                        <p>sss</p>\n                        <p>sss</p>\n                        <p>sss</p>\n                        <p>sss</p>\n                    </>\n                )}\n            </div>\n        </Container>\n    );\n};\n\nexport default MenuItem;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/MenuItem/styles.ts",["501"],"import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    .active {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n\n        > svg {\n            transform: rotate(90deg);\n        }\n    }\n\n    .openAnimation {\n        @keyframes animate1 {\n            0% {\n                height: 0%;\n            }\n            100% {\n                height: 100%;\n            }\n        }\n\n        &::after {\n            animation: animate1 0.3s linear;\n            height: 100%;\n        }\n    }\n\n    .closeAnimation {\n        @keyframes animate2 {\n            0% {\n                height: 100%;\n            }\n            100% {\n                height: 0%;\n            }\n        }\n\n        &::after {\n            animation: animate2 0.3s linear;\n            height: 0%;\n        }\n    }\n\n    .itemContent {\n        max-height: 0;\n        padding-left: 7px;\n        overflow: hidden;\n        background: ${darken(0.03, '#313130')};\n        transition: max-height 0.3s ease-in-out;\n    }\n`;\n\nexport const MenuItemLink = styled(Link)`\n    /*     color: ${props => props.theme.color.info};\n\n */\n    color: var(--primary-text-color);\n    text-decoration: none;\n    position: relative;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n\n    &:hover {\n        background-color: ${darken(0.05, '#313130')};\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        transition: transform 0.4s;\n        width: 15px;\n        height: 15px;\n        margin-right: 5px;\n    }\n\n    > div > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n\n    &::after {\n        width: 3px;\n        bottom: 0;\n        left: 0;\n        content: '';\n        position: absolute;\n        background-color: var(--base-secondary-color);\n    }\n`;\n\nexport const SubMenuItemLink = styled(Link)`\n    color: var(--primary-text-color);\n    text-decoration: none;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    &:hover {\n        color: var(--base-secondary-color);\n    }\n\n    > svg {\n        width: 18px;\n        height: 18px;\n        margin-right: 10px;\n    }\n`;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/index.tsx",["502"],"/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue() {\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                <img\n                    src={selectedFile ? URL.createObjectURL(selectedFile) : defaultValue}\n                    alt=\"profile\"\n                />\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label || ''}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/AvatarInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/dateUtils.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/services/apiClient.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMask/index.tsx",["503","504"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMask/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/dark.ts",[],["505","506","507","508","509"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/index.tsx",["510","511","512"],"import React from 'react';\nimport ProviderCard from '../../components/ProviderCard';\nimport AddProductModal from './CreateProduct';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Produtos</h1>\n                <div>\n                    <AddProductModal />\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            {/*  <ClientList>\n                <ClientListHeader>\n                    <h3>Fornecedor</h3>\n                    <h3>CPF/CNPJ</h3>\n                    <h3>Contato</h3>\n                    <h3>Telefone</h3>\n                </ClientListHeader>\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n            </ClientList> */}\n        </Container>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/index.tsx",["513","514","515","516","517","518","519","520","521","522","523","524"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport { brazilianCurrencyMask } from '../../../utils/masks';\nimport Input from '../../../components/UnformFields/Input';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport Select from '../../../components/UnformFields/Select';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showDiscountContainer, setShowDiscountContainer] = useState(false);\n    const [showCommissionContainer, setShowCommissionContainer] = useState(\n        false,\n    );\n    const [showConfigContainer, setShowConfigContainer] = useState(false);\n\n    const typeComissionOptions = [\n        {\n            label: 'Percentual',\n            value: 'percentual',\n        },\n        {\n            label: 'Valor',\n            value: 'valor',\n        },\n    ];\n\n    const comissionOptions = [\n        { value: 1, label: 'Comissão única' },\n        { value: 2, label: 'Por profissional' },\n    ];\n\n    const groupOptions = [\n        { value: 1, label: 'Cabelo' },\n        { value: 2, label: 'Barba' },\n        { value: 3, label: 'Maquiagem' },\n        { value: 4, label: 'Manicure e Pedicure' },\n        { value: 5, label: 'Estética (facial ou corporal)' },\n        { value: 6, label: 'Massagem' },\n        { value: 7, label: 'Sobrancelhas' },\n    ];\n\n    const checkboxProfessionalOptions: CheckboxOption[] = [\n        {\n            id: 'descontarProfessional',\n            value: 'Descontar do Profissional',\n            label: 'Descontar do Profissional',\n        },\n    ];\n\n    const checkboxClientOptions: CheckboxOption[] = [\n        {\n            id: 'descontarClient',\n            value: 'Descontar do Cliente',\n            label: 'Descontar do Cliente',\n        },\n    ];\n\n    const checkboxProductForSale: CheckboxOption[] = [\n        {\n            id: 'produtoParaVenda',\n            value: 'Produto para Venda',\n            label: 'Produto para Venda',\n        },\n    ];\n\n    const checkboxProductForConsuption: CheckboxOption[] = [\n        {\n            id: 'produtoParaConsumo',\n            value: 'Produto para Consumo',\n            label: 'Produto para Consumo',\n        },\n    ];\n\n    interface IAddress {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface IFormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: IAddress;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Produto\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <p>Cadastro de Produto</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <div>\n                            <div>\n                                <FieldSet title=\"Dados do Produto\">\n                                    <Input name=\"descricao\" label=\"Descrição\" />\n                                    <div id=\"group1\">\n                                        <Select name=\"marca\" label=\"Marca\" />\n                                        <Input name=\"linha\" label=\"Linha\" />\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"grupo\"\n                                            label=\"Grupo\"\n                                            options={groupOptions}\n                                        />\n                                        <Select name=\"tipo\" label=\"Tipo\" />\n                                    </div>\n                                </FieldSet>\n\n                                <FieldSet title=\"Fornecedor\">\n                                    <Select\n                                        name=\"nomefornecedor\"\n                                        label=\"Nome\"\n                                    />\n                                    <Input\n                                        name=\"tempodeentrega\"\n                                        label=\"Tempo médio de Entrega (dias)\"\n                                    />\n                                </FieldSet>\n                            </div>\n                            <div>\n                                <FieldSet title=\"Comissões\">\n                                    <Select\n                                        name=\"formaDeComissao\"\n                                        label=\"Forma de comissão\"\n                                    />\n                                    <div> Quando Profissional</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoProfissional\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                    <div>Quando Assistente</div>\n                                    <div id=\"group1\">\n                                        <Select\n                                            name=\"tipoAssitente\"\n                                            label=\"Tipo\"\n                                            defaultValue={\n                                                typeComissionOptions[0]\n                                            }\n                                            options={typeComissionOptions}\n                                        />\n                                        <Input\n                                            name=\"comissao\"\n                                            label=\"Comissão\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                                <FieldSet title=\"Descontos\">\n                                    <div id=\"group1\">\n                                        {/* <CheckBox\n                                            options={\n                                                checkboxProfessionalOptions\n                                            }\n                                            name=\"decontardoprofissional\"\n                                        />\n                                        <CheckBox\n                                            options={checkboxClientOptions}\n                                            name=\"decontardocliente\"\n                                        /> */}\n                                    </div>\n                                    <div id=\"group1\">\n                                        <Input\n                                            name=\"usoInterno\"\n                                            label=\"Uso Interno\"\n                                        />\n                                        <Input\n                                            name=\"usoProprio\"\n                                            label=\"Uso Próprio\"\n                                        />\n                                    </div>\n                                </FieldSet>\n                            </div>\n                        </div>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowConfigContainer(!showConfigContainer)\n                            }\n                        >\n                            {showConfigContainer\n                                ? 'Ocultar configurações do produto'\n                                : 'Mostrar configurações do produto'}\n                            {showConfigContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        <div>\n                            {showConfigContainer && (\n                                <>\n                                    <div>\n                                        <FieldSet title=\"Finalidade\">\n                                            <div id=\"group1\">\n                                                {/*  <CheckBox\n                                                    options={\n                                                        checkboxProductForSale\n                                                    }\n                                                    name=\"produtoParaVenda\"\n                                                />\n                                                <CheckBox\n                                                    options={\n                                                        checkboxProductForConsuption\n                                                    }\n                                                    name=\"produtoParaConsumo\"\n                                                /> */}\n                                            </div>\n                                            <div id=\"group1\">\n                                                <Input\n                                                    name=\"valorDaVenda\"\n                                                    label=\"Valor da Venda\"\n                                                />\n                                                <Input\n                                                    name=\"descontoMáximoPermitido\"\n                                                    label=\"Desconto Máximo Permitido\"\n                                                />\n                                            </div>\n                                        </FieldSet>\n\n                                        <FieldSet title=\"Estoque Mínimo\">\n                                            <Input\n                                                name=\"estoqueMinimo\"\n                                                label=\"Estoque mínimo (unidades)\"\n                                            />\n                                            <Input\n                                                name=\"valorConvertido\"\n                                                label=\"Valor Convertido\"\n                                            />\n                                        </FieldSet>\n                                    </div>\n                                    <FieldSet title=\"Registro de Saída\">\n                                        <Select\n                                            name=\"registrarSaidaPor\"\n                                            label=\"Registrar saída por\"\n                                        />\n                                        <div id=\"group1\">\n                                            <Select\n                                                name=\"conversao\"\n                                                label=\"Informe a conversão\"\n                                            />\n                                            <Input\n                                                name=\"possui\"\n                                                label=\"Possui (cm)\"\n                                            />\n                                        </div>\n                                    </FieldSet>\n                                </>\n                            )}\n                        </div>\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button className=\"fibre-button\" type=\"submit\" form=\"form\">\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Products/CreateProduct/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/FieldSet/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/CheckBox/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/index.tsx",[],["525","526","527","528","529"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SectionButton/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/InputMaskd/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/index.tsx",["530","531"],"/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useField } from '@unform/core';\nimport { IconBaseProps } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    textTransform?: 'lowercase' | 'uppercase' | 'capitalize';\n    label: string;\n    labelIcon?: React.FC<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['textarea'] & Props;\n\nconst Input: React.FC<InputProps> = ({\n    name,\n    label,\n    textTransform,\n    labelIcon: LabelIcon,\n    ...rest\n}) => {\n    const inputRef = useRef<HTMLTextAreaElement>(null);\n    const {\n        fieldName,\n        defaultValue,\n        registerField,\n        error,\n        clearError,\n    } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            path: 'value',\n            ref: inputRef.current,\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container textTransform={textTransform || 'capitalize'}>\n            {label && (\n                <div>\n                    <label\n                        style={{ color: error ? '#db3b21' : '' }}\n                        htmlFor={fieldName}\n                    >\n                        {label}\n                    </label>\n                    {LabelIcon && <LabelIcon />}\n                </div>\n            )}\n            <textarea\n                id={fieldName}\n                ref={inputRef}\n                style={{ borderColor: error ? '#db3b21' : '' }}\n                defaultValue={defaultValue}\n                {...rest}\n            />\n            {error && (\n                <span style={{ color: '#db3b21', marginBottom: '2px' }}>\n                    <MdErrorOutline size={14} style={{ marginRight: '3px' }} />\n                    {error}\n                </span>\n            )}\n        </Container>\n    );\n};\nexport default Input;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/TextArea/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/index.tsx",["532"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Toggle/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Errors/PageNotFound/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/index.tsx",["533","534"],"import React from 'react';\nimport { Switch, Route, useRouteMatch, useParams } from 'react-router-dom';\n\nimport Home from './Home';\nimport CreateArtist from './CreateArtist';\n\nimport PageNotFound from '../Errors/PageNotFound';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/artists\" exact component={Home} />\n            <Route path=\"/artists/create\" exact component={CreateArtist} />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/index.tsx",["535","536","537"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ProviderCard from '../../../components/ProviderCard';\nimport AddArtistModal from '../CreateArtist';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Artistas</h1>\n                <div>\n                    <div>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/artists/create')}\n                        >\n                            Adicionar\n                        </button>\n                    </div>\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            <ClientList />\n        </Container>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/index.tsx",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-bitwise */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport * as Yup from 'yup';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport { Table } from 'react-bootstrap';\nimport { MdKeyboardArrowDown, MdKeyboardArrowRight } from 'react-icons/md';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport Select from '../../../components/UnformFields/Select';\nimport CheckBox from '../../../components/UnformFields/CheckBox';\nimport FieldSet from '../../../components/FieldSet';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport AddSkill from './AddSkills';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport { Container, CreateArtistForm, WeekScheduleContainer, DayScheduleItem, PageTitle, PageFooter, SectionButton } from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\nimport { AddSkillModal } from './AddSkills/styles';\n\ninterface ICreateProviderProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface CheckboxOption {\n    id: string;\n    value: string;\n    label: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\n\nconst CreateProvider: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const [addressInfo, setAddressInfo] = useState<IAddressapi>();\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n    const [banks, setBanks] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [showEndOfWorkDate, setShowEndOfWorkDate] = useState(false);\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>> ([]);\n    const [currentState, setCurrentState] = useState<string | null>(null);\n\n\n    const genderOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const typeOfBond = [\n        { value: 1, label: 'Eventual' },\n        { value: 2, label: 'Regime CLT' },\n        { value: 3, label: 'Salão parceiro' },\n    ];\n\n      const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    const comissionTypeOptions = [\n        {value: 1, label: 'Percentual (%)'},\n        {value: 2, label: 'Valor (R$)'}\n    ];\n\n    const checkboxCanFitIn: CheckboxOption[] = [\n        {\n            id: 'posibilitaEncaixe',\n            value: 'true',\n            label: 'Possibilita encaixe',\n        },\n    ];\n\n    const checkboxShowInschedule: CheckboxOption[] = [\n        {\n            id: 'mostrarNaAgenda',\n            value: 'true',\n            label: 'Mostrar na agenda',\n        },\n    ];\n\n    const checkboxFiredProfessional: CheckboxOption[] = [\n        {\n            id: 'profissionalDemitido',\n            value: 'true',\n            label: 'Profissional desligado',\n        },\n    ];\n\n    useEffect(() => {\n        console.log(currentUf);\n        /* setCurrentCities(brasilStatesAndCities.estados.filter(uf => uf.sigla === currentUf).map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n    }))) */\n    }, [currentUf]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n     function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        console.log(data);\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                razaoSocial: Yup.string().required(\n                    'A razão social é obrigatória!',\n                ),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Cadastro de artista</p>\n            </PageTitle>\n            <CreateArtistForm\n                id=\"form\"\n                onSubmit={handleCreateClientSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <div>\n                        <div className=\"fourFieldsGroup\">\n                            <Input name=\"nome\" label=\"Nome*\" />\n                            <Input name=\"apelido\" label=\"Apelido\" />\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF\"\n                                value={cpfMask(tipoPessoa)}\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Select\n                                label=\"Sexo\"\n                                name=\"sexo\"\n                                classNamePrefix=\"react-select\"\n                                placeholder=\"Selecione o sexo\"\n                                defaultValue={{\n                                label: 'Selecione o sexo',\n                                value: 0,\n                            }}\n                                options={genderOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"(99) 9999-9999\"\n                                name=\"telefone\"\n                                label=\"Telefone\"\n                            />\n                            <MaskedInput\n                                mask=\"(99) 9 9999-9999\"\n                                name=\"celular\"\n                                label=\"Celular\"\n                            />\n                            <Input name=\"email\" label=\"E-mail\" textTransform=\"lowercase\" />\n                            <DatePicker\n                                label=\"Data de nascimento\"\n                                name=\"dataDeNascimento\"\n                            />\n                        </div>\n                        <Select\n                            name=\"tipoDeVinculo\"\n                            label=\"Tipo de vínculo\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                            label: 'Selecione o tipo de vínculo',\n                            value: 0,\n                        }}\n                            options={typeOfBond}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div>\n                        <AvatarInput\n                            name=\"avatarImage\"\n                            label=\"Foto do artista\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Informações Complementares\">\n                    <div className=\"fourFieldsGroup\">\n                        <DatePicker\n                            label=\"Início do trabalho\"\n                            name=\"dataDeNascimento\"\n                        />\n                        <DatePicker\n                            label=\"Término do trabalho\"\n                            name=\"dataTerminoTrabalho\"\n                            disabled={!showEndOfWorkDate}\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Função\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Escolha uma função',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            name=\"funcao\"\n                            label=\"Perfil de permissões\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <MaskedInput\n                            label=\"Remuneração combinada\"\n                            mask=\"R$ 9.999,99\"\n                            name=\"value\"\n                        />\n\n                    </div>\n                    <div className=\"checkboxGroup\">\n                        <CheckBox\n                            name=\"profissionalDesligado\"\n                            label=\"Profissional desligado\"\n                            onChangeCallback={() => {\n                            formRef.current?.clearField('dataTerminoTrabalho');\n                            setShowEndOfWorkDate(!showEndOfWorkDate)\n                        }}\n                        />\n                        <CheckBox\n                            name=\"possibilitaEncaixe\"\n                            label=\"Possibilita encaixe\"\n                        />\n                        <CheckBox\n                            name=\"mostrarNaAgenda\"\n                            label=\"Mostrar na agenda\"\n                        />\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                                    if (\n                                                        RegExp(\n                                                            /^\\d{5}-\\d{3}$/g,\n                                                        ).test(event.target.value)\n                                                    ) {\n                                                        getAddressInfo(\n                                                            event.target.value,\n                                                        );\n                                                    }\n                                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input\n                                name=\"complemento\"\n                                label=\"Complemento\"\n                            />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                onChange={value => {\n                                                    setCurrentUf(value?.value);\n                                                   /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Horário de trabalho\">\n                    <AddSkill />\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Marcar todos os dias\"\n                        />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"domingo\"\n                                label=\"Domingo\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"segunda\"\n                                label=\"Segunda\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"terca\"\n                                label=\"Terça\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quarta\"\n                                label=\"Quarta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"quinta\"\n                                label=\"Quinta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sexta\"\n                                label=\"Sexta\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox\n                                name=\"sabado\"\n                                label=\"Sábado\"\n                            />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Habilidades\">\n                    <Select\n                        label=\"Filtrar por categoria\"\n                        name=\"categoria\"\n                        classNamePrefix=\"react-select\"\n                        placeholder=\"Selecione uma categoria\"\n                        defaultValue={{\n                                label: 'Selecione uma categoria',\n                                value: 0,\n                            }}\n                        options={skillsList}\n                        isSearchable={false}\n                        blurInputOnSelect\n                        openMenuOnFocus\n                    />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th> </th>\n                                <th>Nome do serviço</th>\n                                <th>Tempo de serviço</th>\n                                <th>Tipo de comissão</th>\n                                <th>\n                                    Margem de comissão\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba com pezinho</td>\n                                <td>45min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba completa</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <CheckBox\n                                        name=\"quinta\"\n                                    />\n                                </td>\n                                <td>Barba desenhada</td>\n                                <td>40min</td>\n                                <td>\n                                    <Select\n                                        name=\"tipoDeComissao\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={comissionTypeOptions[0]}\n                                        options={comissionTypeOptions}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </td>\n                                <td>\n                                    <MaskedInput name=\"valorComissão\" mask=\"R$ 9.99\" />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </CreateArtistForm>\n            <PageFooter>\n\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={handleClose}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n\n\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default CreateProvider;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/index.tsx",["567","568"],"import React, { useState } from 'react';\nimport Input from '../../../../components/UnformFields/Input';\nimport Select from '../../../../components/UnformFields/Select';\nimport { Container, AddSkillModal } from './styles';\n\nconst AddSkills: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const skillsList = [\n        { value: 1, label: 'Barba' },\n        { value: 2, label: 'Cabelo' },\n        { value: 3, label: 'Manícure e pedícure' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Repetir horários de outro profissional\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Profissionais</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <Input name=\"pesquisarHabilidade\" label=\"Pesquisar\" />\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default AddSkills;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Artist/CreateArtist/AddSkills/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/index.tsx",["569"],"import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport Home from './Home';\nimport CreateClient from './CreateClient';\nimport ClientHistory from './ClientHistory';\nimport PageNotFound from '../Errors/PageNotFound';\nimport ServiceDetails from './ClientHistory/ServiceDetails';\n\nconst Artist: React.FC = () => {\n    const { path } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path=\"/clients\" exact component={Home} />\n            <Route path=\"/clients/create\" exact component={CreateClient} />\n            <Route path=\"/clients/history\" exact component={ClientHistory} />\n            <Route\n                path=\"/clients/history/service\"\n                exact\n                component={ServiceDetails}\n            />\n            <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n    );\n};\n\nexport default Artist;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/index.tsx",["570"],"/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport ClientCard from '../../../components/ClientCard';\nimport { convertToBrasilianDateFormat } from '../../../utils/dateUtils';\nimport AddClientModal, { IFormData } from '../CreateClient';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Clients: React.FC = () => {\n    const initialData = [\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n        {\n            nome: 'Matheus da Silva',\n            dataDeNascimento: '10/10/1995',\n            sexo: 'Masculino',\n            email: 'matheus@hotmail.com',\n            numeroCPFouCNPJ: '702.415.258.85',\n            RG: '61.24.258',\n            avatarImage: '',\n            endereco: {\n                cep: '74.425.580',\n                logradouro: 'Rua Fulano',\n                numero: 's/n',\n                bairro: 'Ciclano',\n                complemento: 'quadra 10 lote 20',\n                cidade: 'Goiânia',\n                estado: 'Goiás',\n            },\n            whatsapp: '(64)992855445',\n            instagram: '',\n            twitter: '',\n            facebook: '',\n            porcentagemDescontoProdutos: '',\n            porcentagemDescontoServicos: '',\n            indocadoPor: '',\n            idArtista1: '',\n            idArtista2: '',\n            coloracaoCabelo: 'castanho',\n            tipoDePele: 'morena',\n            tipoDeUnha: '',\n        },\n    ];\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [clientsList, setClientsList] = useState<Array<IFormData>>(\n        initialData,\n    );\n\n    function searchClient(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Clientes</h1>\n                <div>\n                    <AddClientModal\n                        saveClient={clientData => {\n                            /*                             console.log(clientData);\n                             */ setClientsList([...clientsList, clientData]);\n                        }}\n                    />\n                    <div>\n                        <input onChange={searchClient} />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            <ClientList>\n                <ClientListHeader>\n                    <div>\n                        <span>Nome</span>\n                    </div>\n                    <div>\n                        <span>Telefone</span>\n                    </div>\n                    <div>\n                        <span>Sexo</span>\n                    </div>\n                    <div>\n                        <span>Data de Nascimento</span>\n                    </div>\n                    <div>\n                        <span>Ações</span>\n                    </div>\n                </ClientListHeader>\n                {clientsList.length > 0 ? (\n                    clientsList.map((client, index) => (\n                        /* Object.values(client).some(value =>\n                            value\n                                .toLocaleUpperCase()\n                                .startsWith(searchTerm.toLocaleUpperCase()),\n                        ) ? ( */\n                        <ClientCard\n                            clientIndex={index}\n                            key={index}\n                            nome={client.nome}\n                            telefone={client.whatsapp}\n                            sexo={client.sexo}\n                            deleteClient={() => {\n                                const updatedClientList = clientsList.filter(\n                                    (_, clientIndex) => clientIndex !== index,\n                                );\n\n                                setClientsList(updatedClientList);\n                            }}\n                            dataDeNascimento={convertToBrasilianDateFormat(\n                                new Date(client.dataDeNascimento),\n                            )}\n                        />\n                    ))\n                ) : (\n                    <h1>sem clientes</h1>\n                )}\n            </ClientList>\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/index.tsx",["571","572","573","574","575","576","577","578","579","580","581","582","583"],"/* eslint-disable no-useless-escape */\n/* eslint-disable camelcase */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { FaWhatsapp, FaInstagram, FaFacebook, FaTwitter } from 'react-icons/fa';\nimport { IoLogoTiktok } from 'react-icons/io5';\nimport { MdKeyboardArrowRight, MdKeyboardArrowDown } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { OptionTypeBase } from 'react-select';\nimport { cpf, cnpj } from 'cpf-cnpj-validator';\nimport FieldSet from '../../../components/FieldSet';\nimport Input from '../../../components/UnformFields/Input';\nimport MaskedInput from '../../../components/UnformFields/InputMaskd';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport brasilStatesAndCities from '../../../utils/brazilianStates.json';\nimport { cpfMask, cnpjMask } from '../../../utils/masks';\n\nimport {\n    Container,\n    CreateClientModal,\n    CreateClientForm,\n    SectionButton,\n} from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\nimport { convertToISO8601UTCDateFormat } from '../../../utils/dateUtils';\nimport apiClient from '../../../services/apiClient';\n\ninterface ICreateClientProps {\n    saveClient: (client: IFormData) => void;\n}\n\ninterface IAddress {\n    cep: string;\n    logradouro: string;\n    numero?: string;\n    bairro: string;\n    complemento: string;\n    cidade: string;\n    estado: string;\n}\n\ninterface ICNPJ {\n    razao_social: string;\n    cep: string;\n}\n\nexport interface IFormData {\n    nome: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    endereco: IAddress;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface IComboBox {\n    value: string;\n    label: string;\n}\n\nconst CreateClient: React.FC<ICreateClientProps> = ({ saveClient }) => {\n    const [show, setShow] = useState(false);\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [cnpjLoading, setCnpjLoading] = useState<boolean>(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showPreferencesContainer, setShowPreferencesContainer] = useState(\n        false,\n    );\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [currentUfAndCity, setCurrentUfAndCity] = useState({\n        uf: '',\n        city: '',\n    });\n    const [currentCity, setCurrentCity] = useState<string>();\n    const [citiesList, setCitiesList] = useState<Array<IComboBox>>();\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n        setShowAddressContainer(false);\n        setShowPreferencesContainer(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const ufsList = brasilStatesAndCities.estados.map(uf => ({\n        sigla: uf.sigla,\n        label: `${uf.sigla} - ${uf.nome}`,\n        value: uf.nome,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUfAndCity({\n                    uf: response.data.state,\n                    city: response.data.city,\n                });\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                        estado: ufsList.find(\n                            uf => uf.sigla === response.data.state,\n                        ),\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    function getCNPJInfo(cnpjNumber: string) {\n        setCnpjLoading(true);\n        apiClient\n            .get<ICNPJ>(`https://brasilapi.com.br/api/cnpj/v1/${cnpjNumber}`)\n            .then(response => {\n                formRef.current?.setFieldError('numeroCPFouCNPJ', '');\n                console.log(formRef.current?.getFieldValue('address.cep'));\n                console.log(response.data.cep);\n                formRef.current?.setData({\n                    nome: response.data.razao_social,\n                    address: {\n                        cep: 121223321,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = '';\n\n                if (error.status === 404) {\n                    errorMessage = 'CNPJ não encontrado!';\n                } else if (error.status === 400) {\n                    errorMessage = 'CNPJ inválido!';\n                } else {\n                    errorMessage = 'O preenchimento automático está offline';\n                }\n\n                formRef.current?.setData({\n                    nome: '',\n                });\n\n                formRef.current?.setFieldError('numeroCPFouCNPJ', errorMessage);\n            })\n            .finally(() => setCnpjLoading(false));\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<IFormData> = async data => {\n        data.dataDeNascimento = convertToISO8601UTCDateFormat(\n            new Date(data.dataDeNascimento),\n        );\n\n        console.log(data);\n        /*         formRef.current?.reset();\n         */ setTipoPessoa('');\n\n        try {\n            // Remove all previous errors\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                nome: Yup.string().required('O nome é obrigatório!'),\n                email: Yup.string()\n                    .email('O e-mail precisa ser válido.')\n                    .required('O email é obrigatório!'),\n                whatsapp: Yup.string().required(\n                    'O número de celular é obrigatório!',\n                ),\n                porcentagemDescontoServicos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                porcentagemDescontoProdutos: Yup.string().test(\n                    'valid',\n                    'Porcentagem inválida',\n                    valor => !valor || Number.parseInt(valor, 10) <= 100,\n                ),\n                numeroCPFouCNPJ: Yup.string()\n                    .test(\n                        'valid',\n                        'CPF/CNPJ inválido',\n                        valor =>\n                            cpf.isValid(valor || '') ||\n                            cnpj.isValid(valor || ''),\n                    )\n                    .required('CPF/CNPJ é obrigatório!'),\n                /*  sexo: Yup.string()\n                    .matches(/^(?!Selecione$)/g, 'Informe o sexo')\n                    .required('O sexo é obrigatório!'), */\n            });\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            // Validation passed\n            saveClient(data);\n        } catch (err) {\n            const validationErrors: Record<string, string> = {};\n            if (err instanceof Yup.ValidationError) {\n                err.inner.forEach(error => {\n                    validationErrors[error.path || ''] = error.message;\n                });\n                formRef?.current?.setErrors(validationErrors);\n            }\n        }\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Cliente\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                dialogClassName=\"modal-90w\"\n                backdrop=\"static\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        <p>Cadastro de Cliente</p>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <FieldSet title=\"Informações Básicas\">\n                            <div id=\"group1\">\n                                <div>\n                                    <Input\n                                        name=\"nome\"\n                                        label=\"Nome Completo/Razão Social*\"\n                                    />\n                                    <div>\n                                        <div>\n                                            <DatePicker\n                                                label=\"Data de nascimento\"\n                                                name=\"dataDeNascimento\"\n                                            />\n                                            <Select\n                                                label=\"Sexo\"\n                                                name=\"sexo\"\n                                                classNamePrefix=\"react-select\"\n                                                defaultValue={{\n                                                    label: 'Selecione',\n                                                    value: 0,\n                                                }}\n                                                options={affiliationOptions}\n                                                isSearchable={false}\n                                                blurInputOnSelect\n                                                openMenuOnFocus\n                                            />\n                                        </div>\n                                        <div>\n                                            <Input\n                                                textTransform=\"lowercase\"\n                                                name=\"email\"\n                                                label=\"E-mail*\"\n                                            />\n                                            <Input\n                                                name=\"numeroCPFouCNPJ\"\n                                                label=\"CPF/CNPJ*\"\n                                                value={\n                                                    tipoPessoa.length > 14\n                                                        ? cnpjMask(tipoPessoa)\n                                                        : cpfMask(tipoPessoa)\n                                                }\n                                                onChange={event => {\n                                                    setTipoPessoa(\n                                                        event.target.value,\n                                                    );\n                                                    if (\n                                                        RegExp(\n                                                            /\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}/g,\n                                                        ).test(\n                                                            event.target.value,\n                                                        )\n                                                    ) {\n                                                        console.log('entrou');\n                                                        getCNPJInfo(\n                                                            event.target.value.replace(\n                                                                '/',\n                                                                '',\n                                                            ),\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <MaskedInput\n                                                mask=\"99.999.999-9\"\n                                                name=\"RG\"\n                                                label=\"RG\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <AvatarInput\n                                        name=\"avatarImage\"\n                                        label=\"Foto do cliente\"\n                                    />\n                                </div>\n                            </div>\n                        </FieldSet>\n                        <FieldSet title=\"Redes Sociais\">\n                            <div id=\"group4\">\n                                <MaskedInput\n                                    mask=\"(99) 9 9999-9999\"\n                                    name=\"whatsapp\"\n                                    label=\"Whatsapp*\"\n                                    labelIcon={FaWhatsapp}\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"instagram\"\n                                    labelIcon={FaInstagram}\n                                    label=\"Instagram\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"twitter\"\n                                    labelIcon={FaTwitter}\n                                    label=\"Twitter\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"tiktok\"\n                                    labelIcon={IoLogoTiktok}\n                                    label=\"TikTok\"\n                                />\n                                <Input\n                                    textTransform=\"lowercase\"\n                                    name=\"facebook\"\n                                    labelIcon={FaFacebook}\n                                    label=\"Facebook\"\n                                />\n                            </div>\n                        </FieldSet>\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                            {showAddressContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showAddressContainer && (\n                            <FieldSet title=\"Endereço\">\n                                <Scope path=\"address\">\n                                    <div id=\"group2\">\n                                        <MaskedInput\n                                            mask=\"99999-999\"\n                                            name=\"cep\"\n                                            showLoadingIcon\n                                            loading={cepLoading}\n                                            label=\"CEP\"\n                                            disabled={cepLoading}\n                                            onChangeCallback={event => {\n                                                if (\n                                                    RegExp(\n                                                        /^\\d{5}-\\d{3}$/g,\n                                                    ).test(event.target.value)\n                                                ) {\n                                                    getAddressInfo(\n                                                        event.target.value,\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                        <Input\n                                            name=\"logradouro\"\n                                            label=\"Logradouro\"\n                                            disabled={cepLoading}\n                                        />\n                                        <Input name=\"numero\" label=\"Número\" />\n                                        <Input\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            disabled={cepLoading}\n                                        />\n                                    </div>\n                                    <div id=\"group3\">\n                                        <Input\n                                            name=\"complemento\"\n                                            label=\"Complemento\"\n                                        />\n                                        <Select\n                                            label=\"Estado\"\n                                            name=\"estado\"\n                                            classNamePrefix=\"react-select\"\n                                            /*  defaultValue={{\n                                                label: 'Selecione um estado',\n                                                value: 0,\n                                            }} */\n                                            onChange={value => {\n                                                console.log(value);\n                                                /*   setCurrentUf(\n                                                    value?.label.substring(\n                                                        0,\n                                                        2,\n                                                    ),\n                                                ); */\n                                                /*                                                 setCurrentCity(null);\n                                                 */\n                                            }}\n                                            options={ufsList}\n                                            isSearchable\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                        <Select\n                                            name=\"cidade\"\n                                            label=\"Cidade\"\n                                            isSearchable\n                                            defaultValue={{\n                                                label: 'Selecione uma cidade',\n                                                value: 0,\n                                            }}\n                                            /* disabled={cities?.length === 0} */\n                                            noOptionsMessage={() =>\n                                                /* {\n                                                console.log(\n                                                    document.querySelector(\n                                                        'div.react-select__single-value.css-1uccc91-singleValue',\n                                                    ),\n                                                ); */\n\n                                                'Sem resultados'\n                                            }\n                                            classNamePrefix=\"react-select\"\n                                            options={brasilStatesAndCities.estados\n                                                .find(\n                                                    elem =>\n                                                        elem.sigla ===\n                                                        currentUfAndCity.uf,\n                                                )\n                                                ?.cidades.map(elem => ({\n                                                    value: elem,\n                                                    label: elem,\n                                                }))}\n                                            /*  onChange={value =>\n                                                setCurrentCity(value)\n                                            }\n                                            value={\n                                                currentCity ||\n                                                (citiesList && citiesList[0])\n                                            } */\n                                            blurInputOnSelect\n                                            openMenuOnFocus\n                                        />\n                                    </div>\n                                </Scope>\n                            </FieldSet>\n                        )}\n                        <SectionButton\n                            type=\"button\"\n                            onClick={() =>\n                                setShowPreferencesContainer(\n                                    !showPreferencesContainer,\n                                )\n                            }\n                        >\n                            {showPreferencesContainer\n                                ? 'Ocultar Preferências'\n                                : 'Mostrar Preferências'}\n                            {showPreferencesContainer ? (\n                                <MdKeyboardArrowDown />\n                            ) : (\n                                <MdKeyboardArrowRight />\n                            )}\n                        </SectionButton>\n                        {showPreferencesContainer && (\n                            <FieldSet title=\"Preferências\">\n                                <div id=\"group5\">\n                                    <Input\n                                        name=\"idArtista1\"\n                                        label=\"Artista de Preferência 1\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoProdutos\"\n                                        label=\"Desconto em Produtos (0% - 100%)\"\n                                    />\n                                    <Input\n                                        name=\"indocadoPor\"\n                                        label=\"Indicado por\"\n                                    />\n                                    <Input\n                                        name=\"coloracaoCabelo\"\n                                        label=\"Coloração Cabelo\"\n                                    />\n                                </div>\n\n                                <div id=\"group6\">\n                                    <Input\n                                        name=\"idArtista2\"\n                                        label=\"Artista de Preferência 2\"\n                                    />\n                                    <MaskedInput\n                                        mask=\"999\"\n                                        name=\"porcentagemDescontoServicos\"\n                                        label=\"Desconto em Serviços (0% - 100%)\"\n                                    />\n\n                                    <Input\n                                        name=\"tipoDePele\"\n                                        label=\"Tipo de Pele\"\n                                    />\n                                    <Input\n                                        name=\"tipoDeUnha\"\n                                        label=\"Tipo de Unha\"\n                                    />\n                                </div>\n                            </FieldSet>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/Home/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/CreateClient/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/index.tsx",["584","585"],"import React, { useRef } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport AddSkills from './AddSkills';\nimport FieldSet from '../../../components/FieldSet';\n\nimport AvatarInput from '../../../components/UnformFields/AvatarInput';\nimport {\n    Container,\n    ClientHistoryContainer,\n    PageTitle,\n    CardsContainer,\n    Card,\n} from './styles';\n\nconst ClientHistory: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n    const history = useHistory();\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Histórico do Cliente</p>\n            </PageTitle>\n            <ClientHistoryContainer onSubmit={() => ''} id=\"form\" ref={formRef}>\n                <AvatarInput name=\"avatarImage\" label=\"Fulano da Silva\" />\n                <div>\n                    <CardsContainer>\n                        <Card>\n                            <p>Saldo</p>\n                            <div>R$ 50,00</div>\n                        </Card>\n                        <Card>\n                            <p>Ticket Médio</p>\n                            <div>R$195,00</div>\n                        </Card>\n                        <Card>\n                            <p>Taxa de comparecimento</p>\n                            <div>15,38 %</div>\n                        </Card>\n                        <Card>\n                            <p>Profissional querido</p>\n                            <div>Fernanda</div>\n                        </Card>\n                        <Card>\n                            <p>Dia da semana preferido</p>\n                            <div>Terça-Feira</div>\n                        </Card>\n                    </CardsContainer>\n                </div>\n                <AddSkills />\n                <FieldSet title=\"Próxima visita\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Profissional</th>\n                                <th>Duração</th>\n                                <th>Valor total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>31/03/2021</td>\n                                <td>Fernanda</td>\n                                <td>45min</td>\n                                <td>R$ 40,00</td>\n                            </tr>\n                            <tr>\n                                <td>02/04/2021</td>\n                                <td>Cleiton</td>\n                                <td>50min</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Histórico de visitas\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Data</th>\n                                <th>Horário</th>\n                                <th>Comanda</th>\n                                <th>Profissional</th>\n                                <th>Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>30/03/2021</td>\n                                <td>15:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr onClick={() => history.push('')}>\n                                <td>30/02/2021</td>\n                                <td>16:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                            <tr>\n                                <td>30/01/2021</td>\n                                <td>17:30h</td>\n                                <td>1</td>\n                                <td>Fernanda</td>\n                                <td>R$ 120,00</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </ClientHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ClientHistory;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/index.tsx",["586","587"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/AddSkills/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/index.tsx",["588","589"],"import React, { useRef } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport FieldSet from '../../../../components/FieldSet';\nimport ButtonInput from '../../../../components/UnformFields/ButtonInput';\n\nimport { Container, PageTitle, ServiceHistoryContainer } from './styles';\n\nconst ServiceDetails: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Imagens do serviço</p>\n            </PageTitle>\n            <FieldSet title=\"Antes\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n            <FieldSet title=\"Depois\" />\n            <ServiceHistoryContainer ref={formRef} onSubmit={() => ''}>\n                <ButtonInput name=\"d\" label=\"adicionar imagem\" />\n            </ServiceHistoryContainer>\n        </Container>\n    );\n};\n\nexport default ServiceDetails;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Client/ClientHistory/ServiceDetails/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/index.tsx",["590","591","592"],"/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport imagePlaceholder from '../../../assets/images/imagePlaceholder.png';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue = imagePlaceholder, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue() {\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label\n                htmlFor={fieldName}\n                className=\"fibre-button fibre-button--cancel\"\n            >\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*\"\n                    {...rest}\n                />\n                {label}\n            </label>\n        </Container>\n    );\n};\n\nexport default ImageInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/ButtonInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/index.tsx",["593","594","595"],"import React, { useRef, useState } from 'react';\nimport { SubmitHandler, FormHandles, Scope } from '@unform/core';\nimport { Table } from 'react-bootstrap';\nimport { MdDelete } from 'react-icons/md';\nimport brasilStatesAndCities from '../../utils/brazilianStates.json';\nimport FieldSet from '../../components/FieldSet';\nimport MaskedInput from '../../components/UnformFields/InputMaskd';\nimport Select from '../../components/UnformFields/Select';\nimport apiClient from '../../services/apiClient';\nimport { cpfMask, cnpjMask } from '../../utils/masks';\nimport CardOperator from './CardOperator';\nimport Expenses from './Expenses';\nimport Campaign from './Campaign';\nimport Input from '../../components/UnformFields/Input';\nimport CheckBox from '../../components/UnformFields/CheckBox';\nimport TextArea from '../../components/UnformFields/TextArea';\n\nimport {\n    Container,\n    PageTitle,\n    PageFooter,\n    CreateEstablismentForm,\n    CustomFieldSet,\n    WeekScheduleContainer,\n    DayScheduleItem,\n} from './styles';\n\nexport interface IFormData {\n    nome: string;\n    apelido: string;\n    dataDeNascimento: string;\n    sexo: string;\n    email: string;\n    numeroCPFouCNPJ: string;\n    RG?: string;\n    avatarImage?: string;\n    whatsapp: string;\n    instagram?: string;\n    twitter?: string;\n    facebook?: string;\n    porcentagemDescontoProdutos?: string;\n    porcentagemDescontoServicos?: string;\n    indocadoPor?: string;\n    idArtista1?: string;\n    idArtista2?: string;\n    coloracaoCabelo?: string;\n    tipoDePele?: string;\n    tipoDeUnha?: string;\n}\n\ninterface IAddressapi {\n    cep: string;\n    state: string;\n    city: string;\n    neighborhood: string;\n    street: string;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\nconst Establishment: React.FC = () => {\n    const handleCreateEstablishmentSubmit: SubmitHandler<IFormData> = async data => {\n        console.log(data);\n    };\n\n    const formRef = useRef<FormHandles>(null);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [cepLoading, setCepLoading] = useState<boolean>(false);\n    const [currentUf, setCurrentUf] = useState<string | undefined>();\n    const [currentCities, setCurrentCities] = useState<Array<SelectOption>>([]);\n\n    const states = brasilStatesAndCities.estados.map(elem => ({\n        value: elem.nome,\n        label: elem.nome,\n        sigla: elem.sigla,\n    }));\n\n    function getAddressInfo(cep: string) {\n        setCepLoading(true);\n        apiClient\n            .get<IAddressapi>(`https://brasilapi.com.br/api/cep/v1/${cep}`)\n            .then(response => {\n                setCurrentUf(response.data.state);\n                formRef.current?.setFieldError('address.cep', '');\n                formRef.current?.setData({\n                    address: {\n                        bairro: response.data.neighborhood,\n                        logradouro: response.data.street,\n                    },\n                });\n            })\n            .catch(error => {\n                let errorMessage = 'O preenchimento automático está offline';\n\n                if (error.status === 404) {\n                    errorMessage = 'CEP não encontrado!';\n                }\n\n                formRef.current?.setData({\n                    address: {\n                        bairro: '',\n                        logradouro: '',\n                    },\n                });\n\n                formRef.current?.setFieldError('address.cep', errorMessage);\n            })\n            .finally(() => setCepLoading(false));\n    }\n\n    return (\n        <Container>\n            <PageTitle>\n                <p>Estabelecimento</p>\n            </PageTitle>\n            <CreateEstablismentForm\n                id=\"form\"\n                onSubmit={handleCreateEstablishmentSubmit}\n                ref={formRef}\n            >\n                <FieldSet title=\"Informações Básicas\">\n                    <Input name=\"razaoSocial\" label=\"Razão social*\" />\n                    <div className=\"twoFieldsGroup\">\n                        <Input\n                            name=\"numeroCPFouCNPJ\"\n                            label=\"CPF/CNPJ*\"\n                            value={\n                                tipoPessoa.length > 14\n                                    ? cnpjMask(tipoPessoa)\n                                    : cpfMask(tipoPessoa)\n                            }\n                            onChange={e => setTipoPessoa(e.target.value)}\n                        />\n                        <Input name=\"email\" label=\"E-mail\" />\n                    </div>\n\n                    <div className=\"treeFieldsgroup\">\n                        <Input name=\"contato\" label=\"Contato\" />\n                        <MaskedInput\n                            mask=\"(99) 9999-9999\"\n                            name=\"telefone\"\n                            label=\"Telefone\"\n                        />\n                        <MaskedInput\n                            mask=\"(99) 9 9999-9999\"\n                            name=\"celular\"\n                            label=\"Celular\"\n                        />\n                    </div>\n                    <div className=\"twoFieldsGroup\">\n                        <TextArea\n                            name=\"descricao\"\n                            label=\"Descrição do estabelecimento\"\n                        />\n                        <CustomFieldSet>\n                            <MaskedInput\n                                mask=\"999%\"\n                                name=\"celular\"\n                                label=\"Valor em percentual\"\n                            />\n                            <span>\n                                É a remuneração paga pela prestação de serviços\n                                de gestão administrativa.\n                            </span>\n                        </CustomFieldSet>\n                    </div>\n                </FieldSet>\n                <FieldSet title=\"Horário de funcionamento\">\n                    <DayScheduleItem>\n                        <CheckBox\n                            name=\"sabado\"\n                            label=\"Informar um horário único\"\n                        />\n                        <p>Horário</p>\n                        <div>\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                            às\n                            <MaskedInput mask=\"99:99\" name=\"value\" />\n                        </div>\n                        <CheckBox name=\"sabado\" label=\"Marcar todos os dias\" />\n                    </DayScheduleItem>\n                    <WeekScheduleContainer>\n                        <DayScheduleItem>\n                            <CheckBox name=\"domingo\" label=\"Domingo\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"segunda\" label=\"Segunda\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"terca\" label=\"Terça\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quarta\" label=\"Quarta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"quinta\" label=\"Quinta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sexta\" label=\"Sexta\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                        <DayScheduleItem>\n                            <CheckBox name=\"sabado\" label=\"Sábado\" />\n                            <p>Horário</p>\n                            <div>\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                                às\n                                <MaskedInput mask=\"99:99\" name=\"value\" />\n                            </div>\n                        </DayScheduleItem>\n                    </WeekScheduleContainer>\n                </FieldSet>\n                <FieldSet title=\"Endereço\">\n                    <Scope path=\"address\">\n                        <div className=\"fourFieldsGroup\">\n                            <MaskedInput\n                                mask=\"99999-999\"\n                                name=\"cep\"\n                                showLoadingIcon\n                                loading={cepLoading}\n                                label=\"CEP\"\n                                disabled={cepLoading}\n                                onChangeCallback={event => {\n                                    if (\n                                        RegExp(/^\\d{5}-\\d{3}$/g).test(\n                                            event.target.value,\n                                        )\n                                    ) {\n                                        getAddressInfo(event.target.value);\n                                    }\n                                }}\n                            />\n                            <Input\n                                name=\"logradouro\"\n                                label=\"Logradouro\"\n                                disabled={cepLoading}\n                            />\n                            <Input name=\"numero\" label=\"Número\" />\n                            <Input\n                                name=\"bairro\"\n                                label=\"Bairro\"\n                                disabled={cepLoading}\n                            />\n                        </div>\n                        <div className=\"treeFieldsgroup\">\n                            <Input name=\"complemento\" label=\"Complemento\" />\n                            <Select\n                                label=\"Estado\"\n                                name=\"estado\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                onChange={value => {\n                                    setCurrentUf(value?.value);\n                                    /*  formRef.current?.clearField(\n                                                        'address.cidade',\n                                                    ); */\n                                }}\n                                options={states}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                            <Select\n                                name=\"cidade\"\n                                label=\"Cidade\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={{\n                                    label: 'Selecione',\n                                    value: 0,\n                                }}\n                                options={currentCities}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                    </Scope>\n                </FieldSet>\n                <FieldSet title=\"Operação com cartão\">\n                    <CardOperator />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Administradora</th>\n                                <th>Bandeira</th>\n                                <th>Operação</th>\n                                <th>Taxa (%) </th>\n                                <th>Taxa de antecipação (%)</th>\n                                <th>Qtd dias a compensar</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Cielo</td>\n                                <td>Mastercard</td>\n                                <td>Crédito</td>\n                                <td>10%</td>\n                                <td>10%</td>\n                                <td>30</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Despesas fixas\">\n                    <Expenses />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor (R$)</th>\n                                <th>Vencimento</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Aluguel</td>\n                                <td>800,00</td>\n                                <td>Dia 5</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Energia</td>\n                                <td>350,00</td>\n                                <td>Dia 12</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Água</td>\n                                <td>200,00</td>\n                                <td>Dia 10</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n                <FieldSet title=\"Campanhas ativas\">\n                    <Campaign />\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Data inicial</th>\n                                <th>Data final</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Combo cabelo e unhas</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo barba e cabelo</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Combo esfoliação</td>\n                                <td>15/04/2021</td>\n                                <td>30/04/2021</td>\n                                <td>\n                                    <MdDelete onClick={() => ''} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </FieldSet>\n            </CreateEstablismentForm>\n            <PageFooter>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"button\"\n                    onClick={() => ''}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"fibre-button fibre-button--cancel\"\n                    type=\"submit\"\n                    form=\"form\"\n                >\n                    Salvar\n                </button>\n            </PageFooter>\n        </Container>\n    );\n};\n\nexport default Establishment;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/index.tsx",["596"],"import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst CardOperator: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    const admOptions = [\n        { value: 1, label: 'Cielo' },\n        { value: 2, label: 'Stone' },\n        { value: 3, label: 'Pagseguro' },\n        { value: 4, label: 'GetNet' },\n        { value: 5, label: 'Rede' },\n        { value: 6, label: 'Safra' },\n    ];\n\n    const brandOptions = [\n        { value: 1, label: 'Amex' },\n        { value: 2, label: 'Elo' },\n        { value: 3, label: 'Hiper' },\n        { value: 4, label: 'Mastercard' },\n        { value: 5, label: 'Safra' },\n        { value: 6, label: 'Visa' },\n    ];\n\n    const cardTransactions = [\n        { value: 1, label: 'Crédito' },\n        { value: 2, label: 'Débito' },\n    ];\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar operadora\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de taxas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Select\n                            label=\"Administradora\"\n                            name=\"administradora\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={admOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Bandeira\"\n                            name=\"bandeira\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={brandOptions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                        <Select\n                            label=\"Operação\"\n                            name=\"operacao\"\n                            classNamePrefix=\"react-select\"\n                            defaultValue={{\n                                label: 'Selecione',\n                                value: 0,\n                            }}\n                            options={cardTransactions}\n                            isSearchable={false}\n                            blurInputOnSelect\n                            openMenuOnFocus\n                        />\n                    </div>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa da operação\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Taxa de antecipação de crédito\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Qtde dias a compensar\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default CardOperator;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/CardOperator/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/index.tsx",["597","598"],"import React, { useState } from 'react';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { Container, AddSkillModal } from './styles';\n\nconst Expenses: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Adicionar despesa\n            </button>\n            <AddSkillModal\n                show={show}\n                onHide={handleClose}\n                size=\"lg\"\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n            >\n                <AddSkillModal.Header>\n                    <AddSkillModal.Title>\n                        <p>Inclusão de despesas</p>\n                    </AddSkillModal.Title>\n                </AddSkillModal.Header>\n                <AddSkillModal.Body>\n                    <div className=\"treeFieldsgroup\">\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Nome da despesa\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Valor\"\n                        />\n                        <Input\n                            textTransform=\"lowercase\"\n                            name=\"email\"\n                            label=\"Dia do vencimento\"\n                        />\n                    </div>\n                </AddSkillModal.Body>\n                <AddSkillModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                    >\n                        Confirmar\n                    </button>\n                </AddSkillModal.Footer>\n            </AddSkillModal>\n        </Container>\n    );\n};\n\nexport default Expenses;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Expenses/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/index.tsx",["599","600","601"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Establishment/Campaign/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/index.tsx",["602","603"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n    ChangeEvent,\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n} from 'react';\n\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface Props {\n    name: string;\n    label?: string;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst FileInput: React.FC<InputProps> = ({ name, label, ...rest }) => {\n     const inputRef = useRef<HTMLInputElement>(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [selectedFile, setSelectedFile] = useState<File | null>();\n\n    const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n\n        if(file) {\n            setSelectedFile(file);\n        } else {\n            setSelectedFile(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'files[0]',\n            clearValue(ref: HTMLInputElement) {\n                ref.value = '';\n                setSelectedFile(null);\n            }\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            <label htmlFor={fieldName}>\n                {label && <p>{label}</p>}\n                {selectedFile && (selectedFile.type.includes('image') ? (\n                    <img\n                        src={URL.createObjectURL(selectedFile)}\n                        alt=\"imagem\"\n                    />\n                ) : (\n                    <video\n                        id=\"video\"\n                        src={URL.createObjectURL(selectedFile)}\n                        controls\n                    />\n                ))}\n                <input\n                    type=\"file\"\n                    id={fieldName}\n                    ref={inputRef}\n                    onChange={handlePreview}\n                    accept=\"image/*, video/*\"\n                    {...rest}\n                />\n            </label>\n        </Container>\n    );\n};\n\nexport default FileInput;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/VideoInput/styles.ts",[],{"ruleId":"604","replacedBy":"605"},{"ruleId":"606","replacedBy":"607"},{"ruleId":"608","replacedBy":"609"},{"ruleId":"610","replacedBy":"611"},{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","severity":1,"message":"615","line":35,"column":9,"nodeType":"616","messageId":"617","endLine":35,"endColumn":19},{"ruleId":"614","severity":1,"message":"618","line":2,"column":8,"nodeType":"616","messageId":"617","endLine":2,"endColumn":20},{"ruleId":"614","severity":1,"message":"619","line":8,"column":5,"nodeType":"616","messageId":"617","endLine":8,"endColumn":15},{"ruleId":"614","severity":1,"message":"620","line":9,"column":5,"nodeType":"616","messageId":"617","endLine":9,"endColumn":21},{"ruleId":"614","severity":1,"message":"621","line":12,"column":5,"nodeType":"616","messageId":"617","endLine":12,"endColumn":20},{"ruleId":"614","severity":1,"message":"622","line":13,"column":5,"nodeType":"616","messageId":"617","endLine":13,"endColumn":18},{"ruleId":"614","severity":1,"message":"623","line":29,"column":10,"nodeType":"616","messageId":"617","endLine":29,"endColumn":14},{"ruleId":"614","severity":1,"message":"624","line":119,"column":14,"nodeType":"616","messageId":"617","endLine":119,"endColumn":24},{"ruleId":"614","severity":1,"message":"625","line":123,"column":14,"nodeType":"616","messageId":"617","endLine":123,"endColumn":28},{"ruleId":"614","severity":1,"message":"626","line":1,"column":17,"nodeType":"616","messageId":"617","endLine":1,"endColumn":26},{"ruleId":"614","severity":1,"message":"627","line":8,"column":8,"nodeType":"616","messageId":"617","endLine":8,"endColumn":16},{"ruleId":"614","severity":1,"message":"628","line":38,"column":11,"nodeType":"616","messageId":"617","endLine":38,"endColumn":27},{"ruleId":"614","severity":1,"message":"629","line":58,"column":11,"nodeType":"616","messageId":"617","endLine":58,"endColumn":57},{"ruleId":"614","severity":1,"message":"630","line":62,"column":11,"nodeType":"616","messageId":"617","endLine":62,"endColumn":45},{"ruleId":"614","severity":1,"message":"631","line":70,"column":11,"nodeType":"616","messageId":"617","endLine":70,"endColumn":50},{"ruleId":"632","severity":1,"message":"633","line":109,"column":9,"nodeType":"634","messageId":"635","endLine":109,"endColumn":20},{"ruleId":"614","severity":1,"message":"636","line":3,"column":8,"nodeType":"616","messageId":"617","endLine":3,"endColumn":17},{"ruleId":"614","severity":1,"message":"637","line":4,"column":8,"nodeType":"616","messageId":"617","endLine":4,"endColumn":12},{"ruleId":"614","severity":1,"message":"638","line":4,"column":35,"nodeType":"616","messageId":"617","endLine":4,"endColumn":44},{"ruleId":"614","severity":1,"message":"639","line":24,"column":10,"nodeType":"616","messageId":"617","endLine":24,"endColumn":39},{"ruleId":"614","severity":1,"message":"640","line":27,"column":11,"nodeType":"616","messageId":"617","endLine":27,"endColumn":31},{"ruleId":"614","severity":1,"message":"641","line":72,"column":11,"nodeType":"616","messageId":"617","endLine":72,"endColumn":19},{"ruleId":"614","severity":1,"message":"642","line":81,"column":12,"nodeType":"616","messageId":"617","endLine":81,"endColumn":23},{"ruleId":"614","severity":1,"message":"643","line":81,"column":25,"nodeType":"616","messageId":"617","endLine":81,"endColumn":39},{"ruleId":"614","severity":1,"message":"644","line":84,"column":12,"nodeType":"616","messageId":"617","endLine":84,"endColumn":36},{"ruleId":"614","severity":1,"message":"645","line":84,"column":38,"nodeType":"616","messageId":"617","endLine":84,"endColumn":65},{"ruleId":"614","severity":1,"message":"646","line":89,"column":12,"nodeType":"616","messageId":"617","endLine":89,"endColumn":23},{"ruleId":"614","severity":1,"message":"647","line":89,"column":25,"nodeType":"616","messageId":"617","endLine":89,"endColumn":39},{"ruleId":"614","severity":1,"message":"648","line":90,"column":12,"nodeType":"616","messageId":"617","endLine":90,"endColumn":21},{"ruleId":"614","severity":1,"message":"649","line":90,"column":23,"nodeType":"616","messageId":"617","endLine":90,"endColumn":35},{"ruleId":"614","severity":1,"message":"650","line":91,"column":12,"nodeType":"616","messageId":"617","endLine":91,"endColumn":20},{"ruleId":"614","severity":1,"message":"651","line":91,"column":22,"nodeType":"616","messageId":"617","endLine":91,"endColumn":33},{"ruleId":"614","severity":1,"message":"652","line":92,"column":12,"nodeType":"616","messageId":"617","endLine":92,"endColumn":17},{"ruleId":"614","severity":1,"message":"653","line":92,"column":19,"nodeType":"616","messageId":"617","endLine":92,"endColumn":27},{"ruleId":"614","severity":1,"message":"654","line":96,"column":11,"nodeType":"616","messageId":"617","endLine":96,"endColumn":29},{"ruleId":"614","severity":1,"message":"655","line":2,"column":10,"nodeType":"616","messageId":"617","endLine":2,"endColumn":24},{"ruleId":"614","severity":1,"message":"656","line":3,"column":10,"nodeType":"616","messageId":"617","endLine":3,"endColumn":16},{"ruleId":"614","severity":1,"message":"657","line":4,"column":8,"nodeType":"616","messageId":"617","endLine":4,"endColumn":14},{"ruleId":"614","severity":1,"message":"658","line":5,"column":30,"nodeType":"616","messageId":"617","endLine":5,"endColumn":37},{"ruleId":"614","severity":1,"message":"659","line":8,"column":8,"nodeType":"616","messageId":"617","endLine":8,"endColumn":23},{"ruleId":"614","severity":1,"message":"660","line":9,"column":35,"nodeType":"616","messageId":"617","endLine":9,"endColumn":50},{"ruleId":"614","severity":1,"message":"661","line":22,"column":58,"nodeType":"616","messageId":"617","endLine":22,"endColumn":63},{"ruleId":"662","severity":1,"message":"663","line":31,"column":31,"nodeType":"664","messageId":"665","endLine":31,"endColumn":34,"suggestions":"666"},{"ruleId":"614","severity":1,"message":"638","line":1,"column":17,"nodeType":"616","messageId":"617","endLine":1,"endColumn":26},{"ruleId":"614","severity":1,"message":"667","line":2,"column":18,"nodeType":"616","messageId":"617","endLine":2,"endColumn":25},{"ruleId":"614","severity":1,"message":"661","line":25,"column":72,"nodeType":"616","messageId":"617","endLine":25,"endColumn":77},{"ruleId":"662","severity":1,"message":"663","line":38,"column":27,"nodeType":"664","messageId":"665","endLine":38,"endColumn":30,"suggestions":"668"},{"ruleId":"662","severity":1,"message":"663","line":41,"column":29,"nodeType":"664","messageId":"665","endLine":41,"endColumn":32,"suggestions":"669"},{"ruleId":"604","replacedBy":"670"},{"ruleId":"606","replacedBy":"671"},{"ruleId":"608","replacedBy":"672"},{"ruleId":"610","replacedBy":"673"},{"ruleId":"612","replacedBy":"674"},{"ruleId":"614","severity":1,"message":"618","line":2,"column":8,"nodeType":"616","messageId":"617","endLine":2,"endColumn":20},{"ruleId":"614","severity":1,"message":"619","line":8,"column":5,"nodeType":"616","messageId":"617","endLine":8,"endColumn":15},{"ruleId":"614","severity":1,"message":"620","line":9,"column":5,"nodeType":"616","messageId":"617","endLine":9,"endColumn":21},{"ruleId":"614","severity":1,"message":"675","line":5,"column":10,"nodeType":"616","messageId":"617","endLine":5,"endColumn":31},{"ruleId":"614","severity":1,"message":"627","line":7,"column":8,"nodeType":"616","messageId":"617","endLine":7,"endColumn":16},{"ruleId":"614","severity":1,"message":"676","line":27,"column":12,"nodeType":"616","messageId":"617","endLine":27,"endColumn":33},{"ruleId":"614","severity":1,"message":"677","line":27,"column":35,"nodeType":"616","messageId":"617","endLine":27,"endColumn":59},{"ruleId":"614","severity":1,"message":"678","line":28,"column":12,"nodeType":"616","messageId":"617","endLine":28,"endColumn":35},{"ruleId":"614","severity":1,"message":"679","line":28,"column":37,"nodeType":"616","messageId":"617","endLine":28,"endColumn":63},{"ruleId":"614","severity":1,"message":"628","line":44,"column":11,"nodeType":"616","messageId":"617","endLine":44,"endColumn":27},{"ruleId":"614","severity":1,"message":"680","line":59,"column":11,"nodeType":"616","messageId":"617","endLine":59,"endColumn":56},{"ruleId":"614","severity":1,"message":"681","line":67,"column":11,"nodeType":"616","messageId":"617","endLine":67,"endColumn":50},{"ruleId":"614","severity":1,"message":"682","line":75,"column":11,"nodeType":"616","messageId":"617","endLine":75,"endColumn":51},{"ruleId":"614","severity":1,"message":"683","line":83,"column":11,"nodeType":"616","messageId":"617","endLine":83,"endColumn":57},{"ruleId":"632","severity":1,"message":"633","line":121,"column":9,"nodeType":"634","messageId":"635","endLine":121,"endColumn":20},{"ruleId":"604","replacedBy":"684"},{"ruleId":"606","replacedBy":"685"},{"ruleId":"608","replacedBy":"686"},{"ruleId":"610","replacedBy":"687"},{"ruleId":"612","replacedBy":"688"},{"ruleId":"614","severity":1,"message":"689","line":3,"column":36,"nodeType":"616","messageId":"617","endLine":3,"endColumn":44},{"ruleId":"614","severity":1,"message":"615","line":31,"column":9,"nodeType":"616","messageId":"617","endLine":31,"endColumn":19},{"ruleId":"632","severity":1,"message":"633","line":12,"column":33,"nodeType":"634","messageId":"635","endLine":12,"endColumn":44},{"ruleId":"614","severity":1,"message":"690","line":2,"column":40,"nodeType":"616","messageId":"617","endLine":2,"endColumn":49},{"ruleId":"614","severity":1,"message":"691","line":10,"column":13,"nodeType":"616","messageId":"617","endLine":10,"endColumn":17},{"ruleId":"614","severity":1,"message":"618","line":4,"column":8,"nodeType":"616","messageId":"617","endLine":4,"endColumn":20},{"ruleId":"614","severity":1,"message":"692","line":5,"column":8,"nodeType":"616","messageId":"617","endLine":5,"endColumn":22},{"ruleId":"614","severity":1,"message":"620","line":11,"column":5,"nodeType":"616","messageId":"617","endLine":11,"endColumn":21},{"ruleId":"614","severity":1,"message":"693","line":12,"column":10,"nodeType":"616","messageId":"617","endLine":12,"endColumn":29},{"ruleId":"614","severity":1,"message":"694","line":12,"column":31,"nodeType":"616","messageId":"617","endLine":12,"endColumn":51},{"ruleId":"614","severity":1,"message":"695","line":22,"column":19,"nodeType":"616","messageId":"617","endLine":22,"endColumn":27},{"ruleId":"614","severity":1,"message":"696","line":24,"column":102,"nodeType":"616","messageId":"617","endLine":24,"endColumn":115},{"ruleId":"614","severity":1,"message":"639","line":27,"column":10,"nodeType":"616","messageId":"617","endLine":27,"endColumn":39},{"ruleId":"614","severity":1,"message":"697","line":29,"column":10,"nodeType":"616","messageId":"617","endLine":29,"endColumn":23},{"ruleId":"614","severity":1,"message":"640","line":31,"column":11,"nodeType":"616","messageId":"617","endLine":31,"endColumn":31},{"ruleId":"614","severity":1,"message":"698","line":89,"column":12,"nodeType":"616","messageId":"617","endLine":89,"endColumn":16},{"ruleId":"614","severity":1,"message":"642","line":90,"column":12,"nodeType":"616","messageId":"617","endLine":90,"endColumn":23},{"ruleId":"614","severity":1,"message":"643","line":90,"column":25,"nodeType":"616","messageId":"617","endLine":90,"endColumn":39},{"ruleId":"614","severity":1,"message":"644","line":92,"column":12,"nodeType":"616","messageId":"617","endLine":92,"endColumn":36},{"ruleId":"614","severity":1,"message":"645","line":92,"column":38,"nodeType":"616","messageId":"617","endLine":92,"endColumn":65},{"ruleId":"614","severity":1,"message":"699","line":96,"column":12,"nodeType":"616","messageId":"617","endLine":96,"endColumn":32},{"ruleId":"614","severity":1,"message":"700","line":96,"column":34,"nodeType":"616","messageId":"617","endLine":96,"endColumn":57},{"ruleId":"614","severity":1,"message":"646","line":98,"column":12,"nodeType":"616","messageId":"617","endLine":98,"endColumn":23},{"ruleId":"614","severity":1,"message":"647","line":98,"column":25,"nodeType":"616","messageId":"617","endLine":98,"endColumn":39},{"ruleId":"614","severity":1,"message":"648","line":99,"column":12,"nodeType":"616","messageId":"617","endLine":99,"endColumn":21},{"ruleId":"614","severity":1,"message":"649","line":99,"column":23,"nodeType":"616","messageId":"617","endLine":99,"endColumn":35},{"ruleId":"614","severity":1,"message":"652","line":100,"column":12,"nodeType":"616","messageId":"617","endLine":100,"endColumn":17},{"ruleId":"614","severity":1,"message":"653","line":100,"column":19,"nodeType":"616","messageId":"617","endLine":100,"endColumn":27},{"ruleId":"614","severity":1,"message":"701","line":103,"column":27,"nodeType":"616","messageId":"617","endLine":103,"endColumn":43},{"ruleId":"614","severity":1,"message":"702","line":104,"column":12,"nodeType":"616","messageId":"617","endLine":104,"endColumn":24},{"ruleId":"614","severity":1,"message":"703","line":104,"column":26,"nodeType":"616","messageId":"617","endLine":104,"endColumn":41},{"ruleId":"614","severity":1,"message":"630","line":129,"column":11,"nodeType":"616","messageId":"617","endLine":129,"endColumn":45},{"ruleId":"614","severity":1,"message":"704","line":137,"column":11,"nodeType":"616","messageId":"617","endLine":137,"endColumn":51},{"ruleId":"614","severity":1,"message":"705","line":145,"column":11,"nodeType":"616","messageId":"617","endLine":145,"endColumn":54},{"ruleId":"632","severity":1,"message":"633","line":154,"column":9,"nodeType":"634","messageId":"635","endLine":154,"endColumn":20},{"ruleId":"614","severity":1,"message":"706","line":172,"column":14,"nodeType":"616","messageId":"617","endLine":172,"endColumn":24},{"ruleId":"632","severity":1,"message":"633","line":213,"column":9,"nodeType":"634","messageId":"635","endLine":213,"endColumn":20},{"ruleId":"614","severity":1,"message":"707","line":3,"column":8,"nodeType":"616","messageId":"617","endLine":3,"endColumn":14},{"ruleId":"614","severity":1,"message":"708","line":9,"column":11,"nodeType":"616","messageId":"617","endLine":9,"endColumn":21},{"ruleId":"614","severity":1,"message":"691","line":11,"column":13,"nodeType":"616","messageId":"617","endLine":11,"endColumn":17},{"ruleId":"614","severity":1,"message":"709","line":140,"column":12,"nodeType":"616","messageId":"617","endLine":140,"endColumn":22},{"ruleId":"614","severity":1,"message":"638","line":5,"column":35,"nodeType":"616","messageId":"617","endLine":5,"endColumn":44},{"ruleId":"614","severity":1,"message":"710","line":11,"column":10,"nodeType":"616","messageId":"617","endLine":11,"endColumn":15},{"ruleId":"614","severity":1,"message":"711","line":12,"column":10,"nodeType":"616","messageId":"617","endLine":12,"endColumn":24},{"ruleId":"614","severity":1,"message":"712","line":92,"column":12,"nodeType":"616","messageId":"617","endLine":92,"endColumn":23},{"ruleId":"614","severity":1,"message":"713","line":103,"column":12,"nodeType":"616","messageId":"617","endLine":103,"endColumn":23},{"ruleId":"614","severity":1,"message":"714","line":103,"column":25,"nodeType":"616","messageId":"617","endLine":103,"endColumn":39},{"ruleId":"614","severity":1,"message":"715","line":104,"column":12,"nodeType":"616","messageId":"617","endLine":104,"endColumn":22},{"ruleId":"614","severity":1,"message":"716","line":104,"column":24,"nodeType":"616","messageId":"617","endLine":104,"endColumn":37},{"ruleId":"632","severity":1,"message":"633","line":172,"column":17,"nodeType":"634","messageId":"635","endLine":172,"endColumn":28},{"ruleId":"632","severity":1,"message":"633","line":173,"column":17,"nodeType":"634","messageId":"635","endLine":173,"endColumn":28},{"ruleId":"632","severity":1,"message":"633","line":206,"column":9,"nodeType":"634","messageId":"635","endLine":206,"endColumn":20},{"ruleId":"632","severity":1,"message":"633","line":339,"column":57,"nodeType":"634","messageId":"635","endLine":339,"endColumn":68},{"ruleId":"632","severity":1,"message":"633","line":463,"column":49,"nodeType":"634","messageId":"635","endLine":463,"endColumn":60},{"ruleId":"614","severity":1,"message":"717","line":4,"column":10,"nodeType":"616","messageId":"617","endLine":4,"endColumn":23},{"ruleId":"614","severity":1,"message":"718","line":4,"column":38,"nodeType":"616","messageId":"617","endLine":4,"endColumn":43},{"ruleId":"614","severity":1,"message":"707","line":3,"column":8,"nodeType":"616","messageId":"617","endLine":3,"endColumn":14},{"ruleId":"614","severity":1,"message":"708","line":9,"column":11,"nodeType":"616","messageId":"617","endLine":9,"endColumn":21},{"ruleId":"614","severity":1,"message":"717","line":2,"column":10,"nodeType":"616","messageId":"617","endLine":2,"endColumn":23},{"ruleId":"614","severity":1,"message":"718","line":2,"column":38,"nodeType":"616","messageId":"617","endLine":2,"endColumn":43},{"ruleId":"614","severity":1,"message":"719","line":25,"column":39,"nodeType":"616","messageId":"617","endLine":25,"endColumn":51},{"ruleId":"614","severity":1,"message":"661","line":25,"column":72,"nodeType":"616","messageId":"617","endLine":25,"endColumn":77},{"ruleId":"614","severity":1,"message":"720","line":26,"column":12,"nodeType":"616","messageId":"617","endLine":26,"endColumn":24},{"ruleId":"632","severity":1,"message":"633","line":65,"column":9,"nodeType":"634","messageId":"635","endLine":65,"endColumn":20},{"ruleId":"614","severity":1,"message":"721","line":71,"column":12,"nodeType":"616","messageId":"617","endLine":71,"endColumn":21},{"ruleId":"614","severity":1,"message":"701","line":72,"column":27,"nodeType":"616","messageId":"617","endLine":72,"endColumn":43},{"ruleId":"614","severity":1,"message":"722","line":4,"column":8,"nodeType":"616","messageId":"617","endLine":4,"endColumn":18},{"ruleId":"614","severity":1,"message":"707","line":3,"column":8,"nodeType":"616","messageId":"617","endLine":3,"endColumn":14},{"ruleId":"614","severity":1,"message":"722","line":4,"column":8,"nodeType":"616","messageId":"617","endLine":4,"endColumn":18},{"ruleId":"614","severity":1,"message":"723","line":20,"column":14,"nodeType":"616","messageId":"617","endLine":20,"endColumn":45},{"ruleId":"614","severity":1,"message":"724","line":21,"column":9,"nodeType":"616","messageId":"617","endLine":21,"endColumn":60},{"ruleId":"614","severity":1,"message":"725","line":23,"column":15,"nodeType":"616","messageId":"617","endLine":23,"endColumn":23},{"ruleId":"614","severity":1,"message":"719","line":26,"column":39,"nodeType":"616","messageId":"617","endLine":26,"endColumn":51},{"ruleId":"614","severity":1,"message":"661","line":26,"column":53,"nodeType":"616","messageId":"617","endLine":26,"endColumn":58},"lines-around-directive",["726"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'clearError' is assigned a value but never used.","Identifier","unusedVar","'ProviderCard' is defined but never used.","'ClientList' is defined but never used.","'ClientListHeader' is defined but never used.","'MdArrowDownward' is defined but never used.","'MdArrowUpward' is defined but never used.","'Link' is defined but never used.","'searchItem' is defined but never used.","'searchSubItens' is defined but never used.","'ClassType' is defined but never used.","'CheckBox' is defined but never used.","'comissionOptions' is assigned a value but never used.","'checkboxOnlineScheduleptions' is assigned a value but never used.","'checkboxCanFitIn' is assigned a value but never used.","'checkboxDiferentPrice' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'PropTypes' is defined but never used.","'dark' is defined but never used.","'useEffect' is defined but never used.","'convertToISO8601UTCDateFormat' is defined but never used.","'ICreateProviderProps' is defined but never used.","'IBankapi' is defined but never used.","'addressInfo' is assigned a value but never used.","'setAddressInfo' is assigned a value but never used.","'showPreferencesContainer' is assigned a value but never used.","'setShowPreferencesContainer' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'cepNumber' is assigned a value but never used.","'setCepNumber' is assigned a value but never used.","'rgNumber' is assigned a value but never used.","'setRgNumber' is assigned a value but never used.","'banks' is assigned a value but never used.","'setBanks' is assigned a value but never used.","'affiliationOptions' is assigned a value but never used.","'BsPeopleCircle' is defined but never used.","'MdMenu' is defined but never used.","'Toggle' is defined but never used.","'Welcome' is defined but never used.","'MaskedTextInput' is defined but never used.","'ReactInputProps' is defined but never used.","'error' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["727","728"],"'lighten' is defined but never used.",["729","730"],["731","732"],["726"],[],[],[],[],"'brazilianCurrencyMask' is defined but never used.","'showDiscountContainer' is assigned a value but never used.","'setShowDiscountContainer' is assigned a value but never used.","'showCommissionContainer' is assigned a value but never used.","'setShowCommissionContainer' is assigned a value but never used.","'checkboxProfessionalOptions' is assigned a value but never used.","'checkboxClientOptions' is assigned a value but never used.","'checkboxProductForSale' is assigned a value but never used.","'checkboxProductForConsuption' is assigned a value but never used.",["726"],[],[],[],[],"'useState' is defined but never used.","'useParams' is defined but never used.","'path' is assigned a value but never used.","'AddArtistModal' is defined but never used.","'MdKeyboardArrowDown' is defined but never used.","'MdKeyboardArrowRight' is defined but never used.","'cnpjMask' is defined but never used.","'SectionButton' is defined but never used.","'AddSkillModal' is defined but never used.","'show' is assigned a value but never used.","'showAddressContainer' is assigned a value but never used.","'setShowAddressContainer' is assigned a value but never used.","'setCurrentCities' is assigned a value but never used.","'currentState' is assigned a value but never used.","'setCurrentState' is assigned a value but never used.","'checkboxShowInschedule' is assigned a value but never used.","'checkboxFiredProfessional' is assigned a value but never used.","'handleShow' is defined but never used.","'Select' is defined but never used.","'skillsList' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'toast' is defined but never used.","'OptionTypeBase' is defined but never used.","'cnpjLoading' is assigned a value but never used.","'currentCity' is assigned a value but never used.","'setCurrentCity' is assigned a value but never used.","'citiesList' is assigned a value but never used.","'setCitiesList' is assigned a value but never used.","'SubmitHandler' is defined but never used.","'Scope' is defined but never used.","'defaultValue' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'currentUf' is assigned a value but never used.","'DatePicker' is defined but never used.","'handleCreateSSHKeySubmitWithKey' is defined but never used.","'uploadedSSHKey' is defined but never used.","'formData' is assigned a value but never used.","padding-line-between-statements",{"messageId":"733","fix":"734","desc":"735"},{"messageId":"736","fix":"737","desc":"738"},{"messageId":"733","fix":"739","desc":"735"},{"messageId":"736","fix":"740","desc":"738"},{"messageId":"733","fix":"741","desc":"735"},{"messageId":"736","fix":"742","desc":"738"},"suggestUnknown",{"range":"743","text":"744"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"743","text":"745"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"746","text":"744"},{"range":"746","text":"745"},{"range":"747","text":"744"},{"range":"747","text":"745"},[1131,1134],"unknown","never",[1155,1158],[1262,1265]]