[{"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts":"1","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx":"2","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx":"3","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/CreateClient/index.tsx":"4","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts":"5","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts":"6","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx":"7","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts":"8","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx":"9","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx":"10","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx":"11","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx":"12","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/styles.ts":"13","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx":"14","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts":"15","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts":"16","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts":"17","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx":"18","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts":"19","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx":"20","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx":"21","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/styles.ts":"22","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx":"23","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts":"24","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx":"25","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx":"26","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts":"27","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx":"28","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx":"29","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/index.tsx":"30","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts":"31","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts":"32","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts":"33","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/styles.ts":"34","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts":"35","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx":"36","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx":"37","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx":"38","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx":"39","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx":"40","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx":"41","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx":"42","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts":"43","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/CreateClient/styles.ts":"44","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts":"45","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts":"46","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts":"47","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts":"48","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx":"49","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts":"50","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts":"51"},{"size":298,"mtime":1611074008512,"results":"52","hashOfConfig":"53"},{"size":240,"mtime":1611113854290,"results":"54","hashOfConfig":"53"},{"size":186,"mtime":1611091145399,"results":"55","hashOfConfig":"53"},{"size":9473,"mtime":1611983129349,"results":"56","hashOfConfig":"53"},{"size":633,"mtime":1611122333398,"results":"57","hashOfConfig":"53"},{"size":1854,"mtime":1611982014523,"results":"58","hashOfConfig":"53"},{"size":1042,"mtime":1611693083219,"results":"59","hashOfConfig":"53"},{"size":437,"mtime":1611980804681,"results":"60","hashOfConfig":"53"},{"size":147,"mtime":1611955773365,"results":"61","hashOfConfig":"53"},{"size":879,"mtime":1611724992555,"results":"62","hashOfConfig":"53"},{"size":3533,"mtime":1611115585188,"results":"63","hashOfConfig":"53"},{"size":2912,"mtime":1611725070219,"results":"64","hashOfConfig":"53"},{"size":1353,"mtime":1611717461332,"results":"65","hashOfConfig":"53"},{"size":2034,"mtime":1611708232309,"results":"66","hashOfConfig":"53"},{"size":813,"mtime":1611119259360,"results":"67","hashOfConfig":"53"},{"size":635,"mtime":1611094032908,"results":"68","hashOfConfig":"53"},{"size":3178,"mtime":1611971474544,"results":"69","hashOfConfig":"53"},{"size":1529,"mtime":1611978743106,"results":"70","hashOfConfig":"53"},{"size":395,"mtime":1611980824805,"results":"71","hashOfConfig":"53"},{"size":395,"mtime":1611091153619,"results":"72","hashOfConfig":"53"},{"size":2907,"mtime":1611723797652,"results":"73","hashOfConfig":"53"},{"size":1353,"mtime":1611724445708,"results":"74","hashOfConfig":"53"},{"size":5165,"mtime":1611748944969,"results":"75","hashOfConfig":"53"},{"size":1378,"mtime":1611708217692,"results":"76","hashOfConfig":"53"},{"size":1815,"mtime":1611709794311,"results":"77","hashOfConfig":"53"},{"size":389,"mtime":1612053021716,"results":"78","hashOfConfig":"53"},{"size":1587,"mtime":1611977566762,"results":"79","hashOfConfig":"53"},{"size":716,"mtime":1611092750058,"results":"80","hashOfConfig":"53"},{"size":169,"mtime":1611062486761,"results":"81","hashOfConfig":"53"},{"size":3830,"mtime":1611952431146,"results":"82","hashOfConfig":"53"},{"size":80,"mtime":1611059416740,"results":"83","hashOfConfig":"53"},{"size":80,"mtime":1611060067350,"results":"84","hashOfConfig":"53"},{"size":938,"mtime":1611112477862,"results":"85","hashOfConfig":"53"},{"size":1353,"mtime":1611723579075,"results":"86","hashOfConfig":"53"},{"size":193,"mtime":1611708394750,"results":"87","hashOfConfig":"53"},{"size":567,"mtime":1611093915619,"results":"88","hashOfConfig":"53"},{"size":591,"mtime":1611115168078,"results":"89","hashOfConfig":"53"},{"size":549,"mtime":1611123188291,"results":"90","hashOfConfig":"53"},{"size":603,"mtime":1611110463090,"results":"91","hashOfConfig":"53"},{"size":545,"mtime":1611124910415,"results":"92","hashOfConfig":"53"},{"size":8839,"mtime":1611982957759,"results":"93","hashOfConfig":"53"},{"size":1025,"mtime":1611952458546,"results":"94","hashOfConfig":"53"},{"size":183,"mtime":1611089866713,"results":"95","hashOfConfig":"53"},{"size":1854,"mtime":1611975435228,"results":"96","hashOfConfig":"53"},{"size":813,"mtime":1611110368258,"results":"97","hashOfConfig":"53"},{"size":813,"mtime":1611124692513,"results":"98","hashOfConfig":"53"},{"size":737,"mtime":1611713490852,"results":"99","hashOfConfig":"53"},{"size":1045,"mtime":1611684574604,"results":"100","hashOfConfig":"53"},{"size":1916,"mtime":1611981260635,"results":"101","hashOfConfig":"53"},{"size":1041,"mtime":1611975851162,"results":"102","hashOfConfig":"53"},{"size":437,"mtime":1611975446036,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"12k38qk",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/themes/ligth.ts",[],["218","219","220","221","222"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/CreateClient/index.tsx",["223"],"/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Input from '../../../components/UnformFields/Input';\nimport Select from '../../../components/UnformFields/Select';\nimport DatePicker from '../../../components/UnformFields/DatePicker';\nimport { cpfMask, cnpjMask, phoneMask, cepMask } from '../../../utils/masks';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\nimport '../../../styles/customreactselect.css';\nimport '../../../styles/customreactdatepicker.css';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n\n    const affiliationOptions = [\n        { value: 1, label: 'Masculino' },\n        { value: 2, label: 'Feminino' },\n    ];\n\n    const states = [\n        { value: 'AL', label: 'Alagoas' },\n        { value: 'AC', label: 'Acre' },\n        { value: 'AP', label: 'Amapá' },\n        { value: 'AM', label: 'Amazonas' },\n        { value: 'BA', label: 'Bahia' },\n        { value: 'CE', label: 'Ceará' },\n        { value: 'DF', label: 'Distrito Federal' },\n        { value: 'ES', label: 'Espírito Santo' },\n        { value: 'GO', label: 'Goías' },\n        { value: 'MA', label: 'Maranhão' },\n        { value: 'MT', label: 'Mato Grosso' },\n        { value: 'MS', label: 'Mato Grosso do Sul' },\n        { value: 'MG', label: 'Minas Gerais' },\n        { value: 'PA', label: 'Pará' },\n        { value: 'PB', label: 'Paraíba' },\n        { value: 'PR', label: 'Paraná' },\n        { value: 'PE', label: 'Pernambuco' },\n        { value: 'PI', label: 'Piauí' },\n        { value: 'RJ', label: 'Rio de Janeiro' },\n        { value: 'RN', label: 'Rio Grande do Norte' },\n        { value: 'RS', label: 'Rio Grande do Sul' },\n        { value: 'RO', label: 'Rondônia' },\n        { value: 'RR', label: 'Roraíma' },\n        { value: 'SC', label: 'Santa Catarina' },\n        { value: 'SP', label: 'São Paulo' },\n        { value: 'SE', label: 'Sergipe' },\n        { value: 'TO', label: 'Tocantins' },\n    ];\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        nome: string;\n        dataDeNascimento: string;\n        numeroCPFouCNPJ: string;\n        email: string;\n        celular: string;\n        sexo: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Cliente\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo cliente</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"nome\" label=\"Nome Completo\" />\n                        <div id=\"rowOne\">\n                            <DatePicker\n                                label=\"Data de nascimento\"\n                                name=\"dataDeNascimento\"\n                                dateFormat=\"dd/MM/yyyy\"\n                            />\n                            {/* <Input\n                                name=\"dataDeNascimento\"\n                                label=\"Data de nascimento\"\n                            /> */}\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF/CNPJ\"\n                                value={\n                                    tipoPessoa.length > 14\n                                        ? cnpjMask(tipoPessoa)\n                                        : cpfMask(tipoPessoa)\n                                }\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Input\n                                name=\"celular\"\n                                label=\"Celular\"\n                                onChange={e => setPhoneNumber(e.target.value)}\n                                value={phoneMask(phoneNumber)}\n                            />\n                        </div>\n                        <div id=\"rowTwo\">\n                            <Input name=\"email\" label=\"E-mail\" />\n                            <Select\n                                label=\"Sexo\"\n                                name=\"sexo\"\n                                classNamePrefix=\"react-select\"\n                                defaultValue={affiliationOptions[0]}\n                                options={affiliationOptions}\n                                isSearchable={false}\n                                blurInputOnSelect\n                                openMenuOnFocus\n                            />\n                        </div>\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input\n                                        name=\"cep\"\n                                        label=\"CEP\"\n                                        onChange={e =>\n                                            setCepNumber(e.target.value)\n                                        }\n                                        value={cepMask(cepNumber)}\n                                    />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Select\n                                        label=\"Estado\"\n                                        name=\"estado\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={states}\n                                        isSearchable={false}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Content/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/styles.ts",[],["224","225","226","227","228"],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/routes/app.routes.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/index.tsx",["229","230","231"],"import React from 'react';\nimport ProviderCard from '../../components/ProviderCard';\nimport AddProviderModal from './CreateService';\n\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Providers: React.FC = () => {\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Serviços</h1>\n                <div>\n                    <AddProviderModal />\n                    <div>\n                        <input />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            {/*  <ClientList>\n                <ClientListHeader>\n                    <h3>Fornecedor</h3>\n                    <h3>CPF/CNPJ</h3>\n                    <h3>Contato</h3>\n                    <h3>Telefone</h3>\n                </ClientListHeader>\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n                <ProviderCard\n                    nome=\"Fulano da Silva\"\n                    cpfoucnpj=\"18.707.226/0001-92\"\n                    nomeContato=\"fulano\"\n                    telefone=\"(62) 35587807\"\n                />\n            </ClientList> */}\n        </Container>\n    );\n};\n\nexport default Providers;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/index.tsx",["232"],"import React, { useEffect } from 'react';\nimport $ from 'jquery';\n\nimport {\n    MdDashboard,\n    MdArrowDownward,\n    MdArrowUpward,\n    MdExitToApp,\n    MdPerson,\n    MdWork,\n} from 'react-icons/md';\n\nimport { AiOutlineCodeSandbox } from 'react-icons/ai';\nimport {\n    Container,\n    Header,\n    MenuContainer,\n    MenuItemLink,\n    LogImg,\n    Title,\n} from './styles';\nimport Logo from '../../assets/images/logo.png';\n\nconst Aside: React.FC = () => {\n    useEffect(() => {\n        $('#menu a').click(event => {\n            $(event.target)\n                .addClass('highlight')\n                .siblings('a')\n                .removeClass('highlight');\n        });\n    }, []);\n\n    return (\n        <Container>\n            <Header>\n                <LogImg src={Logo} alt=\"Logo\" />\n                {/*                 <Title>Beauty Business</Title>\n                 */}\n            </Header>\n            <MenuContainer id=\"menu\">\n                <MenuItemLink to=\"/dashboard\">\n                    <MdDashboard />\n                    Dashboard\n                </MenuItemLink>\n                <MenuItemLink to=\"/clients\">\n                    <MdPerson />\n                    Clientes\n                </MenuItemLink>\n                <MenuItemLink to=\"/providers\">\n                    <AiOutlineCodeSandbox />\n                    Fornecedores\n                </MenuItemLink>\n                <MenuItemLink to=\"/services\">\n                    <MdWork />\n                    Serviços\n                </MenuItemLink>\n                <MenuItemLink to=\"/list/entry-balance\">\n                    <MdArrowUpward />\n                    Entradas\n                </MenuItemLink>\n                <MenuItemLink to=\"/list/exit-balance\">\n                    <MdArrowDownward />\n                    Saidas\n                </MenuItemLink>\n                <MenuItemLink to=\"#\">\n                    <MdExitToApp />\n                    Sair\n                </MenuItemLink>\n            </MenuContainer>\n        </Container>\n    );\n};\n\nexport default Aside;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Select/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Services/CreateService/index.tsx",["233","234","235","236","237","238","239"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Input from '../../../components/UnformFields/Input';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Serviço\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo serviço</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    {/*  <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"numeroCPFouCNPJ\" label=\"CNPJ/CPF\" />\n                        <Input name=\"razaoSocial\" label=\"Razão social\" />\n                        <Input name=\"email\" label=\"E-mail\" />\n\n                        <div id=\"rowOne\">\n                            <Input name=\"contato\" label=\"Contato\" />\n                            <Input name=\"telefone\" label=\"Telefone\" />\n                            <Input name=\"celular\" label=\"Celular\" />\n                        </div>\n                        <Input name=\"observacoes\" label=\"Observações\" />\n\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input name=\"cep\" label=\"CEP\" />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Input name=\"estado\" label=\"Estado\" />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm> */}\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Aside/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/index.tsx",["240"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\nimport { Container } from './styles';\n\ninterface IDropdownProps {\n    options: {\n        title: string;\n        link: string;\n        externalLink: boolean;\n        clickEvent?: () => void;\n    }[];\n    title: string;\n}\n\nconst Dropdown: React.FC<IDropdownProps> = ({ options, title }) => {\n    return (\n        <Container>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" type=\"button\">\n                    {title}\n                    <MdKeyboardArrowDown size={16} />\n                </button>\n                <div className=\"dropdown-content\">\n                    {options.map(option =>\n                        option.externalLink ? (\n                            <a key={option.title} href={option.link}>\n                                {option.title}\n                            </a>\n                        ) : (\n                            <Link\n                                key={option.title}\n                                to={option.link}\n                                onClick={option.clickEvent}\n                            >\n                                {option.title}\n                            </Link>\n                        ),\n                    )}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dropdown;\n\n/*\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n            externalLink: PropTypes.bool.isRequired,\n            clickEvent: PropTypes.func,\n        }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}; */\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/App.tsx",["241"],"import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/global';\nimport dark from './styles/themes/dark';\nimport ligth from './styles/themes/ligth';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <ThemeProvider theme={ligth}>\n        <Routes />\n        <GlobalStyle />\n    </ThemeProvider>\n);\n\nexport default App;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/styles/global.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/index.tsx",["242"],"/* eslint-disable react/jsx-indent */\nimport React, { useState } from 'react';\nimport ClientCard from '../../components/ClientCard';\nimport AddClientModal from './CreateClient';\nimport {\n    Container,\n    ClientSearchContainer,\n    ClientList,\n    ClientListHeader,\n} from './styles';\n\nconst Clients: React.FC = () => {\n    const clients = [\n        {\n            nome: 'Kamillah',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Gabriel',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Marcos',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Manuela',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '150',\n        },\n        {\n            nome: 'Camila',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Paulo',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Joana',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Maria',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Kleber',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Marta',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n        {\n            nome: 'Leonardo',\n            telefone: '35589885',\n            ultimoServico: '10/11/2020',\n            ticketMedio: '250',\n        },\n    ];\n    const [searchTerm, setSearchTerm] = useState('');\n    const [clientsList, setClientsList] = useState(clients);\n\n    function searchClient(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <Container>\n            <ClientSearchContainer>\n                <h1>Clientes</h1>\n                <div>\n                    <AddClientModal />\n                    <div>\n                        <input onChange={searchClient} />\n                        <button className=\"searchButton \" type=\"button\">\n                            Pesquisar\n                        </button>\n                    </div>\n                </div>\n            </ClientSearchContainer>\n            <ClientList>\n                <ClientListHeader>\n                    <h3>Nome</h3>\n                    <h3>Telefone</h3>\n                    <h3>Último Serviço</h3>\n                    <h3>Ticket Médio</h3>\n                </ClientListHeader>\n                {clientsList.map(client =>\n                    Object.values(client).some(key =>\n                        key\n                            .toLocaleUpperCase()\n                            .startsWith(searchTerm.toLocaleUpperCase()),\n                    ) ? (\n                        <ClientCard\n                            key={client.nome}\n                            nome={client.nome}\n                            telefone={client.telefone}\n                            ultimoServico={client.ultimoServico}\n                            ticketMedio={`R$ ${client.ticketMedio}`}\n                        />\n                    ) : (\n                        []\n                    ),\n                )}\n            </ClientList>\n        </Container>\n    );\n};\n\nexport default Clients;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Dashboard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/SignIn/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/List/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Layout/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ContentHeader/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ClientCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/index.tsx",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Providers/CreateProvider/index.tsx",["243"],"/* eslint-disable react/jsx-curly-newline */\nimport React, { useState, useRef } from 'react';\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport Select from '../../../components/UnformFields/Select';\nimport Input from '../../../components/UnformFields/Input';\nimport { cpfMask, cnpjMask, phoneMask, cepMask } from '../../../utils/masks';\n\nimport { Container, CreateClientModal, CreateClientForm } from './styles';\n\nconst CreateClient: React.FC = () => {\n    const [show, setShow] = useState(false);\n    const formRef = useRef<FormHandles>(null);\n    const [tipoPessoa, setTipoPessoa] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [cellPhoneNumber, setCellPhoneNumber] = useState('');\n    const [cepNumber, setCepNumber] = useState('');\n\n    const states = [\n        { value: 'AL', label: 'Alagoas' },\n        { value: 'AC', label: 'Acre' },\n        { value: 'AP', label: 'Amapá' },\n        { value: 'AM', label: 'Amazonas' },\n        { value: 'BA', label: 'Bahia' },\n        { value: 'CE', label: 'Ceará' },\n        { value: 'DF', label: 'Distrito Federal' },\n        { value: 'ES', label: 'Espírito Santo' },\n        { value: 'GO', label: 'Goías' },\n        { value: 'MA', label: 'Maranhão' },\n        { value: 'MT', label: 'Mato Grosso' },\n        { value: 'MS', label: 'Mato Grosso do Sul' },\n        { value: 'MG', label: 'Minas Gerais' },\n        { value: 'PA', label: 'Pará' },\n        { value: 'PB', label: 'Paraíba' },\n        { value: 'PR', label: 'Paraná' },\n        { value: 'PE', label: 'Pernambuco' },\n        { value: 'PI', label: 'Piauí' },\n        { value: 'RJ', label: 'Rio de Janeiro' },\n        { value: 'RN', label: 'Rio Grande do Norte' },\n        { value: 'RS', label: 'Rio Grande do Sul' },\n        { value: 'RO', label: 'Rondônia' },\n        { value: 'RR', label: 'Roraíma' },\n        { value: 'SC', label: 'Santa Catarina' },\n        { value: 'SP', label: 'São Paulo' },\n        { value: 'SE', label: 'Sergipe' },\n        { value: 'TO', label: 'Tocantins' },\n    ];\n\n    const [showAddressContainer, setShowAddressContainer] = useState(false);\n\n    interface address {\n        cep: string;\n        logradouro: string;\n        numero: string;\n        bairro: string;\n        complemento: string;\n        cidade: string;\n        estado: string;\n    }\n\n    interface FormData {\n        numeroCPFouCNPJ: string;\n        razaoSocial: string;\n        contato: string;\n        telefone: string;\n        email: string;\n        celular: string;\n        observacoes: string;\n        endereco: address;\n    }\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    function handleShow() {\n        setShow(true);\n    }\n\n    const handleCreateClientSubmit: SubmitHandler<FormData> = data => {\n        console.log(data);\n    };\n\n    return (\n        <Container>\n            <button\n                className=\"fibre-button fibre-button--default\"\n                type=\"button\"\n                onClick={handleShow}\n            >\n                Novo Fornecedor\n            </button>\n            <CreateClientModal\n                show={show}\n                onHide={handleClose}\n                className=\"baseModalStyle\"\n                backdrop=\"static\"\n                size=\"xl\"\n            >\n                <CreateClientModal.Header>\n                    <CreateClientModal.Title>\n                        {/*  <MdDvr size={30} />\n                        <FaPlus id=\"plus\" size={18} /> */}\n                        <h5>Adicionar novo fornecedor</h5>\n                    </CreateClientModal.Title>\n                </CreateClientModal.Header>\n                <CreateClientModal.Body>\n                    <CreateClientForm\n                        id=\"form\"\n                        onSubmit={handleCreateClientSubmit}\n                        ref={formRef}\n                    >\n                        <Input name=\"razaoSocial\" label=\"Razão social\" />\n\n                        <div id=\"rowTwo\">\n                            <Input\n                                name=\"numeroCPFouCNPJ\"\n                                label=\"CPF/CNPJ\"\n                                value={\n                                    tipoPessoa.length > 14\n                                        ? cnpjMask(tipoPessoa)\n                                        : cpfMask(tipoPessoa)\n                                }\n                                onChange={e => setTipoPessoa(e.target.value)}\n                            />\n                            <Input name=\"email\" label=\"E-mail\" />\n                        </div>\n\n                        <div id=\"rowOne\">\n                            <Input name=\"contato\" label=\"Contato\" />\n                            <Input\n                                name=\"telefone\"\n                                label=\"Telefone\"\n                                onChange={e => setPhoneNumber(e.target.value)}\n                                value={phoneMask(phoneNumber)}\n                            />\n                            <Input\n                                name=\"celular\"\n                                label=\"Celular\"\n                                onChange={e =>\n                                    setCellPhoneNumber(e.target.value)\n                                }\n                                value={phoneMask(cellPhoneNumber)}\n                            />\n                        </div>\n                        <Input name=\"observacoes\" label=\"Observações\" />\n\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                setShowAddressContainer(!showAddressContainer)\n                            }\n                        >\n                            {showAddressContainer\n                                ? 'Ocultar Endereço'\n                                : 'Mostrar Endereço'}\n                        </button>\n                        {showAddressContainer && (\n                            <>\n                                <div id=\"rowTree\">\n                                    <Input\n                                        name=\"cep\"\n                                        label=\"CEP\"\n                                        onChange={e =>\n                                            setCepNumber(e.target.value)\n                                        }\n                                        value={cepMask(cepNumber)}\n                                    />\n                                    <Input\n                                        name=\"logradouro\"\n                                        label=\"Logradouro\"\n                                    />\n                                    <Input name=\"numero\" label=\"Número\" />\n                                    <Input name=\"bairro\" label=\"Bairro\" />\n                                </div>\n\n                                <div id=\"rowFour\">\n                                    <Input\n                                        name=\"complemento\"\n                                        label=\"Complemento\"\n                                    />\n                                    <Input name=\"cidade\" label=\"Cidade\" />\n                                    <Select\n                                        label=\"Estado\"\n                                        name=\"estado\"\n                                        classNamePrefix=\"react-select\"\n                                        defaultValue={{\n                                            label: 'Selecione',\n                                            value: 0,\n                                        }}\n                                        options={states}\n                                        isSearchable={false}\n                                        blurInputOnSelect\n                                        openMenuOnFocus\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </CreateClientForm>\n                </CreateClientModal.Body>\n                <CreateClientModal.Footer>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"button\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </button>\n                    <button\n                        className=\"fibre-button fibre-button--cancel\"\n                        type=\"submit\"\n                        form=\"form\"\n                        onClick={handleClose}\n                    >\n                        Salvar\n                    </button>\n                </CreateClientModal.Footer>\n            </CreateClientModal>\n        </Container>\n    );\n};\n\nexport default CreateClient;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/index.tsx",["244","245"],"import React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport Toggle from '../Toggle';\nimport { Container, Profile, Welcome } from './styles';\nimport Dropdown from '../Dropdown';\n\nconst MainHeader: React.FC = () => {\n    const profileMenu = [\n        {\n            title: 'Perfil',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste1',\n            link: '',\n            externalLink: false,\n        },\n        {\n            title: 'Teste2',\n            link: '',\n            externalLink: false,\n        },\n    ];\n\n    return (\n        <Container>\n            {/*             <Toggle />\n             */}\n            <div />\n            <Profile>\n                <BsPeopleCircle size={25} />\n                <Dropdown title=\"Anderson Tartari\" options={profileMenu} />\n            </Profile>\n            {/* <Profile>\n                <Welcome>Olá, Anderson.</Welcome>\n            </Profile> */}\n        </Container>\n    );\n};\n\nexport default MainHeader;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/SelectInput/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/pages/Clients/CreateClient/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/HistoryFinanceCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/ProviderCard/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/MainHeader/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/utils/masks.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/DatePicker/index.tsx",["246","247"],"/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\nimport MaskedTextInput from 'react-text-mask';\nimport { useField } from '@unform/core';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container } from './styles';\n\ninterface Props extends Omit<ReactDatePickerProps, 'onChange'> {\n    name: string;\n    label?: string;\n}\nconst DatePicker: React.FC<Props> = ({ name, label, ...rest }) => {\n    const datepickerRef = useRef(null);\n    const { fieldName, registerField, defaultValue, error } = useField(name);\n    const [date, setDate] = useState(defaultValue || null);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: datepickerRef.current,\n            path: 'props.selected',\n            clearValue: (ref: any) => {\n                ref.clear();\n            },\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container>\n            {label && <label htmlFor={fieldName}>{label}</label>}\n            <ReactDatePicker\n                ref={datepickerRef}\n                selected={date}\n                onChange={setDate}\n                customInput={\n                    <MaskedTextInput\n                        type=\"text\"\n                        mask={[\n                            /\\d/,\n                            /\\d/,\n                            '/',\n                            /\\d/,\n                            /\\d/,\n                            '/',\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                        ]}\n                    />\n                }\n                {...rest}\n            />\n        </Container>\n    );\n};\nexport default DatePicker;\n","/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/Dropdown/styles.ts",[],"/home/leonrodd/Documents/BeautyBusiness/BeautyBusiness-Frontend/beautybusiness-frontend/src/components/UnformFields/Input/styles.ts",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":86,"column":9,"nodeType":"260","messageId":"261","endLine":86,"endColumn":20},{"ruleId":"248","replacedBy":"262"},{"ruleId":"250","replacedBy":"263"},{"ruleId":"252","replacedBy":"264"},{"ruleId":"254","replacedBy":"265"},{"ruleId":"256","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":20},{"ruleId":"267","severity":1,"message":"271","line":8,"column":5,"nodeType":"269","messageId":"270","endLine":8,"endColumn":15},{"ruleId":"267","severity":1,"message":"272","line":9,"column":5,"nodeType":"269","messageId":"270","endLine":9,"endColumn":21},{"ruleId":"267","severity":1,"message":"273","line":20,"column":5,"nodeType":"269","messageId":"270","endLine":20,"endColumn":10},{"ruleId":"267","severity":1,"message":"274","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":13},{"ruleId":"267","severity":1,"message":"275","line":6,"column":40,"nodeType":"269","messageId":"270","endLine":6,"endColumn":56},{"ruleId":"267","severity":1,"message":"276","line":10,"column":11,"nodeType":"269","messageId":"270","endLine":10,"endColumn":18},{"ruleId":"267","severity":1,"message":"277","line":11,"column":12,"nodeType":"269","messageId":"270","endLine":11,"endColumn":32},{"ruleId":"267","severity":1,"message":"278","line":11,"column":34,"nodeType":"269","messageId":"270","endLine":11,"endColumn":57},{"ruleId":"267","severity":1,"message":"279","line":42,"column":11,"nodeType":"269","messageId":"270","endLine":42,"endColumn":60},{"ruleId":"258","severity":1,"message":"259","line":43,"column":9,"nodeType":"260","messageId":"261","endLine":43,"endColumn":20},{"ruleId":"267","severity":1,"message":"280","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":17},{"ruleId":"267","severity":1,"message":"281","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":12},{"ruleId":"267","severity":1,"message":"282","line":82,"column":25,"nodeType":"269","messageId":"270","endLine":82,"endColumn":39},{"ruleId":"258","severity":1,"message":"259","line":80,"column":9,"nodeType":"260","messageId":"261","endLine":80,"endColumn":20},{"ruleId":"267","severity":1,"message":"283","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"284","line":4,"column":30,"nodeType":"269","messageId":"270","endLine":4,"endColumn":37},{"ruleId":"267","severity":1,"message":"285","line":16,"column":53,"nodeType":"269","messageId":"270","endLine":16,"endColumn":58},{"ruleId":"286","severity":1,"message":"287","line":23,"column":31,"nodeType":"288","messageId":"289","endLine":23,"endColumn":34,"suggestions":"290"},"lines-around-directive",["291"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["291"],[],[],[],[],"@typescript-eslint/no-unused-vars","'ProviderCard' is defined but never used.","Identifier","unusedVar","'ClientList' is defined but never used.","'ClientListHeader' is defined but never used.","'Title' is defined but never used.","'Input' is defined but never used.","'CreateClientForm' is defined but never used.","'formRef' is assigned a value but never used.","'showAddressContainer' is assigned a value but never used.","'setShowAddressContainer' is assigned a value but never used.","'handleCreateClientSubmit' is assigned a value but never used.","'PropTypes' is defined but never used.","'dark' is defined but never used.","'setClientsList' is assigned a value but never used.","'Toggle' is defined but never used.","'Welcome' is defined but never used.","'error' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["292","293"],"padding-line-between-statements",{"messageId":"294","fix":"295","desc":"296"},{"messageId":"297","fix":"298","desc":"299"},"suggestUnknown",{"range":"300","text":"301"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"300","text":"302"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[943,946],"unknown","never"]